// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/07/2019 22:50:13"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    microcontroller
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module microcontroller_vlg_sample_tst(
	clock,
	reset,
	sampler_tx
);
input  clock;
input  reset;
output sampler_tx;

reg sample;
time current_time;
always @(clock or reset)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module microcontroller_vlg_check_tst (
	debug_ALU_input_0,
	debug_ALU_input_1,
	debug_ALU_operation,
	debug_ALU_output,
	debug_ALU_output_from_EX,
	debug_ALU_output_from_MEM,
	debug_controller_state,
	debug_forward_mux_0,
	debug_forward_mux_1,
	debug_immediate,
	debug_instruction,
	debug_mux0_sel,
	debug_mux0_sel_from_MEM,
	debug_PC_operation,
	debug_pc_output,
	debug_reg_file_read_address_0,
	debug_reg_file_read_address_0_ID_EXE,
	debug_reg_file_read_address_1,
	debug_reg_file_write_address_EX_MEM,
	debug_reg_file_write_address_from_MEM,
	debug_reg_file_write_from_MEM,
	debug_regfile_write,
	debug_regfile_x1_output,
	debug_regfile_x2_output,
	debug_regfile_x31_output,
	debug_register_file_output_0,
	debug_register_file_output_0_from_ID,
	debug_register_file_output_1,
	debug_register_file_output_1_from_ID,
	sampler_rx
);
input [31:0] debug_ALU_input_0;
input [31:0] debug_ALU_input_1;
input [3:0] debug_ALU_operation;
input [31:0] debug_ALU_output;
input [31:0] debug_ALU_output_from_EX;
input [31:0] debug_ALU_output_from_MEM;
input [2:0] debug_controller_state;
input [1:0] debug_forward_mux_0;
input [1:0] debug_forward_mux_1;
input [31:0] debug_immediate;
input [31:0] debug_instruction;
input [1:0] debug_mux0_sel;
input [1:0] debug_mux0_sel_from_MEM;
input [2:0] debug_PC_operation;
input [31:0] debug_pc_output;
input [4:0] debug_reg_file_read_address_0;
input [4:0] debug_reg_file_read_address_0_ID_EXE;
input [4:0] debug_reg_file_read_address_1;
input [4:0] debug_reg_file_write_address_EX_MEM;
input [4:0] debug_reg_file_write_address_from_MEM;
input  debug_reg_file_write_from_MEM;
input  debug_regfile_write;
input [31:0] debug_regfile_x1_output;
input [31:0] debug_regfile_x2_output;
input [31:0] debug_regfile_x31_output;
input [31:0] debug_register_file_output_0;
input [31:0] debug_register_file_output_0_from_ID;
input [31:0] debug_register_file_output_1;
input [31:0] debug_register_file_output_1_from_ID;
input sampler_rx;

reg [31:0] debug_ALU_input_0_expected;
reg [31:0] debug_ALU_input_1_expected;
reg [3:0] debug_ALU_operation_expected;
reg [31:0] debug_ALU_output_expected;
reg [31:0] debug_ALU_output_from_EX_expected;
reg [31:0] debug_ALU_output_from_MEM_expected;
reg [2:0] debug_controller_state_expected;
reg [1:0] debug_forward_mux_0_expected;
reg [1:0] debug_forward_mux_1_expected;
reg [31:0] debug_immediate_expected;
reg [31:0] debug_instruction_expected;
reg [1:0] debug_mux0_sel_expected;
reg [1:0] debug_mux0_sel_from_MEM_expected;
reg [2:0] debug_PC_operation_expected;
reg [31:0] debug_pc_output_expected;
reg [4:0] debug_reg_file_read_address_0_expected;
reg [4:0] debug_reg_file_read_address_0_ID_EXE_expected;
reg [4:0] debug_reg_file_read_address_1_expected;
reg [4:0] debug_reg_file_write_address_EX_MEM_expected;
reg [4:0] debug_reg_file_write_address_from_MEM_expected;
reg  debug_reg_file_write_from_MEM_expected;
reg  debug_regfile_write_expected;
reg [31:0] debug_regfile_x1_output_expected;
reg [31:0] debug_regfile_x2_output_expected;
reg [31:0] debug_regfile_x31_output_expected;
reg [31:0] debug_register_file_output_0_expected;
reg [31:0] debug_register_file_output_0_from_ID_expected;
reg [31:0] debug_register_file_output_1_expected;
reg [31:0] debug_register_file_output_1_from_ID_expected;

reg [31:0] debug_ALU_input_0_prev;
reg [31:0] debug_ALU_input_1_prev;
reg [3:0] debug_ALU_operation_prev;
reg [31:0] debug_ALU_output_prev;
reg [31:0] debug_ALU_output_from_EX_prev;
reg [31:0] debug_ALU_output_from_MEM_prev;
reg [2:0] debug_controller_state_prev;
reg [1:0] debug_forward_mux_0_prev;
reg [1:0] debug_forward_mux_1_prev;
reg [31:0] debug_immediate_prev;
reg [31:0] debug_instruction_prev;
reg [1:0] debug_mux0_sel_prev;
reg [1:0] debug_mux0_sel_from_MEM_prev;
reg [2:0] debug_PC_operation_prev;
reg [31:0] debug_pc_output_prev;
reg [4:0] debug_reg_file_read_address_0_prev;
reg [4:0] debug_reg_file_read_address_0_ID_EXE_prev;
reg [4:0] debug_reg_file_read_address_1_prev;
reg [4:0] debug_reg_file_write_address_EX_MEM_prev;
reg [4:0] debug_reg_file_write_address_from_MEM_prev;
reg  debug_reg_file_write_from_MEM_prev;
reg  debug_regfile_write_prev;
reg [31:0] debug_regfile_x1_output_prev;
reg [31:0] debug_regfile_x2_output_prev;
reg [31:0] debug_regfile_x31_output_prev;
reg [31:0] debug_register_file_output_0_prev;
reg [31:0] debug_register_file_output_0_from_ID_prev;
reg [31:0] debug_register_file_output_1_prev;
reg [31:0] debug_register_file_output_1_from_ID_prev;

reg [31:0] debug_ALU_input_0_expected_prev;
reg [31:0] debug_ALU_input_1_expected_prev;
reg [3:0] debug_ALU_operation_expected_prev;
reg [31:0] debug_ALU_output_expected_prev;
reg [31:0] debug_ALU_output_from_EX_expected_prev;
reg [31:0] debug_ALU_output_from_MEM_expected_prev;
reg [2:0] debug_controller_state_expected_prev;
reg [1:0] debug_forward_mux_0_expected_prev;
reg [1:0] debug_forward_mux_1_expected_prev;
reg [31:0] debug_immediate_expected_prev;
reg [31:0] debug_instruction_expected_prev;
reg [1:0] debug_mux0_sel_expected_prev;
reg [1:0] debug_mux0_sel_from_MEM_expected_prev;
reg [2:0] debug_PC_operation_expected_prev;
reg [31:0] debug_pc_output_expected_prev;
reg [4:0] debug_reg_file_read_address_0_expected_prev;
reg [4:0] debug_reg_file_read_address_0_ID_EXE_expected_prev;
reg [4:0] debug_reg_file_read_address_1_expected_prev;
reg [4:0] debug_reg_file_write_address_EX_MEM_expected_prev;
reg [4:0] debug_reg_file_write_address_from_MEM_expected_prev;
reg  debug_reg_file_write_from_MEM_expected_prev;
reg  debug_regfile_write_expected_prev;
reg [31:0] debug_regfile_x1_output_expected_prev;
reg [31:0] debug_regfile_x2_output_expected_prev;
reg [31:0] debug_regfile_x31_output_expected_prev;
reg [31:0] debug_register_file_output_0_expected_prev;
reg [31:0] debug_register_file_output_0_from_ID_expected_prev;
reg [31:0] debug_register_file_output_1_expected_prev;
reg [31:0] debug_register_file_output_1_from_ID_expected_prev;

reg [31:0] last_debug_ALU_input_0_exp;
reg [31:0] last_debug_ALU_input_1_exp;
reg [3:0] last_debug_ALU_operation_exp;
reg [31:0] last_debug_ALU_output_exp;
reg [31:0] last_debug_ALU_output_from_EX_exp;
reg [31:0] last_debug_ALU_output_from_MEM_exp;
reg [2:0] last_debug_controller_state_exp;
reg [1:0] last_debug_forward_mux_0_exp;
reg [1:0] last_debug_forward_mux_1_exp;
reg [31:0] last_debug_immediate_exp;
reg [31:0] last_debug_instruction_exp;
reg [1:0] last_debug_mux0_sel_exp;
reg [1:0] last_debug_mux0_sel_from_MEM_exp;
reg [2:0] last_debug_PC_operation_exp;
reg [31:0] last_debug_pc_output_exp;
reg [4:0] last_debug_reg_file_read_address_0_exp;
reg [4:0] last_debug_reg_file_read_address_0_ID_EXE_exp;
reg [4:0] last_debug_reg_file_read_address_1_exp;
reg [4:0] last_debug_reg_file_write_address_EX_MEM_exp;
reg [4:0] last_debug_reg_file_write_address_from_MEM_exp;
reg  last_debug_reg_file_write_from_MEM_exp;
reg  last_debug_regfile_write_exp;
reg [31:0] last_debug_regfile_x1_output_exp;
reg [31:0] last_debug_regfile_x2_output_exp;
reg [31:0] last_debug_regfile_x31_output_exp;
reg [31:0] last_debug_register_file_output_0_exp;
reg [31:0] last_debug_register_file_output_0_from_ID_exp;
reg [31:0] last_debug_register_file_output_1_exp;
reg [31:0] last_debug_register_file_output_1_from_ID_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:29] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 29'b1;
end

// update real /o prevs

always @(trigger)
begin
	debug_ALU_input_0_prev = debug_ALU_input_0;
	debug_ALU_input_1_prev = debug_ALU_input_1;
	debug_ALU_operation_prev = debug_ALU_operation;
	debug_ALU_output_prev = debug_ALU_output;
	debug_ALU_output_from_EX_prev = debug_ALU_output_from_EX;
	debug_ALU_output_from_MEM_prev = debug_ALU_output_from_MEM;
	debug_controller_state_prev = debug_controller_state;
	debug_forward_mux_0_prev = debug_forward_mux_0;
	debug_forward_mux_1_prev = debug_forward_mux_1;
	debug_immediate_prev = debug_immediate;
	debug_instruction_prev = debug_instruction;
	debug_mux0_sel_prev = debug_mux0_sel;
	debug_mux0_sel_from_MEM_prev = debug_mux0_sel_from_MEM;
	debug_PC_operation_prev = debug_PC_operation;
	debug_pc_output_prev = debug_pc_output;
	debug_reg_file_read_address_0_prev = debug_reg_file_read_address_0;
	debug_reg_file_read_address_0_ID_EXE_prev = debug_reg_file_read_address_0_ID_EXE;
	debug_reg_file_read_address_1_prev = debug_reg_file_read_address_1;
	debug_reg_file_write_address_EX_MEM_prev = debug_reg_file_write_address_EX_MEM;
	debug_reg_file_write_address_from_MEM_prev = debug_reg_file_write_address_from_MEM;
	debug_reg_file_write_from_MEM_prev = debug_reg_file_write_from_MEM;
	debug_regfile_write_prev = debug_regfile_write;
	debug_regfile_x1_output_prev = debug_regfile_x1_output;
	debug_regfile_x2_output_prev = debug_regfile_x2_output;
	debug_regfile_x31_output_prev = debug_regfile_x31_output;
	debug_register_file_output_0_prev = debug_register_file_output_0;
	debug_register_file_output_0_from_ID_prev = debug_register_file_output_0_from_ID;
	debug_register_file_output_1_prev = debug_register_file_output_1;
	debug_register_file_output_1_from_ID_prev = debug_register_file_output_1_from_ID;
end

// update expected /o prevs

always @(trigger)
begin
	debug_ALU_input_0_expected_prev = debug_ALU_input_0_expected;
	debug_ALU_input_1_expected_prev = debug_ALU_input_1_expected;
	debug_ALU_operation_expected_prev = debug_ALU_operation_expected;
	debug_ALU_output_expected_prev = debug_ALU_output_expected;
	debug_ALU_output_from_EX_expected_prev = debug_ALU_output_from_EX_expected;
	debug_ALU_output_from_MEM_expected_prev = debug_ALU_output_from_MEM_expected;
	debug_controller_state_expected_prev = debug_controller_state_expected;
	debug_forward_mux_0_expected_prev = debug_forward_mux_0_expected;
	debug_forward_mux_1_expected_prev = debug_forward_mux_1_expected;
	debug_immediate_expected_prev = debug_immediate_expected;
	debug_instruction_expected_prev = debug_instruction_expected;
	debug_mux0_sel_expected_prev = debug_mux0_sel_expected;
	debug_mux0_sel_from_MEM_expected_prev = debug_mux0_sel_from_MEM_expected;
	debug_PC_operation_expected_prev = debug_PC_operation_expected;
	debug_pc_output_expected_prev = debug_pc_output_expected;
	debug_reg_file_read_address_0_expected_prev = debug_reg_file_read_address_0_expected;
	debug_reg_file_read_address_0_ID_EXE_expected_prev = debug_reg_file_read_address_0_ID_EXE_expected;
	debug_reg_file_read_address_1_expected_prev = debug_reg_file_read_address_1_expected;
	debug_reg_file_write_address_EX_MEM_expected_prev = debug_reg_file_write_address_EX_MEM_expected;
	debug_reg_file_write_address_from_MEM_expected_prev = debug_reg_file_write_address_from_MEM_expected;
	debug_reg_file_write_from_MEM_expected_prev = debug_reg_file_write_from_MEM_expected;
	debug_regfile_write_expected_prev = debug_regfile_write_expected;
	debug_regfile_x1_output_expected_prev = debug_regfile_x1_output_expected;
	debug_regfile_x2_output_expected_prev = debug_regfile_x2_output_expected;
	debug_regfile_x31_output_expected_prev = debug_regfile_x31_output_expected;
	debug_register_file_output_0_expected_prev = debug_register_file_output_0_expected;
	debug_register_file_output_0_from_ID_expected_prev = debug_register_file_output_0_from_ID_expected;
	debug_register_file_output_1_expected_prev = debug_register_file_output_1_expected;
	debug_register_file_output_1_from_ID_expected_prev = debug_register_file_output_1_from_ID_expected;
end


// expected debug_instruction[ 31 ]
initial
begin
	debug_instruction_expected[31] = 1'bX;
end 
// expected debug_instruction[ 30 ]
initial
begin
	debug_instruction_expected[30] = 1'bX;
end 
// expected debug_instruction[ 29 ]
initial
begin
	debug_instruction_expected[29] = 1'bX;
end 
// expected debug_instruction[ 28 ]
initial
begin
	debug_instruction_expected[28] = 1'bX;
end 
// expected debug_instruction[ 27 ]
initial
begin
	debug_instruction_expected[27] = 1'bX;
end 
// expected debug_instruction[ 26 ]
initial
begin
	debug_instruction_expected[26] = 1'bX;
end 
// expected debug_instruction[ 25 ]
initial
begin
	debug_instruction_expected[25] = 1'bX;
end 
// expected debug_instruction[ 24 ]
initial
begin
	debug_instruction_expected[24] = 1'bX;
end 
// expected debug_instruction[ 23 ]
initial
begin
	debug_instruction_expected[23] = 1'bX;
end 
// expected debug_instruction[ 22 ]
initial
begin
	debug_instruction_expected[22] = 1'bX;
end 
// expected debug_instruction[ 21 ]
initial
begin
	debug_instruction_expected[21] = 1'bX;
end 
// expected debug_instruction[ 20 ]
initial
begin
	debug_instruction_expected[20] = 1'bX;
end 
// expected debug_instruction[ 19 ]
initial
begin
	debug_instruction_expected[19] = 1'bX;
end 
// expected debug_instruction[ 18 ]
initial
begin
	debug_instruction_expected[18] = 1'bX;
end 
// expected debug_instruction[ 17 ]
initial
begin
	debug_instruction_expected[17] = 1'bX;
end 
// expected debug_instruction[ 16 ]
initial
begin
	debug_instruction_expected[16] = 1'bX;
end 
// expected debug_instruction[ 15 ]
initial
begin
	debug_instruction_expected[15] = 1'bX;
end 
// expected debug_instruction[ 14 ]
initial
begin
	debug_instruction_expected[14] = 1'bX;
end 
// expected debug_instruction[ 13 ]
initial
begin
	debug_instruction_expected[13] = 1'bX;
end 
// expected debug_instruction[ 12 ]
initial
begin
	debug_instruction_expected[12] = 1'bX;
end 
// expected debug_instruction[ 11 ]
initial
begin
	debug_instruction_expected[11] = 1'bX;
end 
// expected debug_instruction[ 10 ]
initial
begin
	debug_instruction_expected[10] = 1'bX;
end 
// expected debug_instruction[ 9 ]
initial
begin
	debug_instruction_expected[9] = 1'bX;
end 
// expected debug_instruction[ 8 ]
initial
begin
	debug_instruction_expected[8] = 1'bX;
end 
// expected debug_instruction[ 7 ]
initial
begin
	debug_instruction_expected[7] = 1'bX;
end 
// expected debug_instruction[ 6 ]
initial
begin
	debug_instruction_expected[6] = 1'bX;
end 
// expected debug_instruction[ 5 ]
initial
begin
	debug_instruction_expected[5] = 1'bX;
end 
// expected debug_instruction[ 4 ]
initial
begin
	debug_instruction_expected[4] = 1'bX;
end 
// expected debug_instruction[ 3 ]
initial
begin
	debug_instruction_expected[3] = 1'bX;
end 
// expected debug_instruction[ 2 ]
initial
begin
	debug_instruction_expected[2] = 1'bX;
end 
// expected debug_instruction[ 1 ]
initial
begin
	debug_instruction_expected[1] = 1'bX;
end 
// expected debug_instruction[ 0 ]
initial
begin
	debug_instruction_expected[0] = 1'bX;
end 
// expected debug_controller_state[ 2 ]
initial
begin
	debug_controller_state_expected[2] = 1'bX;
end 
// expected debug_controller_state[ 1 ]
initial
begin
	debug_controller_state_expected[1] = 1'bX;
end 
// expected debug_controller_state[ 0 ]
initial
begin
	debug_controller_state_expected[0] = 1'bX;
end 
// expected debug_PC_operation[ 2 ]
initial
begin
	debug_PC_operation_expected[2] = 1'bX;
end 
// expected debug_PC_operation[ 1 ]
initial
begin
	debug_PC_operation_expected[1] = 1'bX;
end 
// expected debug_PC_operation[ 0 ]
initial
begin
	debug_PC_operation_expected[0] = 1'bX;
end 
// expected debug_pc_output[ 31 ]
initial
begin
	debug_pc_output_expected[31] = 1'bX;
end 
// expected debug_pc_output[ 30 ]
initial
begin
	debug_pc_output_expected[30] = 1'bX;
end 
// expected debug_pc_output[ 29 ]
initial
begin
	debug_pc_output_expected[29] = 1'bX;
end 
// expected debug_pc_output[ 28 ]
initial
begin
	debug_pc_output_expected[28] = 1'bX;
end 
// expected debug_pc_output[ 27 ]
initial
begin
	debug_pc_output_expected[27] = 1'bX;
end 
// expected debug_pc_output[ 26 ]
initial
begin
	debug_pc_output_expected[26] = 1'bX;
end 
// expected debug_pc_output[ 25 ]
initial
begin
	debug_pc_output_expected[25] = 1'bX;
end 
// expected debug_pc_output[ 24 ]
initial
begin
	debug_pc_output_expected[24] = 1'bX;
end 
// expected debug_pc_output[ 23 ]
initial
begin
	debug_pc_output_expected[23] = 1'bX;
end 
// expected debug_pc_output[ 22 ]
initial
begin
	debug_pc_output_expected[22] = 1'bX;
end 
// expected debug_pc_output[ 21 ]
initial
begin
	debug_pc_output_expected[21] = 1'bX;
end 
// expected debug_pc_output[ 20 ]
initial
begin
	debug_pc_output_expected[20] = 1'bX;
end 
// expected debug_pc_output[ 19 ]
initial
begin
	debug_pc_output_expected[19] = 1'bX;
end 
// expected debug_pc_output[ 18 ]
initial
begin
	debug_pc_output_expected[18] = 1'bX;
end 
// expected debug_pc_output[ 17 ]
initial
begin
	debug_pc_output_expected[17] = 1'bX;
end 
// expected debug_pc_output[ 16 ]
initial
begin
	debug_pc_output_expected[16] = 1'bX;
end 
// expected debug_pc_output[ 15 ]
initial
begin
	debug_pc_output_expected[15] = 1'bX;
end 
// expected debug_pc_output[ 14 ]
initial
begin
	debug_pc_output_expected[14] = 1'bX;
end 
// expected debug_pc_output[ 13 ]
initial
begin
	debug_pc_output_expected[13] = 1'bX;
end 
// expected debug_pc_output[ 12 ]
initial
begin
	debug_pc_output_expected[12] = 1'bX;
end 
// expected debug_pc_output[ 11 ]
initial
begin
	debug_pc_output_expected[11] = 1'bX;
end 
// expected debug_pc_output[ 10 ]
initial
begin
	debug_pc_output_expected[10] = 1'bX;
end 
// expected debug_pc_output[ 9 ]
initial
begin
	debug_pc_output_expected[9] = 1'bX;
end 
// expected debug_pc_output[ 8 ]
initial
begin
	debug_pc_output_expected[8] = 1'bX;
end 
// expected debug_pc_output[ 7 ]
initial
begin
	debug_pc_output_expected[7] = 1'bX;
end 
// expected debug_pc_output[ 6 ]
initial
begin
	debug_pc_output_expected[6] = 1'bX;
end 
// expected debug_pc_output[ 5 ]
initial
begin
	debug_pc_output_expected[5] = 1'bX;
end 
// expected debug_pc_output[ 4 ]
initial
begin
	debug_pc_output_expected[4] = 1'bX;
end 
// expected debug_pc_output[ 3 ]
initial
begin
	debug_pc_output_expected[3] = 1'bX;
end 
// expected debug_pc_output[ 2 ]
initial
begin
	debug_pc_output_expected[2] = 1'bX;
end 
// expected debug_pc_output[ 1 ]
initial
begin
	debug_pc_output_expected[1] = 1'bX;
end 
// expected debug_pc_output[ 0 ]
initial
begin
	debug_pc_output_expected[0] = 1'bX;
end 
// expected debug_regfile_x1_output[ 31 ]
initial
begin
	debug_regfile_x1_output_expected[31] = 1'bX;
end 
// expected debug_regfile_x1_output[ 30 ]
initial
begin
	debug_regfile_x1_output_expected[30] = 1'bX;
end 
// expected debug_regfile_x1_output[ 29 ]
initial
begin
	debug_regfile_x1_output_expected[29] = 1'bX;
end 
// expected debug_regfile_x1_output[ 28 ]
initial
begin
	debug_regfile_x1_output_expected[28] = 1'bX;
end 
// expected debug_regfile_x1_output[ 27 ]
initial
begin
	debug_regfile_x1_output_expected[27] = 1'bX;
end 
// expected debug_regfile_x1_output[ 26 ]
initial
begin
	debug_regfile_x1_output_expected[26] = 1'bX;
end 
// expected debug_regfile_x1_output[ 25 ]
initial
begin
	debug_regfile_x1_output_expected[25] = 1'bX;
end 
// expected debug_regfile_x1_output[ 24 ]
initial
begin
	debug_regfile_x1_output_expected[24] = 1'bX;
end 
// expected debug_regfile_x1_output[ 23 ]
initial
begin
	debug_regfile_x1_output_expected[23] = 1'bX;
end 
// expected debug_regfile_x1_output[ 22 ]
initial
begin
	debug_regfile_x1_output_expected[22] = 1'bX;
end 
// expected debug_regfile_x1_output[ 21 ]
initial
begin
	debug_regfile_x1_output_expected[21] = 1'bX;
end 
// expected debug_regfile_x1_output[ 20 ]
initial
begin
	debug_regfile_x1_output_expected[20] = 1'bX;
end 
// expected debug_regfile_x1_output[ 19 ]
initial
begin
	debug_regfile_x1_output_expected[19] = 1'bX;
end 
// expected debug_regfile_x1_output[ 18 ]
initial
begin
	debug_regfile_x1_output_expected[18] = 1'bX;
end 
// expected debug_regfile_x1_output[ 17 ]
initial
begin
	debug_regfile_x1_output_expected[17] = 1'bX;
end 
// expected debug_regfile_x1_output[ 16 ]
initial
begin
	debug_regfile_x1_output_expected[16] = 1'bX;
end 
// expected debug_regfile_x1_output[ 15 ]
initial
begin
	debug_regfile_x1_output_expected[15] = 1'bX;
end 
// expected debug_regfile_x1_output[ 14 ]
initial
begin
	debug_regfile_x1_output_expected[14] = 1'bX;
end 
// expected debug_regfile_x1_output[ 13 ]
initial
begin
	debug_regfile_x1_output_expected[13] = 1'bX;
end 
// expected debug_regfile_x1_output[ 12 ]
initial
begin
	debug_regfile_x1_output_expected[12] = 1'bX;
end 
// expected debug_regfile_x1_output[ 11 ]
initial
begin
	debug_regfile_x1_output_expected[11] = 1'bX;
end 
// expected debug_regfile_x1_output[ 10 ]
initial
begin
	debug_regfile_x1_output_expected[10] = 1'bX;
end 
// expected debug_regfile_x1_output[ 9 ]
initial
begin
	debug_regfile_x1_output_expected[9] = 1'bX;
end 
// expected debug_regfile_x1_output[ 8 ]
initial
begin
	debug_regfile_x1_output_expected[8] = 1'bX;
end 
// expected debug_regfile_x1_output[ 7 ]
initial
begin
	debug_regfile_x1_output_expected[7] = 1'bX;
end 
// expected debug_regfile_x1_output[ 6 ]
initial
begin
	debug_regfile_x1_output_expected[6] = 1'bX;
end 
// expected debug_regfile_x1_output[ 5 ]
initial
begin
	debug_regfile_x1_output_expected[5] = 1'bX;
end 
// expected debug_regfile_x1_output[ 4 ]
initial
begin
	debug_regfile_x1_output_expected[4] = 1'bX;
end 
// expected debug_regfile_x1_output[ 3 ]
initial
begin
	debug_regfile_x1_output_expected[3] = 1'bX;
end 
// expected debug_regfile_x1_output[ 2 ]
initial
begin
	debug_regfile_x1_output_expected[2] = 1'bX;
end 
// expected debug_regfile_x1_output[ 1 ]
initial
begin
	debug_regfile_x1_output_expected[1] = 1'bX;
end 
// expected debug_regfile_x1_output[ 0 ]
initial
begin
	debug_regfile_x1_output_expected[0] = 1'bX;
end 
// expected debug_regfile_x2_output[ 31 ]
initial
begin
	debug_regfile_x2_output_expected[31] = 1'bX;
end 
// expected debug_regfile_x2_output[ 30 ]
initial
begin
	debug_regfile_x2_output_expected[30] = 1'bX;
end 
// expected debug_regfile_x2_output[ 29 ]
initial
begin
	debug_regfile_x2_output_expected[29] = 1'bX;
end 
// expected debug_regfile_x2_output[ 28 ]
initial
begin
	debug_regfile_x2_output_expected[28] = 1'bX;
end 
// expected debug_regfile_x2_output[ 27 ]
initial
begin
	debug_regfile_x2_output_expected[27] = 1'bX;
end 
// expected debug_regfile_x2_output[ 26 ]
initial
begin
	debug_regfile_x2_output_expected[26] = 1'bX;
end 
// expected debug_regfile_x2_output[ 25 ]
initial
begin
	debug_regfile_x2_output_expected[25] = 1'bX;
end 
// expected debug_regfile_x2_output[ 24 ]
initial
begin
	debug_regfile_x2_output_expected[24] = 1'bX;
end 
// expected debug_regfile_x2_output[ 23 ]
initial
begin
	debug_regfile_x2_output_expected[23] = 1'bX;
end 
// expected debug_regfile_x2_output[ 22 ]
initial
begin
	debug_regfile_x2_output_expected[22] = 1'bX;
end 
// expected debug_regfile_x2_output[ 21 ]
initial
begin
	debug_regfile_x2_output_expected[21] = 1'bX;
end 
// expected debug_regfile_x2_output[ 20 ]
initial
begin
	debug_regfile_x2_output_expected[20] = 1'bX;
end 
// expected debug_regfile_x2_output[ 19 ]
initial
begin
	debug_regfile_x2_output_expected[19] = 1'bX;
end 
// expected debug_regfile_x2_output[ 18 ]
initial
begin
	debug_regfile_x2_output_expected[18] = 1'bX;
end 
// expected debug_regfile_x2_output[ 17 ]
initial
begin
	debug_regfile_x2_output_expected[17] = 1'bX;
end 
// expected debug_regfile_x2_output[ 16 ]
initial
begin
	debug_regfile_x2_output_expected[16] = 1'bX;
end 
// expected debug_regfile_x2_output[ 15 ]
initial
begin
	debug_regfile_x2_output_expected[15] = 1'bX;
end 
// expected debug_regfile_x2_output[ 14 ]
initial
begin
	debug_regfile_x2_output_expected[14] = 1'bX;
end 
// expected debug_regfile_x2_output[ 13 ]
initial
begin
	debug_regfile_x2_output_expected[13] = 1'bX;
end 
// expected debug_regfile_x2_output[ 12 ]
initial
begin
	debug_regfile_x2_output_expected[12] = 1'bX;
end 
// expected debug_regfile_x2_output[ 11 ]
initial
begin
	debug_regfile_x2_output_expected[11] = 1'bX;
end 
// expected debug_regfile_x2_output[ 10 ]
initial
begin
	debug_regfile_x2_output_expected[10] = 1'bX;
end 
// expected debug_regfile_x2_output[ 9 ]
initial
begin
	debug_regfile_x2_output_expected[9] = 1'bX;
end 
// expected debug_regfile_x2_output[ 8 ]
initial
begin
	debug_regfile_x2_output_expected[8] = 1'bX;
end 
// expected debug_regfile_x2_output[ 7 ]
initial
begin
	debug_regfile_x2_output_expected[7] = 1'bX;
end 
// expected debug_regfile_x2_output[ 6 ]
initial
begin
	debug_regfile_x2_output_expected[6] = 1'bX;
end 
// expected debug_regfile_x2_output[ 5 ]
initial
begin
	debug_regfile_x2_output_expected[5] = 1'bX;
end 
// expected debug_regfile_x2_output[ 4 ]
initial
begin
	debug_regfile_x2_output_expected[4] = 1'bX;
end 
// expected debug_regfile_x2_output[ 3 ]
initial
begin
	debug_regfile_x2_output_expected[3] = 1'bX;
end 
// expected debug_regfile_x2_output[ 2 ]
initial
begin
	debug_regfile_x2_output_expected[2] = 1'bX;
end 
// expected debug_regfile_x2_output[ 1 ]
initial
begin
	debug_regfile_x2_output_expected[1] = 1'bX;
end 
// expected debug_regfile_x2_output[ 0 ]
initial
begin
	debug_regfile_x2_output_expected[0] = 1'bX;
end 
// expected debug_regfile_x31_output[ 31 ]
initial
begin
	debug_regfile_x31_output_expected[31] = 1'bX;
end 
// expected debug_regfile_x31_output[ 30 ]
initial
begin
	debug_regfile_x31_output_expected[30] = 1'bX;
end 
// expected debug_regfile_x31_output[ 29 ]
initial
begin
	debug_regfile_x31_output_expected[29] = 1'bX;
end 
// expected debug_regfile_x31_output[ 28 ]
initial
begin
	debug_regfile_x31_output_expected[28] = 1'bX;
end 
// expected debug_regfile_x31_output[ 27 ]
initial
begin
	debug_regfile_x31_output_expected[27] = 1'bX;
end 
// expected debug_regfile_x31_output[ 26 ]
initial
begin
	debug_regfile_x31_output_expected[26] = 1'bX;
end 
// expected debug_regfile_x31_output[ 25 ]
initial
begin
	debug_regfile_x31_output_expected[25] = 1'bX;
end 
// expected debug_regfile_x31_output[ 24 ]
initial
begin
	debug_regfile_x31_output_expected[24] = 1'bX;
end 
// expected debug_regfile_x31_output[ 23 ]
initial
begin
	debug_regfile_x31_output_expected[23] = 1'bX;
end 
// expected debug_regfile_x31_output[ 22 ]
initial
begin
	debug_regfile_x31_output_expected[22] = 1'bX;
end 
// expected debug_regfile_x31_output[ 21 ]
initial
begin
	debug_regfile_x31_output_expected[21] = 1'bX;
end 
// expected debug_regfile_x31_output[ 20 ]
initial
begin
	debug_regfile_x31_output_expected[20] = 1'bX;
end 
// expected debug_regfile_x31_output[ 19 ]
initial
begin
	debug_regfile_x31_output_expected[19] = 1'bX;
end 
// expected debug_regfile_x31_output[ 18 ]
initial
begin
	debug_regfile_x31_output_expected[18] = 1'bX;
end 
// expected debug_regfile_x31_output[ 17 ]
initial
begin
	debug_regfile_x31_output_expected[17] = 1'bX;
end 
// expected debug_regfile_x31_output[ 16 ]
initial
begin
	debug_regfile_x31_output_expected[16] = 1'bX;
end 
// expected debug_regfile_x31_output[ 15 ]
initial
begin
	debug_regfile_x31_output_expected[15] = 1'bX;
end 
// expected debug_regfile_x31_output[ 14 ]
initial
begin
	debug_regfile_x31_output_expected[14] = 1'bX;
end 
// expected debug_regfile_x31_output[ 13 ]
initial
begin
	debug_regfile_x31_output_expected[13] = 1'bX;
end 
// expected debug_regfile_x31_output[ 12 ]
initial
begin
	debug_regfile_x31_output_expected[12] = 1'bX;
end 
// expected debug_regfile_x31_output[ 11 ]
initial
begin
	debug_regfile_x31_output_expected[11] = 1'bX;
end 
// expected debug_regfile_x31_output[ 10 ]
initial
begin
	debug_regfile_x31_output_expected[10] = 1'bX;
end 
// expected debug_regfile_x31_output[ 9 ]
initial
begin
	debug_regfile_x31_output_expected[9] = 1'bX;
end 
// expected debug_regfile_x31_output[ 8 ]
initial
begin
	debug_regfile_x31_output_expected[8] = 1'bX;
end 
// expected debug_regfile_x31_output[ 7 ]
initial
begin
	debug_regfile_x31_output_expected[7] = 1'bX;
end 
// expected debug_regfile_x31_output[ 6 ]
initial
begin
	debug_regfile_x31_output_expected[6] = 1'bX;
end 
// expected debug_regfile_x31_output[ 5 ]
initial
begin
	debug_regfile_x31_output_expected[5] = 1'bX;
end 
// expected debug_regfile_x31_output[ 4 ]
initial
begin
	debug_regfile_x31_output_expected[4] = 1'bX;
end 
// expected debug_regfile_x31_output[ 3 ]
initial
begin
	debug_regfile_x31_output_expected[3] = 1'bX;
end 
// expected debug_regfile_x31_output[ 2 ]
initial
begin
	debug_regfile_x31_output_expected[2] = 1'bX;
end 
// expected debug_regfile_x31_output[ 1 ]
initial
begin
	debug_regfile_x31_output_expected[1] = 1'bX;
end 
// expected debug_regfile_x31_output[ 0 ]
initial
begin
	debug_regfile_x31_output_expected[0] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 31 ]
initial
begin
	debug_ALU_output_from_MEM_expected[31] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 30 ]
initial
begin
	debug_ALU_output_from_MEM_expected[30] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 29 ]
initial
begin
	debug_ALU_output_from_MEM_expected[29] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 28 ]
initial
begin
	debug_ALU_output_from_MEM_expected[28] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 27 ]
initial
begin
	debug_ALU_output_from_MEM_expected[27] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 26 ]
initial
begin
	debug_ALU_output_from_MEM_expected[26] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 25 ]
initial
begin
	debug_ALU_output_from_MEM_expected[25] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 24 ]
initial
begin
	debug_ALU_output_from_MEM_expected[24] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 23 ]
initial
begin
	debug_ALU_output_from_MEM_expected[23] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 22 ]
initial
begin
	debug_ALU_output_from_MEM_expected[22] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 21 ]
initial
begin
	debug_ALU_output_from_MEM_expected[21] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 20 ]
initial
begin
	debug_ALU_output_from_MEM_expected[20] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 19 ]
initial
begin
	debug_ALU_output_from_MEM_expected[19] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 18 ]
initial
begin
	debug_ALU_output_from_MEM_expected[18] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 17 ]
initial
begin
	debug_ALU_output_from_MEM_expected[17] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 16 ]
initial
begin
	debug_ALU_output_from_MEM_expected[16] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 15 ]
initial
begin
	debug_ALU_output_from_MEM_expected[15] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 14 ]
initial
begin
	debug_ALU_output_from_MEM_expected[14] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 13 ]
initial
begin
	debug_ALU_output_from_MEM_expected[13] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 12 ]
initial
begin
	debug_ALU_output_from_MEM_expected[12] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 11 ]
initial
begin
	debug_ALU_output_from_MEM_expected[11] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 10 ]
initial
begin
	debug_ALU_output_from_MEM_expected[10] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 9 ]
initial
begin
	debug_ALU_output_from_MEM_expected[9] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 8 ]
initial
begin
	debug_ALU_output_from_MEM_expected[8] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 7 ]
initial
begin
	debug_ALU_output_from_MEM_expected[7] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 6 ]
initial
begin
	debug_ALU_output_from_MEM_expected[6] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 5 ]
initial
begin
	debug_ALU_output_from_MEM_expected[5] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 4 ]
initial
begin
	debug_ALU_output_from_MEM_expected[4] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 3 ]
initial
begin
	debug_ALU_output_from_MEM_expected[3] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 2 ]
initial
begin
	debug_ALU_output_from_MEM_expected[2] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 1 ]
initial
begin
	debug_ALU_output_from_MEM_expected[1] = 1'bX;
end 
// expected debug_ALU_output_from_MEM[ 0 ]
initial
begin
	debug_ALU_output_from_MEM_expected[0] = 1'bX;
end 
// expected debug_reg_file_write_address_from_MEM[ 4 ]
initial
begin
	debug_reg_file_write_address_from_MEM_expected[4] = 1'bX;
end 
// expected debug_reg_file_write_address_from_MEM[ 3 ]
initial
begin
	debug_reg_file_write_address_from_MEM_expected[3] = 1'bX;
end 
// expected debug_reg_file_write_address_from_MEM[ 2 ]
initial
begin
	debug_reg_file_write_address_from_MEM_expected[2] = 1'bX;
end 
// expected debug_reg_file_write_address_from_MEM[ 1 ]
initial
begin
	debug_reg_file_write_address_from_MEM_expected[1] = 1'bX;
end 
// expected debug_reg_file_write_address_from_MEM[ 0 ]
initial
begin
	debug_reg_file_write_address_from_MEM_expected[0] = 1'bX;
end 
// expected debug_ALU_output[ 31 ]
initial
begin
	debug_ALU_output_expected[31] = 1'bX;
end 
// expected debug_ALU_output[ 30 ]
initial
begin
	debug_ALU_output_expected[30] = 1'bX;
end 
// expected debug_ALU_output[ 29 ]
initial
begin
	debug_ALU_output_expected[29] = 1'bX;
end 
// expected debug_ALU_output[ 28 ]
initial
begin
	debug_ALU_output_expected[28] = 1'bX;
end 
// expected debug_ALU_output[ 27 ]
initial
begin
	debug_ALU_output_expected[27] = 1'bX;
end 
// expected debug_ALU_output[ 26 ]
initial
begin
	debug_ALU_output_expected[26] = 1'bX;
end 
// expected debug_ALU_output[ 25 ]
initial
begin
	debug_ALU_output_expected[25] = 1'bX;
end 
// expected debug_ALU_output[ 24 ]
initial
begin
	debug_ALU_output_expected[24] = 1'bX;
end 
// expected debug_ALU_output[ 23 ]
initial
begin
	debug_ALU_output_expected[23] = 1'bX;
end 
// expected debug_ALU_output[ 22 ]
initial
begin
	debug_ALU_output_expected[22] = 1'bX;
end 
// expected debug_ALU_output[ 21 ]
initial
begin
	debug_ALU_output_expected[21] = 1'bX;
end 
// expected debug_ALU_output[ 20 ]
initial
begin
	debug_ALU_output_expected[20] = 1'bX;
end 
// expected debug_ALU_output[ 19 ]
initial
begin
	debug_ALU_output_expected[19] = 1'bX;
end 
// expected debug_ALU_output[ 18 ]
initial
begin
	debug_ALU_output_expected[18] = 1'bX;
end 
// expected debug_ALU_output[ 17 ]
initial
begin
	debug_ALU_output_expected[17] = 1'bX;
end 
// expected debug_ALU_output[ 16 ]
initial
begin
	debug_ALU_output_expected[16] = 1'bX;
end 
// expected debug_ALU_output[ 15 ]
initial
begin
	debug_ALU_output_expected[15] = 1'bX;
end 
// expected debug_ALU_output[ 14 ]
initial
begin
	debug_ALU_output_expected[14] = 1'bX;
end 
// expected debug_ALU_output[ 13 ]
initial
begin
	debug_ALU_output_expected[13] = 1'bX;
end 
// expected debug_ALU_output[ 12 ]
initial
begin
	debug_ALU_output_expected[12] = 1'bX;
end 
// expected debug_ALU_output[ 11 ]
initial
begin
	debug_ALU_output_expected[11] = 1'bX;
end 
// expected debug_ALU_output[ 10 ]
initial
begin
	debug_ALU_output_expected[10] = 1'bX;
end 
// expected debug_ALU_output[ 9 ]
initial
begin
	debug_ALU_output_expected[9] = 1'bX;
end 
// expected debug_ALU_output[ 8 ]
initial
begin
	debug_ALU_output_expected[8] = 1'bX;
end 
// expected debug_ALU_output[ 7 ]
initial
begin
	debug_ALU_output_expected[7] = 1'bX;
end 
// expected debug_ALU_output[ 6 ]
initial
begin
	debug_ALU_output_expected[6] = 1'bX;
end 
// expected debug_ALU_output[ 5 ]
initial
begin
	debug_ALU_output_expected[5] = 1'bX;
end 
// expected debug_ALU_output[ 4 ]
initial
begin
	debug_ALU_output_expected[4] = 1'bX;
end 
// expected debug_ALU_output[ 3 ]
initial
begin
	debug_ALU_output_expected[3] = 1'bX;
end 
// expected debug_ALU_output[ 2 ]
initial
begin
	debug_ALU_output_expected[2] = 1'bX;
end 
// expected debug_ALU_output[ 1 ]
initial
begin
	debug_ALU_output_expected[1] = 1'bX;
end 
// expected debug_ALU_output[ 0 ]
initial
begin
	debug_ALU_output_expected[0] = 1'bX;
end 

// expected debug_regfile_write
initial
begin
	debug_regfile_write_expected = 1'bX;
end 
// expected debug_ALU_input_0[ 31 ]
initial
begin
	debug_ALU_input_0_expected[31] = 1'bX;
end 
// expected debug_ALU_input_0[ 30 ]
initial
begin
	debug_ALU_input_0_expected[30] = 1'bX;
end 
// expected debug_ALU_input_0[ 29 ]
initial
begin
	debug_ALU_input_0_expected[29] = 1'bX;
end 
// expected debug_ALU_input_0[ 28 ]
initial
begin
	debug_ALU_input_0_expected[28] = 1'bX;
end 
// expected debug_ALU_input_0[ 27 ]
initial
begin
	debug_ALU_input_0_expected[27] = 1'bX;
end 
// expected debug_ALU_input_0[ 26 ]
initial
begin
	debug_ALU_input_0_expected[26] = 1'bX;
end 
// expected debug_ALU_input_0[ 25 ]
initial
begin
	debug_ALU_input_0_expected[25] = 1'bX;
end 
// expected debug_ALU_input_0[ 24 ]
initial
begin
	debug_ALU_input_0_expected[24] = 1'bX;
end 
// expected debug_ALU_input_0[ 23 ]
initial
begin
	debug_ALU_input_0_expected[23] = 1'bX;
end 
// expected debug_ALU_input_0[ 22 ]
initial
begin
	debug_ALU_input_0_expected[22] = 1'bX;
end 
// expected debug_ALU_input_0[ 21 ]
initial
begin
	debug_ALU_input_0_expected[21] = 1'bX;
end 
// expected debug_ALU_input_0[ 20 ]
initial
begin
	debug_ALU_input_0_expected[20] = 1'bX;
end 
// expected debug_ALU_input_0[ 19 ]
initial
begin
	debug_ALU_input_0_expected[19] = 1'bX;
end 
// expected debug_ALU_input_0[ 18 ]
initial
begin
	debug_ALU_input_0_expected[18] = 1'bX;
end 
// expected debug_ALU_input_0[ 17 ]
initial
begin
	debug_ALU_input_0_expected[17] = 1'bX;
end 
// expected debug_ALU_input_0[ 16 ]
initial
begin
	debug_ALU_input_0_expected[16] = 1'bX;
end 
// expected debug_ALU_input_0[ 15 ]
initial
begin
	debug_ALU_input_0_expected[15] = 1'bX;
end 
// expected debug_ALU_input_0[ 14 ]
initial
begin
	debug_ALU_input_0_expected[14] = 1'bX;
end 
// expected debug_ALU_input_0[ 13 ]
initial
begin
	debug_ALU_input_0_expected[13] = 1'bX;
end 
// expected debug_ALU_input_0[ 12 ]
initial
begin
	debug_ALU_input_0_expected[12] = 1'bX;
end 
// expected debug_ALU_input_0[ 11 ]
initial
begin
	debug_ALU_input_0_expected[11] = 1'bX;
end 
// expected debug_ALU_input_0[ 10 ]
initial
begin
	debug_ALU_input_0_expected[10] = 1'bX;
end 
// expected debug_ALU_input_0[ 9 ]
initial
begin
	debug_ALU_input_0_expected[9] = 1'bX;
end 
// expected debug_ALU_input_0[ 8 ]
initial
begin
	debug_ALU_input_0_expected[8] = 1'bX;
end 
// expected debug_ALU_input_0[ 7 ]
initial
begin
	debug_ALU_input_0_expected[7] = 1'bX;
end 
// expected debug_ALU_input_0[ 6 ]
initial
begin
	debug_ALU_input_0_expected[6] = 1'bX;
end 
// expected debug_ALU_input_0[ 5 ]
initial
begin
	debug_ALU_input_0_expected[5] = 1'bX;
end 
// expected debug_ALU_input_0[ 4 ]
initial
begin
	debug_ALU_input_0_expected[4] = 1'bX;
end 
// expected debug_ALU_input_0[ 3 ]
initial
begin
	debug_ALU_input_0_expected[3] = 1'bX;
end 
// expected debug_ALU_input_0[ 2 ]
initial
begin
	debug_ALU_input_0_expected[2] = 1'bX;
end 
// expected debug_ALU_input_0[ 1 ]
initial
begin
	debug_ALU_input_0_expected[1] = 1'bX;
end 
// expected debug_ALU_input_0[ 0 ]
initial
begin
	debug_ALU_input_0_expected[0] = 1'bX;
end 
// expected debug_ALU_input_1[ 31 ]
initial
begin
	debug_ALU_input_1_expected[31] = 1'bX;
end 
// expected debug_ALU_input_1[ 30 ]
initial
begin
	debug_ALU_input_1_expected[30] = 1'bX;
end 
// expected debug_ALU_input_1[ 29 ]
initial
begin
	debug_ALU_input_1_expected[29] = 1'bX;
end 
// expected debug_ALU_input_1[ 28 ]
initial
begin
	debug_ALU_input_1_expected[28] = 1'bX;
end 
// expected debug_ALU_input_1[ 27 ]
initial
begin
	debug_ALU_input_1_expected[27] = 1'bX;
end 
// expected debug_ALU_input_1[ 26 ]
initial
begin
	debug_ALU_input_1_expected[26] = 1'bX;
end 
// expected debug_ALU_input_1[ 25 ]
initial
begin
	debug_ALU_input_1_expected[25] = 1'bX;
end 
// expected debug_ALU_input_1[ 24 ]
initial
begin
	debug_ALU_input_1_expected[24] = 1'bX;
end 
// expected debug_ALU_input_1[ 23 ]
initial
begin
	debug_ALU_input_1_expected[23] = 1'bX;
end 
// expected debug_ALU_input_1[ 22 ]
initial
begin
	debug_ALU_input_1_expected[22] = 1'bX;
end 
// expected debug_ALU_input_1[ 21 ]
initial
begin
	debug_ALU_input_1_expected[21] = 1'bX;
end 
// expected debug_ALU_input_1[ 20 ]
initial
begin
	debug_ALU_input_1_expected[20] = 1'bX;
end 
// expected debug_ALU_input_1[ 19 ]
initial
begin
	debug_ALU_input_1_expected[19] = 1'bX;
end 
// expected debug_ALU_input_1[ 18 ]
initial
begin
	debug_ALU_input_1_expected[18] = 1'bX;
end 
// expected debug_ALU_input_1[ 17 ]
initial
begin
	debug_ALU_input_1_expected[17] = 1'bX;
end 
// expected debug_ALU_input_1[ 16 ]
initial
begin
	debug_ALU_input_1_expected[16] = 1'bX;
end 
// expected debug_ALU_input_1[ 15 ]
initial
begin
	debug_ALU_input_1_expected[15] = 1'bX;
end 
// expected debug_ALU_input_1[ 14 ]
initial
begin
	debug_ALU_input_1_expected[14] = 1'bX;
end 
// expected debug_ALU_input_1[ 13 ]
initial
begin
	debug_ALU_input_1_expected[13] = 1'bX;
end 
// expected debug_ALU_input_1[ 12 ]
initial
begin
	debug_ALU_input_1_expected[12] = 1'bX;
end 
// expected debug_ALU_input_1[ 11 ]
initial
begin
	debug_ALU_input_1_expected[11] = 1'bX;
end 
// expected debug_ALU_input_1[ 10 ]
initial
begin
	debug_ALU_input_1_expected[10] = 1'bX;
end 
// expected debug_ALU_input_1[ 9 ]
initial
begin
	debug_ALU_input_1_expected[9] = 1'bX;
end 
// expected debug_ALU_input_1[ 8 ]
initial
begin
	debug_ALU_input_1_expected[8] = 1'bX;
end 
// expected debug_ALU_input_1[ 7 ]
initial
begin
	debug_ALU_input_1_expected[7] = 1'bX;
end 
// expected debug_ALU_input_1[ 6 ]
initial
begin
	debug_ALU_input_1_expected[6] = 1'bX;
end 
// expected debug_ALU_input_1[ 5 ]
initial
begin
	debug_ALU_input_1_expected[5] = 1'bX;
end 
// expected debug_ALU_input_1[ 4 ]
initial
begin
	debug_ALU_input_1_expected[4] = 1'bX;
end 
// expected debug_ALU_input_1[ 3 ]
initial
begin
	debug_ALU_input_1_expected[3] = 1'bX;
end 
// expected debug_ALU_input_1[ 2 ]
initial
begin
	debug_ALU_input_1_expected[2] = 1'bX;
end 
// expected debug_ALU_input_1[ 1 ]
initial
begin
	debug_ALU_input_1_expected[1] = 1'bX;
end 
// expected debug_ALU_input_1[ 0 ]
initial
begin
	debug_ALU_input_1_expected[0] = 1'bX;
end 
// expected debug_reg_file_read_address_0[ 4 ]
initial
begin
	debug_reg_file_read_address_0_expected[4] = 1'bX;
end 
// expected debug_reg_file_read_address_0[ 3 ]
initial
begin
	debug_reg_file_read_address_0_expected[3] = 1'bX;
end 
// expected debug_reg_file_read_address_0[ 2 ]
initial
begin
	debug_reg_file_read_address_0_expected[2] = 1'bX;
end 
// expected debug_reg_file_read_address_0[ 1 ]
initial
begin
	debug_reg_file_read_address_0_expected[1] = 1'bX;
end 
// expected debug_reg_file_read_address_0[ 0 ]
initial
begin
	debug_reg_file_read_address_0_expected[0] = 1'bX;
end 
// expected debug_reg_file_read_address_1[ 4 ]
initial
begin
	debug_reg_file_read_address_1_expected[4] = 1'bX;
end 
// expected debug_reg_file_read_address_1[ 3 ]
initial
begin
	debug_reg_file_read_address_1_expected[3] = 1'bX;
end 
// expected debug_reg_file_read_address_1[ 2 ]
initial
begin
	debug_reg_file_read_address_1_expected[2] = 1'bX;
end 
// expected debug_reg_file_read_address_1[ 1 ]
initial
begin
	debug_reg_file_read_address_1_expected[1] = 1'bX;
end 
// expected debug_reg_file_read_address_1[ 0 ]
initial
begin
	debug_reg_file_read_address_1_expected[0] = 1'bX;
end 
// expected debug_immediate[ 31 ]
initial
begin
	debug_immediate_expected[31] = 1'bX;
end 
// expected debug_immediate[ 30 ]
initial
begin
	debug_immediate_expected[30] = 1'bX;
end 
// expected debug_immediate[ 29 ]
initial
begin
	debug_immediate_expected[29] = 1'bX;
end 
// expected debug_immediate[ 28 ]
initial
begin
	debug_immediate_expected[28] = 1'bX;
end 
// expected debug_immediate[ 27 ]
initial
begin
	debug_immediate_expected[27] = 1'bX;
end 
// expected debug_immediate[ 26 ]
initial
begin
	debug_immediate_expected[26] = 1'bX;
end 
// expected debug_immediate[ 25 ]
initial
begin
	debug_immediate_expected[25] = 1'bX;
end 
// expected debug_immediate[ 24 ]
initial
begin
	debug_immediate_expected[24] = 1'bX;
end 
// expected debug_immediate[ 23 ]
initial
begin
	debug_immediate_expected[23] = 1'bX;
end 
// expected debug_immediate[ 22 ]
initial
begin
	debug_immediate_expected[22] = 1'bX;
end 
// expected debug_immediate[ 21 ]
initial
begin
	debug_immediate_expected[21] = 1'bX;
end 
// expected debug_immediate[ 20 ]
initial
begin
	debug_immediate_expected[20] = 1'bX;
end 
// expected debug_immediate[ 19 ]
initial
begin
	debug_immediate_expected[19] = 1'bX;
end 
// expected debug_immediate[ 18 ]
initial
begin
	debug_immediate_expected[18] = 1'bX;
end 
// expected debug_immediate[ 17 ]
initial
begin
	debug_immediate_expected[17] = 1'bX;
end 
// expected debug_immediate[ 16 ]
initial
begin
	debug_immediate_expected[16] = 1'bX;
end 
// expected debug_immediate[ 15 ]
initial
begin
	debug_immediate_expected[15] = 1'bX;
end 
// expected debug_immediate[ 14 ]
initial
begin
	debug_immediate_expected[14] = 1'bX;
end 
// expected debug_immediate[ 13 ]
initial
begin
	debug_immediate_expected[13] = 1'bX;
end 
// expected debug_immediate[ 12 ]
initial
begin
	debug_immediate_expected[12] = 1'bX;
end 
// expected debug_immediate[ 11 ]
initial
begin
	debug_immediate_expected[11] = 1'bX;
end 
// expected debug_immediate[ 10 ]
initial
begin
	debug_immediate_expected[10] = 1'bX;
end 
// expected debug_immediate[ 9 ]
initial
begin
	debug_immediate_expected[9] = 1'bX;
end 
// expected debug_immediate[ 8 ]
initial
begin
	debug_immediate_expected[8] = 1'bX;
end 
// expected debug_immediate[ 7 ]
initial
begin
	debug_immediate_expected[7] = 1'bX;
end 
// expected debug_immediate[ 6 ]
initial
begin
	debug_immediate_expected[6] = 1'bX;
end 
// expected debug_immediate[ 5 ]
initial
begin
	debug_immediate_expected[5] = 1'bX;
end 
// expected debug_immediate[ 4 ]
initial
begin
	debug_immediate_expected[4] = 1'bX;
end 
// expected debug_immediate[ 3 ]
initial
begin
	debug_immediate_expected[3] = 1'bX;
end 
// expected debug_immediate[ 2 ]
initial
begin
	debug_immediate_expected[2] = 1'bX;
end 
// expected debug_immediate[ 1 ]
initial
begin
	debug_immediate_expected[1] = 1'bX;
end 
// expected debug_immediate[ 0 ]
initial
begin
	debug_immediate_expected[0] = 1'bX;
end 
// expected debug_mux0_sel[ 1 ]
initial
begin
	debug_mux0_sel_expected[1] = 1'bX;
end 
// expected debug_mux0_sel[ 0 ]
initial
begin
	debug_mux0_sel_expected[0] = 1'bX;
end 
// expected debug_ALU_operation[ 3 ]
initial
begin
	debug_ALU_operation_expected[3] = 1'bX;
end 
// expected debug_ALU_operation[ 2 ]
initial
begin
	debug_ALU_operation_expected[2] = 1'bX;
end 
// expected debug_ALU_operation[ 1 ]
initial
begin
	debug_ALU_operation_expected[1] = 1'bX;
end 
// expected debug_ALU_operation[ 0 ]
initial
begin
	debug_ALU_operation_expected[0] = 1'bX;
end 
// expected debug_forward_mux_0[ 1 ]
initial
begin
	debug_forward_mux_0_expected[1] = 1'bX;
end 
// expected debug_forward_mux_0[ 0 ]
initial
begin
	debug_forward_mux_0_expected[0] = 1'bX;
end 
// expected debug_forward_mux_1[ 1 ]
initial
begin
	debug_forward_mux_1_expected[1] = 1'bX;
end 
// expected debug_forward_mux_1[ 0 ]
initial
begin
	debug_forward_mux_1_expected[0] = 1'bX;
end 
// expected debug_reg_file_read_address_0_ID_EXE[ 4 ]
initial
begin
	debug_reg_file_read_address_0_ID_EXE_expected[4] = 1'bX;
end 
// expected debug_reg_file_read_address_0_ID_EXE[ 3 ]
initial
begin
	debug_reg_file_read_address_0_ID_EXE_expected[3] = 1'bX;
end 
// expected debug_reg_file_read_address_0_ID_EXE[ 2 ]
initial
begin
	debug_reg_file_read_address_0_ID_EXE_expected[2] = 1'bX;
end 
// expected debug_reg_file_read_address_0_ID_EXE[ 1 ]
initial
begin
	debug_reg_file_read_address_0_ID_EXE_expected[1] = 1'bX;
end 
// expected debug_reg_file_read_address_0_ID_EXE[ 0 ]
initial
begin
	debug_reg_file_read_address_0_ID_EXE_expected[0] = 1'bX;
end 
// expected debug_reg_file_write_address_EX_MEM[ 4 ]
initial
begin
	debug_reg_file_write_address_EX_MEM_expected[4] = 1'bX;
end 
// expected debug_reg_file_write_address_EX_MEM[ 3 ]
initial
begin
	debug_reg_file_write_address_EX_MEM_expected[3] = 1'bX;
end 
// expected debug_reg_file_write_address_EX_MEM[ 2 ]
initial
begin
	debug_reg_file_write_address_EX_MEM_expected[2] = 1'bX;
end 
// expected debug_reg_file_write_address_EX_MEM[ 1 ]
initial
begin
	debug_reg_file_write_address_EX_MEM_expected[1] = 1'bX;
end 
// expected debug_reg_file_write_address_EX_MEM[ 0 ]
initial
begin
	debug_reg_file_write_address_EX_MEM_expected[0] = 1'bX;
end 
// expected debug_mux0_sel_from_MEM[ 1 ]
initial
begin
	debug_mux0_sel_from_MEM_expected[1] = 1'bX;
end 
// expected debug_mux0_sel_from_MEM[ 0 ]
initial
begin
	debug_mux0_sel_from_MEM_expected[0] = 1'bX;
end 

// expected debug_reg_file_write_from_MEM
initial
begin
	debug_reg_file_write_from_MEM_expected = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 31 ]
initial
begin
	debug_ALU_output_from_EX_expected[31] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 30 ]
initial
begin
	debug_ALU_output_from_EX_expected[30] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 29 ]
initial
begin
	debug_ALU_output_from_EX_expected[29] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 28 ]
initial
begin
	debug_ALU_output_from_EX_expected[28] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 27 ]
initial
begin
	debug_ALU_output_from_EX_expected[27] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 26 ]
initial
begin
	debug_ALU_output_from_EX_expected[26] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 25 ]
initial
begin
	debug_ALU_output_from_EX_expected[25] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 24 ]
initial
begin
	debug_ALU_output_from_EX_expected[24] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 23 ]
initial
begin
	debug_ALU_output_from_EX_expected[23] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 22 ]
initial
begin
	debug_ALU_output_from_EX_expected[22] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 21 ]
initial
begin
	debug_ALU_output_from_EX_expected[21] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 20 ]
initial
begin
	debug_ALU_output_from_EX_expected[20] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 19 ]
initial
begin
	debug_ALU_output_from_EX_expected[19] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 18 ]
initial
begin
	debug_ALU_output_from_EX_expected[18] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 17 ]
initial
begin
	debug_ALU_output_from_EX_expected[17] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 16 ]
initial
begin
	debug_ALU_output_from_EX_expected[16] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 15 ]
initial
begin
	debug_ALU_output_from_EX_expected[15] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 14 ]
initial
begin
	debug_ALU_output_from_EX_expected[14] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 13 ]
initial
begin
	debug_ALU_output_from_EX_expected[13] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 12 ]
initial
begin
	debug_ALU_output_from_EX_expected[12] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 11 ]
initial
begin
	debug_ALU_output_from_EX_expected[11] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 10 ]
initial
begin
	debug_ALU_output_from_EX_expected[10] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 9 ]
initial
begin
	debug_ALU_output_from_EX_expected[9] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 8 ]
initial
begin
	debug_ALU_output_from_EX_expected[8] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 7 ]
initial
begin
	debug_ALU_output_from_EX_expected[7] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 6 ]
initial
begin
	debug_ALU_output_from_EX_expected[6] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 5 ]
initial
begin
	debug_ALU_output_from_EX_expected[5] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 4 ]
initial
begin
	debug_ALU_output_from_EX_expected[4] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 3 ]
initial
begin
	debug_ALU_output_from_EX_expected[3] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 2 ]
initial
begin
	debug_ALU_output_from_EX_expected[2] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 1 ]
initial
begin
	debug_ALU_output_from_EX_expected[1] = 1'bX;
end 
// expected debug_ALU_output_from_EX[ 0 ]
initial
begin
	debug_ALU_output_from_EX_expected[0] = 1'bX;
end 
// expected debug_register_file_output_0[ 31 ]
initial
begin
	debug_register_file_output_0_expected[31] = 1'bX;
end 
// expected debug_register_file_output_0[ 30 ]
initial
begin
	debug_register_file_output_0_expected[30] = 1'bX;
end 
// expected debug_register_file_output_0[ 29 ]
initial
begin
	debug_register_file_output_0_expected[29] = 1'bX;
end 
// expected debug_register_file_output_0[ 28 ]
initial
begin
	debug_register_file_output_0_expected[28] = 1'bX;
end 
// expected debug_register_file_output_0[ 27 ]
initial
begin
	debug_register_file_output_0_expected[27] = 1'bX;
end 
// expected debug_register_file_output_0[ 26 ]
initial
begin
	debug_register_file_output_0_expected[26] = 1'bX;
end 
// expected debug_register_file_output_0[ 25 ]
initial
begin
	debug_register_file_output_0_expected[25] = 1'bX;
end 
// expected debug_register_file_output_0[ 24 ]
initial
begin
	debug_register_file_output_0_expected[24] = 1'bX;
end 
// expected debug_register_file_output_0[ 23 ]
initial
begin
	debug_register_file_output_0_expected[23] = 1'bX;
end 
// expected debug_register_file_output_0[ 22 ]
initial
begin
	debug_register_file_output_0_expected[22] = 1'bX;
end 
// expected debug_register_file_output_0[ 21 ]
initial
begin
	debug_register_file_output_0_expected[21] = 1'bX;
end 
// expected debug_register_file_output_0[ 20 ]
initial
begin
	debug_register_file_output_0_expected[20] = 1'bX;
end 
// expected debug_register_file_output_0[ 19 ]
initial
begin
	debug_register_file_output_0_expected[19] = 1'bX;
end 
// expected debug_register_file_output_0[ 18 ]
initial
begin
	debug_register_file_output_0_expected[18] = 1'bX;
end 
// expected debug_register_file_output_0[ 17 ]
initial
begin
	debug_register_file_output_0_expected[17] = 1'bX;
end 
// expected debug_register_file_output_0[ 16 ]
initial
begin
	debug_register_file_output_0_expected[16] = 1'bX;
end 
// expected debug_register_file_output_0[ 15 ]
initial
begin
	debug_register_file_output_0_expected[15] = 1'bX;
end 
// expected debug_register_file_output_0[ 14 ]
initial
begin
	debug_register_file_output_0_expected[14] = 1'bX;
end 
// expected debug_register_file_output_0[ 13 ]
initial
begin
	debug_register_file_output_0_expected[13] = 1'bX;
end 
// expected debug_register_file_output_0[ 12 ]
initial
begin
	debug_register_file_output_0_expected[12] = 1'bX;
end 
// expected debug_register_file_output_0[ 11 ]
initial
begin
	debug_register_file_output_0_expected[11] = 1'bX;
end 
// expected debug_register_file_output_0[ 10 ]
initial
begin
	debug_register_file_output_0_expected[10] = 1'bX;
end 
// expected debug_register_file_output_0[ 9 ]
initial
begin
	debug_register_file_output_0_expected[9] = 1'bX;
end 
// expected debug_register_file_output_0[ 8 ]
initial
begin
	debug_register_file_output_0_expected[8] = 1'bX;
end 
// expected debug_register_file_output_0[ 7 ]
initial
begin
	debug_register_file_output_0_expected[7] = 1'bX;
end 
// expected debug_register_file_output_0[ 6 ]
initial
begin
	debug_register_file_output_0_expected[6] = 1'bX;
end 
// expected debug_register_file_output_0[ 5 ]
initial
begin
	debug_register_file_output_0_expected[5] = 1'bX;
end 
// expected debug_register_file_output_0[ 4 ]
initial
begin
	debug_register_file_output_0_expected[4] = 1'bX;
end 
// expected debug_register_file_output_0[ 3 ]
initial
begin
	debug_register_file_output_0_expected[3] = 1'bX;
end 
// expected debug_register_file_output_0[ 2 ]
initial
begin
	debug_register_file_output_0_expected[2] = 1'bX;
end 
// expected debug_register_file_output_0[ 1 ]
initial
begin
	debug_register_file_output_0_expected[1] = 1'bX;
end 
// expected debug_register_file_output_0[ 0 ]
initial
begin
	debug_register_file_output_0_expected[0] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 31 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[31] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 30 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[30] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 29 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[29] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 28 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[28] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 27 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[27] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 26 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[26] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 25 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[25] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 24 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[24] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 23 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[23] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 22 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[22] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 21 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[21] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 20 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[20] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 19 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[19] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 18 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[18] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 17 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[17] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 16 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[16] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 15 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[15] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 14 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[14] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 13 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[13] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 12 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[12] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 11 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[11] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 10 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[10] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 9 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[9] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 8 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[8] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 7 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[7] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 6 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[6] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 5 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[5] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 4 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[4] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 3 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[3] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 2 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[2] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 1 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[1] = 1'bX;
end 
// expected debug_register_file_output_0_from_ID[ 0 ]
initial
begin
	debug_register_file_output_0_from_ID_expected[0] = 1'bX;
end 
// expected debug_register_file_output_1[ 31 ]
initial
begin
	debug_register_file_output_1_expected[31] = 1'bX;
end 
// expected debug_register_file_output_1[ 30 ]
initial
begin
	debug_register_file_output_1_expected[30] = 1'bX;
end 
// expected debug_register_file_output_1[ 29 ]
initial
begin
	debug_register_file_output_1_expected[29] = 1'bX;
end 
// expected debug_register_file_output_1[ 28 ]
initial
begin
	debug_register_file_output_1_expected[28] = 1'bX;
end 
// expected debug_register_file_output_1[ 27 ]
initial
begin
	debug_register_file_output_1_expected[27] = 1'bX;
end 
// expected debug_register_file_output_1[ 26 ]
initial
begin
	debug_register_file_output_1_expected[26] = 1'bX;
end 
// expected debug_register_file_output_1[ 25 ]
initial
begin
	debug_register_file_output_1_expected[25] = 1'bX;
end 
// expected debug_register_file_output_1[ 24 ]
initial
begin
	debug_register_file_output_1_expected[24] = 1'bX;
end 
// expected debug_register_file_output_1[ 23 ]
initial
begin
	debug_register_file_output_1_expected[23] = 1'bX;
end 
// expected debug_register_file_output_1[ 22 ]
initial
begin
	debug_register_file_output_1_expected[22] = 1'bX;
end 
// expected debug_register_file_output_1[ 21 ]
initial
begin
	debug_register_file_output_1_expected[21] = 1'bX;
end 
// expected debug_register_file_output_1[ 20 ]
initial
begin
	debug_register_file_output_1_expected[20] = 1'bX;
end 
// expected debug_register_file_output_1[ 19 ]
initial
begin
	debug_register_file_output_1_expected[19] = 1'bX;
end 
// expected debug_register_file_output_1[ 18 ]
initial
begin
	debug_register_file_output_1_expected[18] = 1'bX;
end 
// expected debug_register_file_output_1[ 17 ]
initial
begin
	debug_register_file_output_1_expected[17] = 1'bX;
end 
// expected debug_register_file_output_1[ 16 ]
initial
begin
	debug_register_file_output_1_expected[16] = 1'bX;
end 
// expected debug_register_file_output_1[ 15 ]
initial
begin
	debug_register_file_output_1_expected[15] = 1'bX;
end 
// expected debug_register_file_output_1[ 14 ]
initial
begin
	debug_register_file_output_1_expected[14] = 1'bX;
end 
// expected debug_register_file_output_1[ 13 ]
initial
begin
	debug_register_file_output_1_expected[13] = 1'bX;
end 
// expected debug_register_file_output_1[ 12 ]
initial
begin
	debug_register_file_output_1_expected[12] = 1'bX;
end 
// expected debug_register_file_output_1[ 11 ]
initial
begin
	debug_register_file_output_1_expected[11] = 1'bX;
end 
// expected debug_register_file_output_1[ 10 ]
initial
begin
	debug_register_file_output_1_expected[10] = 1'bX;
end 
// expected debug_register_file_output_1[ 9 ]
initial
begin
	debug_register_file_output_1_expected[9] = 1'bX;
end 
// expected debug_register_file_output_1[ 8 ]
initial
begin
	debug_register_file_output_1_expected[8] = 1'bX;
end 
// expected debug_register_file_output_1[ 7 ]
initial
begin
	debug_register_file_output_1_expected[7] = 1'bX;
end 
// expected debug_register_file_output_1[ 6 ]
initial
begin
	debug_register_file_output_1_expected[6] = 1'bX;
end 
// expected debug_register_file_output_1[ 5 ]
initial
begin
	debug_register_file_output_1_expected[5] = 1'bX;
end 
// expected debug_register_file_output_1[ 4 ]
initial
begin
	debug_register_file_output_1_expected[4] = 1'bX;
end 
// expected debug_register_file_output_1[ 3 ]
initial
begin
	debug_register_file_output_1_expected[3] = 1'bX;
end 
// expected debug_register_file_output_1[ 2 ]
initial
begin
	debug_register_file_output_1_expected[2] = 1'bX;
end 
// expected debug_register_file_output_1[ 1 ]
initial
begin
	debug_register_file_output_1_expected[1] = 1'bX;
end 
// expected debug_register_file_output_1[ 0 ]
initial
begin
	debug_register_file_output_1_expected[0] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 31 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[31] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 30 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[30] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 29 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[29] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 28 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[28] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 27 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[27] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 26 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[26] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 25 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[25] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 24 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[24] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 23 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[23] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 22 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[22] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 21 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[21] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 20 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[20] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 19 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[19] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 18 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[18] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 17 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[17] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 16 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[16] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 15 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[15] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 14 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[14] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 13 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[13] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 12 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[12] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 11 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[11] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 10 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[10] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 9 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[9] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 8 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[8] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 7 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[7] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 6 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[6] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 5 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[5] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 4 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[4] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 3 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[3] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 2 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[2] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 1 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[1] = 1'bX;
end 
// expected debug_register_file_output_1_from_ID[ 0 ]
initial
begin
	debug_register_file_output_1_from_ID_expected[0] = 1'bX;
end 
// generate trigger
always @(debug_ALU_input_0_expected or debug_ALU_input_0 or debug_ALU_input_1_expected or debug_ALU_input_1 or debug_ALU_operation_expected or debug_ALU_operation or debug_ALU_output_expected or debug_ALU_output or debug_ALU_output_from_EX_expected or debug_ALU_output_from_EX or debug_ALU_output_from_MEM_expected or debug_ALU_output_from_MEM or debug_controller_state_expected or debug_controller_state or debug_forward_mux_0_expected or debug_forward_mux_0 or debug_forward_mux_1_expected or debug_forward_mux_1 or debug_immediate_expected or debug_immediate or debug_instruction_expected or debug_instruction or debug_mux0_sel_expected or debug_mux0_sel or debug_mux0_sel_from_MEM_expected or debug_mux0_sel_from_MEM or debug_PC_operation_expected or debug_PC_operation or debug_pc_output_expected or debug_pc_output or debug_reg_file_read_address_0_expected or debug_reg_file_read_address_0 or debug_reg_file_read_address_0_ID_EXE_expected or debug_reg_file_read_address_0_ID_EXE or debug_reg_file_read_address_1_expected or debug_reg_file_read_address_1 or debug_reg_file_write_address_EX_MEM_expected or debug_reg_file_write_address_EX_MEM or debug_reg_file_write_address_from_MEM_expected or debug_reg_file_write_address_from_MEM or debug_reg_file_write_from_MEM_expected or debug_reg_file_write_from_MEM or debug_regfile_write_expected or debug_regfile_write or debug_regfile_x1_output_expected or debug_regfile_x1_output or debug_regfile_x2_output_expected or debug_regfile_x2_output or debug_regfile_x31_output_expected or debug_regfile_x31_output or debug_register_file_output_0_expected or debug_register_file_output_0 or debug_register_file_output_0_from_ID_expected or debug_register_file_output_0_from_ID or debug_register_file_output_1_expected or debug_register_file_output_1 or debug_register_file_output_1_from_ID_expected or debug_register_file_output_1_from_ID)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected debug_ALU_input_0 = %b | expected debug_ALU_input_1 = %b | expected debug_ALU_operation = %b | expected debug_ALU_output = %b | expected debug_ALU_output_from_EX = %b | expected debug_ALU_output_from_MEM = %b | expected debug_controller_state = %b | expected debug_forward_mux_0 = %b | expected debug_forward_mux_1 = %b | expected debug_immediate = %b | expected debug_instruction = %b | expected debug_mux0_sel = %b | expected debug_mux0_sel_from_MEM = %b | expected debug_PC_operation = %b | expected debug_pc_output = %b | expected debug_reg_file_read_address_0 = %b | expected debug_reg_file_read_address_0_ID_EXE = %b | expected debug_reg_file_read_address_1 = %b | expected debug_reg_file_write_address_EX_MEM = %b | expected debug_reg_file_write_address_from_MEM = %b | expected debug_reg_file_write_from_MEM = %b | expected debug_regfile_write = %b | expected debug_regfile_x1_output = %b | expected debug_regfile_x2_output = %b | expected debug_regfile_x31_output = %b | expected debug_register_file_output_0 = %b | expected debug_register_file_output_0_from_ID = %b | expected debug_register_file_output_1 = %b | expected debug_register_file_output_1_from_ID = %b | ",debug_ALU_input_0_expected_prev,debug_ALU_input_1_expected_prev,debug_ALU_operation_expected_prev,debug_ALU_output_expected_prev,debug_ALU_output_from_EX_expected_prev,debug_ALU_output_from_MEM_expected_prev,debug_controller_state_expected_prev,debug_forward_mux_0_expected_prev,debug_forward_mux_1_expected_prev,debug_immediate_expected_prev,debug_instruction_expected_prev,debug_mux0_sel_expected_prev,debug_mux0_sel_from_MEM_expected_prev,debug_PC_operation_expected_prev,debug_pc_output_expected_prev,debug_reg_file_read_address_0_expected_prev,debug_reg_file_read_address_0_ID_EXE_expected_prev,debug_reg_file_read_address_1_expected_prev,debug_reg_file_write_address_EX_MEM_expected_prev,debug_reg_file_write_address_from_MEM_expected_prev,debug_reg_file_write_from_MEM_expected_prev,debug_regfile_write_expected_prev,debug_regfile_x1_output_expected_prev,debug_regfile_x2_output_expected_prev,debug_regfile_x31_output_expected_prev,debug_register_file_output_0_expected_prev,debug_register_file_output_0_from_ID_expected_prev,debug_register_file_output_1_expected_prev,debug_register_file_output_1_from_ID_expected_prev);
	$display("| real debug_ALU_input_0 = %b | real debug_ALU_input_1 = %b | real debug_ALU_operation = %b | real debug_ALU_output = %b | real debug_ALU_output_from_EX = %b | real debug_ALU_output_from_MEM = %b | real debug_controller_state = %b | real debug_forward_mux_0 = %b | real debug_forward_mux_1 = %b | real debug_immediate = %b | real debug_instruction = %b | real debug_mux0_sel = %b | real debug_mux0_sel_from_MEM = %b | real debug_PC_operation = %b | real debug_pc_output = %b | real debug_reg_file_read_address_0 = %b | real debug_reg_file_read_address_0_ID_EXE = %b | real debug_reg_file_read_address_1 = %b | real debug_reg_file_write_address_EX_MEM = %b | real debug_reg_file_write_address_from_MEM = %b | real debug_reg_file_write_from_MEM = %b | real debug_regfile_write = %b | real debug_regfile_x1_output = %b | real debug_regfile_x2_output = %b | real debug_regfile_x31_output = %b | real debug_register_file_output_0 = %b | real debug_register_file_output_0_from_ID = %b | real debug_register_file_output_1 = %b | real debug_register_file_output_1_from_ID = %b | ",debug_ALU_input_0_prev,debug_ALU_input_1_prev,debug_ALU_operation_prev,debug_ALU_output_prev,debug_ALU_output_from_EX_prev,debug_ALU_output_from_MEM_prev,debug_controller_state_prev,debug_forward_mux_0_prev,debug_forward_mux_1_prev,debug_immediate_prev,debug_instruction_prev,debug_mux0_sel_prev,debug_mux0_sel_from_MEM_prev,debug_PC_operation_prev,debug_pc_output_prev,debug_reg_file_read_address_0_prev,debug_reg_file_read_address_0_ID_EXE_prev,debug_reg_file_read_address_1_prev,debug_reg_file_write_address_EX_MEM_prev,debug_reg_file_write_address_from_MEM_prev,debug_reg_file_write_from_MEM_prev,debug_regfile_write_prev,debug_regfile_x1_output_prev,debug_regfile_x2_output_prev,debug_regfile_x31_output_prev,debug_register_file_output_0_prev,debug_register_file_output_0_from_ID_prev,debug_register_file_output_1_prev,debug_register_file_output_1_from_ID_prev);
`endif
	if (
		( debug_ALU_input_0_expected_prev[0] !== 1'bx ) && ( debug_ALU_input_0_prev[0] !== debug_ALU_input_0_expected_prev[0] )
		&& ((debug_ALU_input_0_expected_prev[0] !== last_debug_ALU_input_0_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[0] = debug_ALU_input_0_expected_prev[0];
	end
	if (
		( debug_ALU_input_0_expected_prev[1] !== 1'bx ) && ( debug_ALU_input_0_prev[1] !== debug_ALU_input_0_expected_prev[1] )
		&& ((debug_ALU_input_0_expected_prev[1] !== last_debug_ALU_input_0_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[1] = debug_ALU_input_0_expected_prev[1];
	end
	if (
		( debug_ALU_input_0_expected_prev[2] !== 1'bx ) && ( debug_ALU_input_0_prev[2] !== debug_ALU_input_0_expected_prev[2] )
		&& ((debug_ALU_input_0_expected_prev[2] !== last_debug_ALU_input_0_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[2] = debug_ALU_input_0_expected_prev[2];
	end
	if (
		( debug_ALU_input_0_expected_prev[3] !== 1'bx ) && ( debug_ALU_input_0_prev[3] !== debug_ALU_input_0_expected_prev[3] )
		&& ((debug_ALU_input_0_expected_prev[3] !== last_debug_ALU_input_0_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[3] = debug_ALU_input_0_expected_prev[3];
	end
	if (
		( debug_ALU_input_0_expected_prev[4] !== 1'bx ) && ( debug_ALU_input_0_prev[4] !== debug_ALU_input_0_expected_prev[4] )
		&& ((debug_ALU_input_0_expected_prev[4] !== last_debug_ALU_input_0_exp[4]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[4] = debug_ALU_input_0_expected_prev[4];
	end
	if (
		( debug_ALU_input_0_expected_prev[5] !== 1'bx ) && ( debug_ALU_input_0_prev[5] !== debug_ALU_input_0_expected_prev[5] )
		&& ((debug_ALU_input_0_expected_prev[5] !== last_debug_ALU_input_0_exp[5]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[5] = debug_ALU_input_0_expected_prev[5];
	end
	if (
		( debug_ALU_input_0_expected_prev[6] !== 1'bx ) && ( debug_ALU_input_0_prev[6] !== debug_ALU_input_0_expected_prev[6] )
		&& ((debug_ALU_input_0_expected_prev[6] !== last_debug_ALU_input_0_exp[6]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[6] = debug_ALU_input_0_expected_prev[6];
	end
	if (
		( debug_ALU_input_0_expected_prev[7] !== 1'bx ) && ( debug_ALU_input_0_prev[7] !== debug_ALU_input_0_expected_prev[7] )
		&& ((debug_ALU_input_0_expected_prev[7] !== last_debug_ALU_input_0_exp[7]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[7] = debug_ALU_input_0_expected_prev[7];
	end
	if (
		( debug_ALU_input_0_expected_prev[8] !== 1'bx ) && ( debug_ALU_input_0_prev[8] !== debug_ALU_input_0_expected_prev[8] )
		&& ((debug_ALU_input_0_expected_prev[8] !== last_debug_ALU_input_0_exp[8]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[8] = debug_ALU_input_0_expected_prev[8];
	end
	if (
		( debug_ALU_input_0_expected_prev[9] !== 1'bx ) && ( debug_ALU_input_0_prev[9] !== debug_ALU_input_0_expected_prev[9] )
		&& ((debug_ALU_input_0_expected_prev[9] !== last_debug_ALU_input_0_exp[9]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[9] = debug_ALU_input_0_expected_prev[9];
	end
	if (
		( debug_ALU_input_0_expected_prev[10] !== 1'bx ) && ( debug_ALU_input_0_prev[10] !== debug_ALU_input_0_expected_prev[10] )
		&& ((debug_ALU_input_0_expected_prev[10] !== last_debug_ALU_input_0_exp[10]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[10] = debug_ALU_input_0_expected_prev[10];
	end
	if (
		( debug_ALU_input_0_expected_prev[11] !== 1'bx ) && ( debug_ALU_input_0_prev[11] !== debug_ALU_input_0_expected_prev[11] )
		&& ((debug_ALU_input_0_expected_prev[11] !== last_debug_ALU_input_0_exp[11]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[11] = debug_ALU_input_0_expected_prev[11];
	end
	if (
		( debug_ALU_input_0_expected_prev[12] !== 1'bx ) && ( debug_ALU_input_0_prev[12] !== debug_ALU_input_0_expected_prev[12] )
		&& ((debug_ALU_input_0_expected_prev[12] !== last_debug_ALU_input_0_exp[12]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[12] = debug_ALU_input_0_expected_prev[12];
	end
	if (
		( debug_ALU_input_0_expected_prev[13] !== 1'bx ) && ( debug_ALU_input_0_prev[13] !== debug_ALU_input_0_expected_prev[13] )
		&& ((debug_ALU_input_0_expected_prev[13] !== last_debug_ALU_input_0_exp[13]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[13] = debug_ALU_input_0_expected_prev[13];
	end
	if (
		( debug_ALU_input_0_expected_prev[14] !== 1'bx ) && ( debug_ALU_input_0_prev[14] !== debug_ALU_input_0_expected_prev[14] )
		&& ((debug_ALU_input_0_expected_prev[14] !== last_debug_ALU_input_0_exp[14]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[14] = debug_ALU_input_0_expected_prev[14];
	end
	if (
		( debug_ALU_input_0_expected_prev[15] !== 1'bx ) && ( debug_ALU_input_0_prev[15] !== debug_ALU_input_0_expected_prev[15] )
		&& ((debug_ALU_input_0_expected_prev[15] !== last_debug_ALU_input_0_exp[15]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[15] = debug_ALU_input_0_expected_prev[15];
	end
	if (
		( debug_ALU_input_0_expected_prev[16] !== 1'bx ) && ( debug_ALU_input_0_prev[16] !== debug_ALU_input_0_expected_prev[16] )
		&& ((debug_ALU_input_0_expected_prev[16] !== last_debug_ALU_input_0_exp[16]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[16] = debug_ALU_input_0_expected_prev[16];
	end
	if (
		( debug_ALU_input_0_expected_prev[17] !== 1'bx ) && ( debug_ALU_input_0_prev[17] !== debug_ALU_input_0_expected_prev[17] )
		&& ((debug_ALU_input_0_expected_prev[17] !== last_debug_ALU_input_0_exp[17]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[17] = debug_ALU_input_0_expected_prev[17];
	end
	if (
		( debug_ALU_input_0_expected_prev[18] !== 1'bx ) && ( debug_ALU_input_0_prev[18] !== debug_ALU_input_0_expected_prev[18] )
		&& ((debug_ALU_input_0_expected_prev[18] !== last_debug_ALU_input_0_exp[18]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[18] = debug_ALU_input_0_expected_prev[18];
	end
	if (
		( debug_ALU_input_0_expected_prev[19] !== 1'bx ) && ( debug_ALU_input_0_prev[19] !== debug_ALU_input_0_expected_prev[19] )
		&& ((debug_ALU_input_0_expected_prev[19] !== last_debug_ALU_input_0_exp[19]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[19] = debug_ALU_input_0_expected_prev[19];
	end
	if (
		( debug_ALU_input_0_expected_prev[20] !== 1'bx ) && ( debug_ALU_input_0_prev[20] !== debug_ALU_input_0_expected_prev[20] )
		&& ((debug_ALU_input_0_expected_prev[20] !== last_debug_ALU_input_0_exp[20]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[20] = debug_ALU_input_0_expected_prev[20];
	end
	if (
		( debug_ALU_input_0_expected_prev[21] !== 1'bx ) && ( debug_ALU_input_0_prev[21] !== debug_ALU_input_0_expected_prev[21] )
		&& ((debug_ALU_input_0_expected_prev[21] !== last_debug_ALU_input_0_exp[21]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[21] = debug_ALU_input_0_expected_prev[21];
	end
	if (
		( debug_ALU_input_0_expected_prev[22] !== 1'bx ) && ( debug_ALU_input_0_prev[22] !== debug_ALU_input_0_expected_prev[22] )
		&& ((debug_ALU_input_0_expected_prev[22] !== last_debug_ALU_input_0_exp[22]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[22] = debug_ALU_input_0_expected_prev[22];
	end
	if (
		( debug_ALU_input_0_expected_prev[23] !== 1'bx ) && ( debug_ALU_input_0_prev[23] !== debug_ALU_input_0_expected_prev[23] )
		&& ((debug_ALU_input_0_expected_prev[23] !== last_debug_ALU_input_0_exp[23]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[23] = debug_ALU_input_0_expected_prev[23];
	end
	if (
		( debug_ALU_input_0_expected_prev[24] !== 1'bx ) && ( debug_ALU_input_0_prev[24] !== debug_ALU_input_0_expected_prev[24] )
		&& ((debug_ALU_input_0_expected_prev[24] !== last_debug_ALU_input_0_exp[24]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[24] = debug_ALU_input_0_expected_prev[24];
	end
	if (
		( debug_ALU_input_0_expected_prev[25] !== 1'bx ) && ( debug_ALU_input_0_prev[25] !== debug_ALU_input_0_expected_prev[25] )
		&& ((debug_ALU_input_0_expected_prev[25] !== last_debug_ALU_input_0_exp[25]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[25] = debug_ALU_input_0_expected_prev[25];
	end
	if (
		( debug_ALU_input_0_expected_prev[26] !== 1'bx ) && ( debug_ALU_input_0_prev[26] !== debug_ALU_input_0_expected_prev[26] )
		&& ((debug_ALU_input_0_expected_prev[26] !== last_debug_ALU_input_0_exp[26]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[26] = debug_ALU_input_0_expected_prev[26];
	end
	if (
		( debug_ALU_input_0_expected_prev[27] !== 1'bx ) && ( debug_ALU_input_0_prev[27] !== debug_ALU_input_0_expected_prev[27] )
		&& ((debug_ALU_input_0_expected_prev[27] !== last_debug_ALU_input_0_exp[27]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[27] = debug_ALU_input_0_expected_prev[27];
	end
	if (
		( debug_ALU_input_0_expected_prev[28] !== 1'bx ) && ( debug_ALU_input_0_prev[28] !== debug_ALU_input_0_expected_prev[28] )
		&& ((debug_ALU_input_0_expected_prev[28] !== last_debug_ALU_input_0_exp[28]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[28] = debug_ALU_input_0_expected_prev[28];
	end
	if (
		( debug_ALU_input_0_expected_prev[29] !== 1'bx ) && ( debug_ALU_input_0_prev[29] !== debug_ALU_input_0_expected_prev[29] )
		&& ((debug_ALU_input_0_expected_prev[29] !== last_debug_ALU_input_0_exp[29]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[29] = debug_ALU_input_0_expected_prev[29];
	end
	if (
		( debug_ALU_input_0_expected_prev[30] !== 1'bx ) && ( debug_ALU_input_0_prev[30] !== debug_ALU_input_0_expected_prev[30] )
		&& ((debug_ALU_input_0_expected_prev[30] !== last_debug_ALU_input_0_exp[30]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[30] = debug_ALU_input_0_expected_prev[30];
	end
	if (
		( debug_ALU_input_0_expected_prev[31] !== 1'bx ) && ( debug_ALU_input_0_prev[31] !== debug_ALU_input_0_expected_prev[31] )
		&& ((debug_ALU_input_0_expected_prev[31] !== last_debug_ALU_input_0_exp[31]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_0[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_0_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_debug_ALU_input_0_exp[31] = debug_ALU_input_0_expected_prev[31];
	end
	if (
		( debug_ALU_input_1_expected_prev[0] !== 1'bx ) && ( debug_ALU_input_1_prev[0] !== debug_ALU_input_1_expected_prev[0] )
		&& ((debug_ALU_input_1_expected_prev[0] !== last_debug_ALU_input_1_exp[0]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[0] = debug_ALU_input_1_expected_prev[0];
	end
	if (
		( debug_ALU_input_1_expected_prev[1] !== 1'bx ) && ( debug_ALU_input_1_prev[1] !== debug_ALU_input_1_expected_prev[1] )
		&& ((debug_ALU_input_1_expected_prev[1] !== last_debug_ALU_input_1_exp[1]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[1] = debug_ALU_input_1_expected_prev[1];
	end
	if (
		( debug_ALU_input_1_expected_prev[2] !== 1'bx ) && ( debug_ALU_input_1_prev[2] !== debug_ALU_input_1_expected_prev[2] )
		&& ((debug_ALU_input_1_expected_prev[2] !== last_debug_ALU_input_1_exp[2]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[2] = debug_ALU_input_1_expected_prev[2];
	end
	if (
		( debug_ALU_input_1_expected_prev[3] !== 1'bx ) && ( debug_ALU_input_1_prev[3] !== debug_ALU_input_1_expected_prev[3] )
		&& ((debug_ALU_input_1_expected_prev[3] !== last_debug_ALU_input_1_exp[3]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[3] = debug_ALU_input_1_expected_prev[3];
	end
	if (
		( debug_ALU_input_1_expected_prev[4] !== 1'bx ) && ( debug_ALU_input_1_prev[4] !== debug_ALU_input_1_expected_prev[4] )
		&& ((debug_ALU_input_1_expected_prev[4] !== last_debug_ALU_input_1_exp[4]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[4] = debug_ALU_input_1_expected_prev[4];
	end
	if (
		( debug_ALU_input_1_expected_prev[5] !== 1'bx ) && ( debug_ALU_input_1_prev[5] !== debug_ALU_input_1_expected_prev[5] )
		&& ((debug_ALU_input_1_expected_prev[5] !== last_debug_ALU_input_1_exp[5]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[5] = debug_ALU_input_1_expected_prev[5];
	end
	if (
		( debug_ALU_input_1_expected_prev[6] !== 1'bx ) && ( debug_ALU_input_1_prev[6] !== debug_ALU_input_1_expected_prev[6] )
		&& ((debug_ALU_input_1_expected_prev[6] !== last_debug_ALU_input_1_exp[6]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[6] = debug_ALU_input_1_expected_prev[6];
	end
	if (
		( debug_ALU_input_1_expected_prev[7] !== 1'bx ) && ( debug_ALU_input_1_prev[7] !== debug_ALU_input_1_expected_prev[7] )
		&& ((debug_ALU_input_1_expected_prev[7] !== last_debug_ALU_input_1_exp[7]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[7] = debug_ALU_input_1_expected_prev[7];
	end
	if (
		( debug_ALU_input_1_expected_prev[8] !== 1'bx ) && ( debug_ALU_input_1_prev[8] !== debug_ALU_input_1_expected_prev[8] )
		&& ((debug_ALU_input_1_expected_prev[8] !== last_debug_ALU_input_1_exp[8]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[8] = debug_ALU_input_1_expected_prev[8];
	end
	if (
		( debug_ALU_input_1_expected_prev[9] !== 1'bx ) && ( debug_ALU_input_1_prev[9] !== debug_ALU_input_1_expected_prev[9] )
		&& ((debug_ALU_input_1_expected_prev[9] !== last_debug_ALU_input_1_exp[9]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[9] = debug_ALU_input_1_expected_prev[9];
	end
	if (
		( debug_ALU_input_1_expected_prev[10] !== 1'bx ) && ( debug_ALU_input_1_prev[10] !== debug_ALU_input_1_expected_prev[10] )
		&& ((debug_ALU_input_1_expected_prev[10] !== last_debug_ALU_input_1_exp[10]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[10] = debug_ALU_input_1_expected_prev[10];
	end
	if (
		( debug_ALU_input_1_expected_prev[11] !== 1'bx ) && ( debug_ALU_input_1_prev[11] !== debug_ALU_input_1_expected_prev[11] )
		&& ((debug_ALU_input_1_expected_prev[11] !== last_debug_ALU_input_1_exp[11]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[11] = debug_ALU_input_1_expected_prev[11];
	end
	if (
		( debug_ALU_input_1_expected_prev[12] !== 1'bx ) && ( debug_ALU_input_1_prev[12] !== debug_ALU_input_1_expected_prev[12] )
		&& ((debug_ALU_input_1_expected_prev[12] !== last_debug_ALU_input_1_exp[12]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[12] = debug_ALU_input_1_expected_prev[12];
	end
	if (
		( debug_ALU_input_1_expected_prev[13] !== 1'bx ) && ( debug_ALU_input_1_prev[13] !== debug_ALU_input_1_expected_prev[13] )
		&& ((debug_ALU_input_1_expected_prev[13] !== last_debug_ALU_input_1_exp[13]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[13] = debug_ALU_input_1_expected_prev[13];
	end
	if (
		( debug_ALU_input_1_expected_prev[14] !== 1'bx ) && ( debug_ALU_input_1_prev[14] !== debug_ALU_input_1_expected_prev[14] )
		&& ((debug_ALU_input_1_expected_prev[14] !== last_debug_ALU_input_1_exp[14]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[14] = debug_ALU_input_1_expected_prev[14];
	end
	if (
		( debug_ALU_input_1_expected_prev[15] !== 1'bx ) && ( debug_ALU_input_1_prev[15] !== debug_ALU_input_1_expected_prev[15] )
		&& ((debug_ALU_input_1_expected_prev[15] !== last_debug_ALU_input_1_exp[15]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[15] = debug_ALU_input_1_expected_prev[15];
	end
	if (
		( debug_ALU_input_1_expected_prev[16] !== 1'bx ) && ( debug_ALU_input_1_prev[16] !== debug_ALU_input_1_expected_prev[16] )
		&& ((debug_ALU_input_1_expected_prev[16] !== last_debug_ALU_input_1_exp[16]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[16] = debug_ALU_input_1_expected_prev[16];
	end
	if (
		( debug_ALU_input_1_expected_prev[17] !== 1'bx ) && ( debug_ALU_input_1_prev[17] !== debug_ALU_input_1_expected_prev[17] )
		&& ((debug_ALU_input_1_expected_prev[17] !== last_debug_ALU_input_1_exp[17]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[17] = debug_ALU_input_1_expected_prev[17];
	end
	if (
		( debug_ALU_input_1_expected_prev[18] !== 1'bx ) && ( debug_ALU_input_1_prev[18] !== debug_ALU_input_1_expected_prev[18] )
		&& ((debug_ALU_input_1_expected_prev[18] !== last_debug_ALU_input_1_exp[18]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[18] = debug_ALU_input_1_expected_prev[18];
	end
	if (
		( debug_ALU_input_1_expected_prev[19] !== 1'bx ) && ( debug_ALU_input_1_prev[19] !== debug_ALU_input_1_expected_prev[19] )
		&& ((debug_ALU_input_1_expected_prev[19] !== last_debug_ALU_input_1_exp[19]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[19] = debug_ALU_input_1_expected_prev[19];
	end
	if (
		( debug_ALU_input_1_expected_prev[20] !== 1'bx ) && ( debug_ALU_input_1_prev[20] !== debug_ALU_input_1_expected_prev[20] )
		&& ((debug_ALU_input_1_expected_prev[20] !== last_debug_ALU_input_1_exp[20]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[20] = debug_ALU_input_1_expected_prev[20];
	end
	if (
		( debug_ALU_input_1_expected_prev[21] !== 1'bx ) && ( debug_ALU_input_1_prev[21] !== debug_ALU_input_1_expected_prev[21] )
		&& ((debug_ALU_input_1_expected_prev[21] !== last_debug_ALU_input_1_exp[21]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[21] = debug_ALU_input_1_expected_prev[21];
	end
	if (
		( debug_ALU_input_1_expected_prev[22] !== 1'bx ) && ( debug_ALU_input_1_prev[22] !== debug_ALU_input_1_expected_prev[22] )
		&& ((debug_ALU_input_1_expected_prev[22] !== last_debug_ALU_input_1_exp[22]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[22] = debug_ALU_input_1_expected_prev[22];
	end
	if (
		( debug_ALU_input_1_expected_prev[23] !== 1'bx ) && ( debug_ALU_input_1_prev[23] !== debug_ALU_input_1_expected_prev[23] )
		&& ((debug_ALU_input_1_expected_prev[23] !== last_debug_ALU_input_1_exp[23]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[23] = debug_ALU_input_1_expected_prev[23];
	end
	if (
		( debug_ALU_input_1_expected_prev[24] !== 1'bx ) && ( debug_ALU_input_1_prev[24] !== debug_ALU_input_1_expected_prev[24] )
		&& ((debug_ALU_input_1_expected_prev[24] !== last_debug_ALU_input_1_exp[24]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[24] = debug_ALU_input_1_expected_prev[24];
	end
	if (
		( debug_ALU_input_1_expected_prev[25] !== 1'bx ) && ( debug_ALU_input_1_prev[25] !== debug_ALU_input_1_expected_prev[25] )
		&& ((debug_ALU_input_1_expected_prev[25] !== last_debug_ALU_input_1_exp[25]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[25] = debug_ALU_input_1_expected_prev[25];
	end
	if (
		( debug_ALU_input_1_expected_prev[26] !== 1'bx ) && ( debug_ALU_input_1_prev[26] !== debug_ALU_input_1_expected_prev[26] )
		&& ((debug_ALU_input_1_expected_prev[26] !== last_debug_ALU_input_1_exp[26]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[26] = debug_ALU_input_1_expected_prev[26];
	end
	if (
		( debug_ALU_input_1_expected_prev[27] !== 1'bx ) && ( debug_ALU_input_1_prev[27] !== debug_ALU_input_1_expected_prev[27] )
		&& ((debug_ALU_input_1_expected_prev[27] !== last_debug_ALU_input_1_exp[27]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[27] = debug_ALU_input_1_expected_prev[27];
	end
	if (
		( debug_ALU_input_1_expected_prev[28] !== 1'bx ) && ( debug_ALU_input_1_prev[28] !== debug_ALU_input_1_expected_prev[28] )
		&& ((debug_ALU_input_1_expected_prev[28] !== last_debug_ALU_input_1_exp[28]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[28] = debug_ALU_input_1_expected_prev[28];
	end
	if (
		( debug_ALU_input_1_expected_prev[29] !== 1'bx ) && ( debug_ALU_input_1_prev[29] !== debug_ALU_input_1_expected_prev[29] )
		&& ((debug_ALU_input_1_expected_prev[29] !== last_debug_ALU_input_1_exp[29]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[29] = debug_ALU_input_1_expected_prev[29];
	end
	if (
		( debug_ALU_input_1_expected_prev[30] !== 1'bx ) && ( debug_ALU_input_1_prev[30] !== debug_ALU_input_1_expected_prev[30] )
		&& ((debug_ALU_input_1_expected_prev[30] !== last_debug_ALU_input_1_exp[30]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[30] = debug_ALU_input_1_expected_prev[30];
	end
	if (
		( debug_ALU_input_1_expected_prev[31] !== 1'bx ) && ( debug_ALU_input_1_prev[31] !== debug_ALU_input_1_expected_prev[31] )
		&& ((debug_ALU_input_1_expected_prev[31] !== last_debug_ALU_input_1_exp[31]) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_input_1[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_input_1_expected_prev);
		$display ("     Real value = %b", debug_ALU_input_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_debug_ALU_input_1_exp[31] = debug_ALU_input_1_expected_prev[31];
	end
	if (
		( debug_ALU_operation_expected_prev[0] !== 1'bx ) && ( debug_ALU_operation_prev[0] !== debug_ALU_operation_expected_prev[0] )
		&& ((debug_ALU_operation_expected_prev[0] !== last_debug_ALU_operation_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_operation[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_operation_expected_prev);
		$display ("     Real value = %b", debug_ALU_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_debug_ALU_operation_exp[0] = debug_ALU_operation_expected_prev[0];
	end
	if (
		( debug_ALU_operation_expected_prev[1] !== 1'bx ) && ( debug_ALU_operation_prev[1] !== debug_ALU_operation_expected_prev[1] )
		&& ((debug_ALU_operation_expected_prev[1] !== last_debug_ALU_operation_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_operation[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_operation_expected_prev);
		$display ("     Real value = %b", debug_ALU_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_debug_ALU_operation_exp[1] = debug_ALU_operation_expected_prev[1];
	end
	if (
		( debug_ALU_operation_expected_prev[2] !== 1'bx ) && ( debug_ALU_operation_prev[2] !== debug_ALU_operation_expected_prev[2] )
		&& ((debug_ALU_operation_expected_prev[2] !== last_debug_ALU_operation_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_operation[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_operation_expected_prev);
		$display ("     Real value = %b", debug_ALU_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_debug_ALU_operation_exp[2] = debug_ALU_operation_expected_prev[2];
	end
	if (
		( debug_ALU_operation_expected_prev[3] !== 1'bx ) && ( debug_ALU_operation_prev[3] !== debug_ALU_operation_expected_prev[3] )
		&& ((debug_ALU_operation_expected_prev[3] !== last_debug_ALU_operation_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_operation[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_operation_expected_prev);
		$display ("     Real value = %b", debug_ALU_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_debug_ALU_operation_exp[3] = debug_ALU_operation_expected_prev[3];
	end
	if (
		( debug_ALU_output_expected_prev[0] !== 1'bx ) && ( debug_ALU_output_prev[0] !== debug_ALU_output_expected_prev[0] )
		&& ((debug_ALU_output_expected_prev[0] !== last_debug_ALU_output_exp[0]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[0] = debug_ALU_output_expected_prev[0];
	end
	if (
		( debug_ALU_output_expected_prev[1] !== 1'bx ) && ( debug_ALU_output_prev[1] !== debug_ALU_output_expected_prev[1] )
		&& ((debug_ALU_output_expected_prev[1] !== last_debug_ALU_output_exp[1]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[1] = debug_ALU_output_expected_prev[1];
	end
	if (
		( debug_ALU_output_expected_prev[2] !== 1'bx ) && ( debug_ALU_output_prev[2] !== debug_ALU_output_expected_prev[2] )
		&& ((debug_ALU_output_expected_prev[2] !== last_debug_ALU_output_exp[2]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[2] = debug_ALU_output_expected_prev[2];
	end
	if (
		( debug_ALU_output_expected_prev[3] !== 1'bx ) && ( debug_ALU_output_prev[3] !== debug_ALU_output_expected_prev[3] )
		&& ((debug_ALU_output_expected_prev[3] !== last_debug_ALU_output_exp[3]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[3] = debug_ALU_output_expected_prev[3];
	end
	if (
		( debug_ALU_output_expected_prev[4] !== 1'bx ) && ( debug_ALU_output_prev[4] !== debug_ALU_output_expected_prev[4] )
		&& ((debug_ALU_output_expected_prev[4] !== last_debug_ALU_output_exp[4]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[4] = debug_ALU_output_expected_prev[4];
	end
	if (
		( debug_ALU_output_expected_prev[5] !== 1'bx ) && ( debug_ALU_output_prev[5] !== debug_ALU_output_expected_prev[5] )
		&& ((debug_ALU_output_expected_prev[5] !== last_debug_ALU_output_exp[5]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[5] = debug_ALU_output_expected_prev[5];
	end
	if (
		( debug_ALU_output_expected_prev[6] !== 1'bx ) && ( debug_ALU_output_prev[6] !== debug_ALU_output_expected_prev[6] )
		&& ((debug_ALU_output_expected_prev[6] !== last_debug_ALU_output_exp[6]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[6] = debug_ALU_output_expected_prev[6];
	end
	if (
		( debug_ALU_output_expected_prev[7] !== 1'bx ) && ( debug_ALU_output_prev[7] !== debug_ALU_output_expected_prev[7] )
		&& ((debug_ALU_output_expected_prev[7] !== last_debug_ALU_output_exp[7]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[7] = debug_ALU_output_expected_prev[7];
	end
	if (
		( debug_ALU_output_expected_prev[8] !== 1'bx ) && ( debug_ALU_output_prev[8] !== debug_ALU_output_expected_prev[8] )
		&& ((debug_ALU_output_expected_prev[8] !== last_debug_ALU_output_exp[8]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[8] = debug_ALU_output_expected_prev[8];
	end
	if (
		( debug_ALU_output_expected_prev[9] !== 1'bx ) && ( debug_ALU_output_prev[9] !== debug_ALU_output_expected_prev[9] )
		&& ((debug_ALU_output_expected_prev[9] !== last_debug_ALU_output_exp[9]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[9] = debug_ALU_output_expected_prev[9];
	end
	if (
		( debug_ALU_output_expected_prev[10] !== 1'bx ) && ( debug_ALU_output_prev[10] !== debug_ALU_output_expected_prev[10] )
		&& ((debug_ALU_output_expected_prev[10] !== last_debug_ALU_output_exp[10]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[10] = debug_ALU_output_expected_prev[10];
	end
	if (
		( debug_ALU_output_expected_prev[11] !== 1'bx ) && ( debug_ALU_output_prev[11] !== debug_ALU_output_expected_prev[11] )
		&& ((debug_ALU_output_expected_prev[11] !== last_debug_ALU_output_exp[11]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[11] = debug_ALU_output_expected_prev[11];
	end
	if (
		( debug_ALU_output_expected_prev[12] !== 1'bx ) && ( debug_ALU_output_prev[12] !== debug_ALU_output_expected_prev[12] )
		&& ((debug_ALU_output_expected_prev[12] !== last_debug_ALU_output_exp[12]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[12] = debug_ALU_output_expected_prev[12];
	end
	if (
		( debug_ALU_output_expected_prev[13] !== 1'bx ) && ( debug_ALU_output_prev[13] !== debug_ALU_output_expected_prev[13] )
		&& ((debug_ALU_output_expected_prev[13] !== last_debug_ALU_output_exp[13]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[13] = debug_ALU_output_expected_prev[13];
	end
	if (
		( debug_ALU_output_expected_prev[14] !== 1'bx ) && ( debug_ALU_output_prev[14] !== debug_ALU_output_expected_prev[14] )
		&& ((debug_ALU_output_expected_prev[14] !== last_debug_ALU_output_exp[14]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[14] = debug_ALU_output_expected_prev[14];
	end
	if (
		( debug_ALU_output_expected_prev[15] !== 1'bx ) && ( debug_ALU_output_prev[15] !== debug_ALU_output_expected_prev[15] )
		&& ((debug_ALU_output_expected_prev[15] !== last_debug_ALU_output_exp[15]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[15] = debug_ALU_output_expected_prev[15];
	end
	if (
		( debug_ALU_output_expected_prev[16] !== 1'bx ) && ( debug_ALU_output_prev[16] !== debug_ALU_output_expected_prev[16] )
		&& ((debug_ALU_output_expected_prev[16] !== last_debug_ALU_output_exp[16]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[16] = debug_ALU_output_expected_prev[16];
	end
	if (
		( debug_ALU_output_expected_prev[17] !== 1'bx ) && ( debug_ALU_output_prev[17] !== debug_ALU_output_expected_prev[17] )
		&& ((debug_ALU_output_expected_prev[17] !== last_debug_ALU_output_exp[17]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[17] = debug_ALU_output_expected_prev[17];
	end
	if (
		( debug_ALU_output_expected_prev[18] !== 1'bx ) && ( debug_ALU_output_prev[18] !== debug_ALU_output_expected_prev[18] )
		&& ((debug_ALU_output_expected_prev[18] !== last_debug_ALU_output_exp[18]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[18] = debug_ALU_output_expected_prev[18];
	end
	if (
		( debug_ALU_output_expected_prev[19] !== 1'bx ) && ( debug_ALU_output_prev[19] !== debug_ALU_output_expected_prev[19] )
		&& ((debug_ALU_output_expected_prev[19] !== last_debug_ALU_output_exp[19]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[19] = debug_ALU_output_expected_prev[19];
	end
	if (
		( debug_ALU_output_expected_prev[20] !== 1'bx ) && ( debug_ALU_output_prev[20] !== debug_ALU_output_expected_prev[20] )
		&& ((debug_ALU_output_expected_prev[20] !== last_debug_ALU_output_exp[20]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[20] = debug_ALU_output_expected_prev[20];
	end
	if (
		( debug_ALU_output_expected_prev[21] !== 1'bx ) && ( debug_ALU_output_prev[21] !== debug_ALU_output_expected_prev[21] )
		&& ((debug_ALU_output_expected_prev[21] !== last_debug_ALU_output_exp[21]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[21] = debug_ALU_output_expected_prev[21];
	end
	if (
		( debug_ALU_output_expected_prev[22] !== 1'bx ) && ( debug_ALU_output_prev[22] !== debug_ALU_output_expected_prev[22] )
		&& ((debug_ALU_output_expected_prev[22] !== last_debug_ALU_output_exp[22]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[22] = debug_ALU_output_expected_prev[22];
	end
	if (
		( debug_ALU_output_expected_prev[23] !== 1'bx ) && ( debug_ALU_output_prev[23] !== debug_ALU_output_expected_prev[23] )
		&& ((debug_ALU_output_expected_prev[23] !== last_debug_ALU_output_exp[23]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[23] = debug_ALU_output_expected_prev[23];
	end
	if (
		( debug_ALU_output_expected_prev[24] !== 1'bx ) && ( debug_ALU_output_prev[24] !== debug_ALU_output_expected_prev[24] )
		&& ((debug_ALU_output_expected_prev[24] !== last_debug_ALU_output_exp[24]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[24] = debug_ALU_output_expected_prev[24];
	end
	if (
		( debug_ALU_output_expected_prev[25] !== 1'bx ) && ( debug_ALU_output_prev[25] !== debug_ALU_output_expected_prev[25] )
		&& ((debug_ALU_output_expected_prev[25] !== last_debug_ALU_output_exp[25]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[25] = debug_ALU_output_expected_prev[25];
	end
	if (
		( debug_ALU_output_expected_prev[26] !== 1'bx ) && ( debug_ALU_output_prev[26] !== debug_ALU_output_expected_prev[26] )
		&& ((debug_ALU_output_expected_prev[26] !== last_debug_ALU_output_exp[26]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[26] = debug_ALU_output_expected_prev[26];
	end
	if (
		( debug_ALU_output_expected_prev[27] !== 1'bx ) && ( debug_ALU_output_prev[27] !== debug_ALU_output_expected_prev[27] )
		&& ((debug_ALU_output_expected_prev[27] !== last_debug_ALU_output_exp[27]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[27] = debug_ALU_output_expected_prev[27];
	end
	if (
		( debug_ALU_output_expected_prev[28] !== 1'bx ) && ( debug_ALU_output_prev[28] !== debug_ALU_output_expected_prev[28] )
		&& ((debug_ALU_output_expected_prev[28] !== last_debug_ALU_output_exp[28]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[28] = debug_ALU_output_expected_prev[28];
	end
	if (
		( debug_ALU_output_expected_prev[29] !== 1'bx ) && ( debug_ALU_output_prev[29] !== debug_ALU_output_expected_prev[29] )
		&& ((debug_ALU_output_expected_prev[29] !== last_debug_ALU_output_exp[29]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[29] = debug_ALU_output_expected_prev[29];
	end
	if (
		( debug_ALU_output_expected_prev[30] !== 1'bx ) && ( debug_ALU_output_prev[30] !== debug_ALU_output_expected_prev[30] )
		&& ((debug_ALU_output_expected_prev[30] !== last_debug_ALU_output_exp[30]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[30] = debug_ALU_output_expected_prev[30];
	end
	if (
		( debug_ALU_output_expected_prev[31] !== 1'bx ) && ( debug_ALU_output_prev[31] !== debug_ALU_output_expected_prev[31] )
		&& ((debug_ALU_output_expected_prev[31] !== last_debug_ALU_output_exp[31]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_debug_ALU_output_exp[31] = debug_ALU_output_expected_prev[31];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[0] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[0] !== debug_ALU_output_from_EX_expected_prev[0] )
		&& ((debug_ALU_output_from_EX_expected_prev[0] !== last_debug_ALU_output_from_EX_exp[0]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[0] = debug_ALU_output_from_EX_expected_prev[0];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[1] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[1] !== debug_ALU_output_from_EX_expected_prev[1] )
		&& ((debug_ALU_output_from_EX_expected_prev[1] !== last_debug_ALU_output_from_EX_exp[1]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[1] = debug_ALU_output_from_EX_expected_prev[1];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[2] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[2] !== debug_ALU_output_from_EX_expected_prev[2] )
		&& ((debug_ALU_output_from_EX_expected_prev[2] !== last_debug_ALU_output_from_EX_exp[2]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[2] = debug_ALU_output_from_EX_expected_prev[2];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[3] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[3] !== debug_ALU_output_from_EX_expected_prev[3] )
		&& ((debug_ALU_output_from_EX_expected_prev[3] !== last_debug_ALU_output_from_EX_exp[3]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[3] = debug_ALU_output_from_EX_expected_prev[3];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[4] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[4] !== debug_ALU_output_from_EX_expected_prev[4] )
		&& ((debug_ALU_output_from_EX_expected_prev[4] !== last_debug_ALU_output_from_EX_exp[4]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[4] = debug_ALU_output_from_EX_expected_prev[4];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[5] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[5] !== debug_ALU_output_from_EX_expected_prev[5] )
		&& ((debug_ALU_output_from_EX_expected_prev[5] !== last_debug_ALU_output_from_EX_exp[5]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[5] = debug_ALU_output_from_EX_expected_prev[5];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[6] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[6] !== debug_ALU_output_from_EX_expected_prev[6] )
		&& ((debug_ALU_output_from_EX_expected_prev[6] !== last_debug_ALU_output_from_EX_exp[6]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[6] = debug_ALU_output_from_EX_expected_prev[6];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[7] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[7] !== debug_ALU_output_from_EX_expected_prev[7] )
		&& ((debug_ALU_output_from_EX_expected_prev[7] !== last_debug_ALU_output_from_EX_exp[7]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[7] = debug_ALU_output_from_EX_expected_prev[7];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[8] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[8] !== debug_ALU_output_from_EX_expected_prev[8] )
		&& ((debug_ALU_output_from_EX_expected_prev[8] !== last_debug_ALU_output_from_EX_exp[8]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[8] = debug_ALU_output_from_EX_expected_prev[8];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[9] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[9] !== debug_ALU_output_from_EX_expected_prev[9] )
		&& ((debug_ALU_output_from_EX_expected_prev[9] !== last_debug_ALU_output_from_EX_exp[9]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[9] = debug_ALU_output_from_EX_expected_prev[9];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[10] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[10] !== debug_ALU_output_from_EX_expected_prev[10] )
		&& ((debug_ALU_output_from_EX_expected_prev[10] !== last_debug_ALU_output_from_EX_exp[10]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[10] = debug_ALU_output_from_EX_expected_prev[10];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[11] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[11] !== debug_ALU_output_from_EX_expected_prev[11] )
		&& ((debug_ALU_output_from_EX_expected_prev[11] !== last_debug_ALU_output_from_EX_exp[11]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[11] = debug_ALU_output_from_EX_expected_prev[11];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[12] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[12] !== debug_ALU_output_from_EX_expected_prev[12] )
		&& ((debug_ALU_output_from_EX_expected_prev[12] !== last_debug_ALU_output_from_EX_exp[12]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[12] = debug_ALU_output_from_EX_expected_prev[12];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[13] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[13] !== debug_ALU_output_from_EX_expected_prev[13] )
		&& ((debug_ALU_output_from_EX_expected_prev[13] !== last_debug_ALU_output_from_EX_exp[13]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[13] = debug_ALU_output_from_EX_expected_prev[13];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[14] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[14] !== debug_ALU_output_from_EX_expected_prev[14] )
		&& ((debug_ALU_output_from_EX_expected_prev[14] !== last_debug_ALU_output_from_EX_exp[14]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[14] = debug_ALU_output_from_EX_expected_prev[14];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[15] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[15] !== debug_ALU_output_from_EX_expected_prev[15] )
		&& ((debug_ALU_output_from_EX_expected_prev[15] !== last_debug_ALU_output_from_EX_exp[15]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[15] = debug_ALU_output_from_EX_expected_prev[15];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[16] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[16] !== debug_ALU_output_from_EX_expected_prev[16] )
		&& ((debug_ALU_output_from_EX_expected_prev[16] !== last_debug_ALU_output_from_EX_exp[16]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[16] = debug_ALU_output_from_EX_expected_prev[16];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[17] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[17] !== debug_ALU_output_from_EX_expected_prev[17] )
		&& ((debug_ALU_output_from_EX_expected_prev[17] !== last_debug_ALU_output_from_EX_exp[17]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[17] = debug_ALU_output_from_EX_expected_prev[17];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[18] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[18] !== debug_ALU_output_from_EX_expected_prev[18] )
		&& ((debug_ALU_output_from_EX_expected_prev[18] !== last_debug_ALU_output_from_EX_exp[18]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[18] = debug_ALU_output_from_EX_expected_prev[18];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[19] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[19] !== debug_ALU_output_from_EX_expected_prev[19] )
		&& ((debug_ALU_output_from_EX_expected_prev[19] !== last_debug_ALU_output_from_EX_exp[19]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[19] = debug_ALU_output_from_EX_expected_prev[19];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[20] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[20] !== debug_ALU_output_from_EX_expected_prev[20] )
		&& ((debug_ALU_output_from_EX_expected_prev[20] !== last_debug_ALU_output_from_EX_exp[20]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[20] = debug_ALU_output_from_EX_expected_prev[20];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[21] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[21] !== debug_ALU_output_from_EX_expected_prev[21] )
		&& ((debug_ALU_output_from_EX_expected_prev[21] !== last_debug_ALU_output_from_EX_exp[21]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[21] = debug_ALU_output_from_EX_expected_prev[21];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[22] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[22] !== debug_ALU_output_from_EX_expected_prev[22] )
		&& ((debug_ALU_output_from_EX_expected_prev[22] !== last_debug_ALU_output_from_EX_exp[22]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[22] = debug_ALU_output_from_EX_expected_prev[22];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[23] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[23] !== debug_ALU_output_from_EX_expected_prev[23] )
		&& ((debug_ALU_output_from_EX_expected_prev[23] !== last_debug_ALU_output_from_EX_exp[23]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[23] = debug_ALU_output_from_EX_expected_prev[23];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[24] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[24] !== debug_ALU_output_from_EX_expected_prev[24] )
		&& ((debug_ALU_output_from_EX_expected_prev[24] !== last_debug_ALU_output_from_EX_exp[24]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[24] = debug_ALU_output_from_EX_expected_prev[24];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[25] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[25] !== debug_ALU_output_from_EX_expected_prev[25] )
		&& ((debug_ALU_output_from_EX_expected_prev[25] !== last_debug_ALU_output_from_EX_exp[25]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[25] = debug_ALU_output_from_EX_expected_prev[25];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[26] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[26] !== debug_ALU_output_from_EX_expected_prev[26] )
		&& ((debug_ALU_output_from_EX_expected_prev[26] !== last_debug_ALU_output_from_EX_exp[26]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[26] = debug_ALU_output_from_EX_expected_prev[26];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[27] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[27] !== debug_ALU_output_from_EX_expected_prev[27] )
		&& ((debug_ALU_output_from_EX_expected_prev[27] !== last_debug_ALU_output_from_EX_exp[27]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[27] = debug_ALU_output_from_EX_expected_prev[27];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[28] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[28] !== debug_ALU_output_from_EX_expected_prev[28] )
		&& ((debug_ALU_output_from_EX_expected_prev[28] !== last_debug_ALU_output_from_EX_exp[28]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[28] = debug_ALU_output_from_EX_expected_prev[28];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[29] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[29] !== debug_ALU_output_from_EX_expected_prev[29] )
		&& ((debug_ALU_output_from_EX_expected_prev[29] !== last_debug_ALU_output_from_EX_exp[29]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[29] = debug_ALU_output_from_EX_expected_prev[29];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[30] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[30] !== debug_ALU_output_from_EX_expected_prev[30] )
		&& ((debug_ALU_output_from_EX_expected_prev[30] !== last_debug_ALU_output_from_EX_exp[30]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[30] = debug_ALU_output_from_EX_expected_prev[30];
	end
	if (
		( debug_ALU_output_from_EX_expected_prev[31] !== 1'bx ) && ( debug_ALU_output_from_EX_prev[31] !== debug_ALU_output_from_EX_expected_prev[31] )
		&& ((debug_ALU_output_from_EX_expected_prev[31] !== last_debug_ALU_output_from_EX_exp[31]) ||
			on_first_change[5])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_EX[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_EX_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_EX_prev);
		nummismatches = nummismatches + 1;
		on_first_change[5] = 1'b0;
		last_debug_ALU_output_from_EX_exp[31] = debug_ALU_output_from_EX_expected_prev[31];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[0] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[0] !== debug_ALU_output_from_MEM_expected_prev[0] )
		&& ((debug_ALU_output_from_MEM_expected_prev[0] !== last_debug_ALU_output_from_MEM_exp[0]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[0] = debug_ALU_output_from_MEM_expected_prev[0];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[1] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[1] !== debug_ALU_output_from_MEM_expected_prev[1] )
		&& ((debug_ALU_output_from_MEM_expected_prev[1] !== last_debug_ALU_output_from_MEM_exp[1]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[1] = debug_ALU_output_from_MEM_expected_prev[1];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[2] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[2] !== debug_ALU_output_from_MEM_expected_prev[2] )
		&& ((debug_ALU_output_from_MEM_expected_prev[2] !== last_debug_ALU_output_from_MEM_exp[2]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[2] = debug_ALU_output_from_MEM_expected_prev[2];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[3] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[3] !== debug_ALU_output_from_MEM_expected_prev[3] )
		&& ((debug_ALU_output_from_MEM_expected_prev[3] !== last_debug_ALU_output_from_MEM_exp[3]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[3] = debug_ALU_output_from_MEM_expected_prev[3];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[4] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[4] !== debug_ALU_output_from_MEM_expected_prev[4] )
		&& ((debug_ALU_output_from_MEM_expected_prev[4] !== last_debug_ALU_output_from_MEM_exp[4]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[4] = debug_ALU_output_from_MEM_expected_prev[4];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[5] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[5] !== debug_ALU_output_from_MEM_expected_prev[5] )
		&& ((debug_ALU_output_from_MEM_expected_prev[5] !== last_debug_ALU_output_from_MEM_exp[5]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[5] = debug_ALU_output_from_MEM_expected_prev[5];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[6] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[6] !== debug_ALU_output_from_MEM_expected_prev[6] )
		&& ((debug_ALU_output_from_MEM_expected_prev[6] !== last_debug_ALU_output_from_MEM_exp[6]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[6] = debug_ALU_output_from_MEM_expected_prev[6];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[7] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[7] !== debug_ALU_output_from_MEM_expected_prev[7] )
		&& ((debug_ALU_output_from_MEM_expected_prev[7] !== last_debug_ALU_output_from_MEM_exp[7]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[7] = debug_ALU_output_from_MEM_expected_prev[7];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[8] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[8] !== debug_ALU_output_from_MEM_expected_prev[8] )
		&& ((debug_ALU_output_from_MEM_expected_prev[8] !== last_debug_ALU_output_from_MEM_exp[8]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[8] = debug_ALU_output_from_MEM_expected_prev[8];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[9] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[9] !== debug_ALU_output_from_MEM_expected_prev[9] )
		&& ((debug_ALU_output_from_MEM_expected_prev[9] !== last_debug_ALU_output_from_MEM_exp[9]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[9] = debug_ALU_output_from_MEM_expected_prev[9];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[10] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[10] !== debug_ALU_output_from_MEM_expected_prev[10] )
		&& ((debug_ALU_output_from_MEM_expected_prev[10] !== last_debug_ALU_output_from_MEM_exp[10]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[10] = debug_ALU_output_from_MEM_expected_prev[10];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[11] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[11] !== debug_ALU_output_from_MEM_expected_prev[11] )
		&& ((debug_ALU_output_from_MEM_expected_prev[11] !== last_debug_ALU_output_from_MEM_exp[11]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[11] = debug_ALU_output_from_MEM_expected_prev[11];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[12] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[12] !== debug_ALU_output_from_MEM_expected_prev[12] )
		&& ((debug_ALU_output_from_MEM_expected_prev[12] !== last_debug_ALU_output_from_MEM_exp[12]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[12] = debug_ALU_output_from_MEM_expected_prev[12];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[13] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[13] !== debug_ALU_output_from_MEM_expected_prev[13] )
		&& ((debug_ALU_output_from_MEM_expected_prev[13] !== last_debug_ALU_output_from_MEM_exp[13]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[13] = debug_ALU_output_from_MEM_expected_prev[13];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[14] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[14] !== debug_ALU_output_from_MEM_expected_prev[14] )
		&& ((debug_ALU_output_from_MEM_expected_prev[14] !== last_debug_ALU_output_from_MEM_exp[14]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[14] = debug_ALU_output_from_MEM_expected_prev[14];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[15] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[15] !== debug_ALU_output_from_MEM_expected_prev[15] )
		&& ((debug_ALU_output_from_MEM_expected_prev[15] !== last_debug_ALU_output_from_MEM_exp[15]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[15] = debug_ALU_output_from_MEM_expected_prev[15];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[16] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[16] !== debug_ALU_output_from_MEM_expected_prev[16] )
		&& ((debug_ALU_output_from_MEM_expected_prev[16] !== last_debug_ALU_output_from_MEM_exp[16]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[16] = debug_ALU_output_from_MEM_expected_prev[16];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[17] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[17] !== debug_ALU_output_from_MEM_expected_prev[17] )
		&& ((debug_ALU_output_from_MEM_expected_prev[17] !== last_debug_ALU_output_from_MEM_exp[17]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[17] = debug_ALU_output_from_MEM_expected_prev[17];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[18] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[18] !== debug_ALU_output_from_MEM_expected_prev[18] )
		&& ((debug_ALU_output_from_MEM_expected_prev[18] !== last_debug_ALU_output_from_MEM_exp[18]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[18] = debug_ALU_output_from_MEM_expected_prev[18];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[19] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[19] !== debug_ALU_output_from_MEM_expected_prev[19] )
		&& ((debug_ALU_output_from_MEM_expected_prev[19] !== last_debug_ALU_output_from_MEM_exp[19]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[19] = debug_ALU_output_from_MEM_expected_prev[19];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[20] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[20] !== debug_ALU_output_from_MEM_expected_prev[20] )
		&& ((debug_ALU_output_from_MEM_expected_prev[20] !== last_debug_ALU_output_from_MEM_exp[20]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[20] = debug_ALU_output_from_MEM_expected_prev[20];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[21] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[21] !== debug_ALU_output_from_MEM_expected_prev[21] )
		&& ((debug_ALU_output_from_MEM_expected_prev[21] !== last_debug_ALU_output_from_MEM_exp[21]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[21] = debug_ALU_output_from_MEM_expected_prev[21];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[22] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[22] !== debug_ALU_output_from_MEM_expected_prev[22] )
		&& ((debug_ALU_output_from_MEM_expected_prev[22] !== last_debug_ALU_output_from_MEM_exp[22]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[22] = debug_ALU_output_from_MEM_expected_prev[22];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[23] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[23] !== debug_ALU_output_from_MEM_expected_prev[23] )
		&& ((debug_ALU_output_from_MEM_expected_prev[23] !== last_debug_ALU_output_from_MEM_exp[23]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[23] = debug_ALU_output_from_MEM_expected_prev[23];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[24] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[24] !== debug_ALU_output_from_MEM_expected_prev[24] )
		&& ((debug_ALU_output_from_MEM_expected_prev[24] !== last_debug_ALU_output_from_MEM_exp[24]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[24] = debug_ALU_output_from_MEM_expected_prev[24];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[25] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[25] !== debug_ALU_output_from_MEM_expected_prev[25] )
		&& ((debug_ALU_output_from_MEM_expected_prev[25] !== last_debug_ALU_output_from_MEM_exp[25]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[25] = debug_ALU_output_from_MEM_expected_prev[25];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[26] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[26] !== debug_ALU_output_from_MEM_expected_prev[26] )
		&& ((debug_ALU_output_from_MEM_expected_prev[26] !== last_debug_ALU_output_from_MEM_exp[26]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[26] = debug_ALU_output_from_MEM_expected_prev[26];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[27] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[27] !== debug_ALU_output_from_MEM_expected_prev[27] )
		&& ((debug_ALU_output_from_MEM_expected_prev[27] !== last_debug_ALU_output_from_MEM_exp[27]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[27] = debug_ALU_output_from_MEM_expected_prev[27];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[28] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[28] !== debug_ALU_output_from_MEM_expected_prev[28] )
		&& ((debug_ALU_output_from_MEM_expected_prev[28] !== last_debug_ALU_output_from_MEM_exp[28]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[28] = debug_ALU_output_from_MEM_expected_prev[28];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[29] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[29] !== debug_ALU_output_from_MEM_expected_prev[29] )
		&& ((debug_ALU_output_from_MEM_expected_prev[29] !== last_debug_ALU_output_from_MEM_exp[29]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[29] = debug_ALU_output_from_MEM_expected_prev[29];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[30] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[30] !== debug_ALU_output_from_MEM_expected_prev[30] )
		&& ((debug_ALU_output_from_MEM_expected_prev[30] !== last_debug_ALU_output_from_MEM_exp[30]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[30] = debug_ALU_output_from_MEM_expected_prev[30];
	end
	if (
		( debug_ALU_output_from_MEM_expected_prev[31] !== 1'bx ) && ( debug_ALU_output_from_MEM_prev[31] !== debug_ALU_output_from_MEM_expected_prev[31] )
		&& ((debug_ALU_output_from_MEM_expected_prev[31] !== last_debug_ALU_output_from_MEM_exp[31]) ||
			on_first_change[6])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_ALU_output_from_MEM[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_ALU_output_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_ALU_output_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[6] = 1'b0;
		last_debug_ALU_output_from_MEM_exp[31] = debug_ALU_output_from_MEM_expected_prev[31];
	end
	if (
		( debug_controller_state_expected_prev[0] !== 1'bx ) && ( debug_controller_state_prev[0] !== debug_controller_state_expected_prev[0] )
		&& ((debug_controller_state_expected_prev[0] !== last_debug_controller_state_exp[0]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_controller_state[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_controller_state_expected_prev);
		$display ("     Real value = %b", debug_controller_state_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_debug_controller_state_exp[0] = debug_controller_state_expected_prev[0];
	end
	if (
		( debug_controller_state_expected_prev[1] !== 1'bx ) && ( debug_controller_state_prev[1] !== debug_controller_state_expected_prev[1] )
		&& ((debug_controller_state_expected_prev[1] !== last_debug_controller_state_exp[1]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_controller_state[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_controller_state_expected_prev);
		$display ("     Real value = %b", debug_controller_state_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_debug_controller_state_exp[1] = debug_controller_state_expected_prev[1];
	end
	if (
		( debug_controller_state_expected_prev[2] !== 1'bx ) && ( debug_controller_state_prev[2] !== debug_controller_state_expected_prev[2] )
		&& ((debug_controller_state_expected_prev[2] !== last_debug_controller_state_exp[2]) ||
			on_first_change[7])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_controller_state[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_controller_state_expected_prev);
		$display ("     Real value = %b", debug_controller_state_prev);
		nummismatches = nummismatches + 1;
		on_first_change[7] = 1'b0;
		last_debug_controller_state_exp[2] = debug_controller_state_expected_prev[2];
	end
	if (
		( debug_forward_mux_0_expected_prev[0] !== 1'bx ) && ( debug_forward_mux_0_prev[0] !== debug_forward_mux_0_expected_prev[0] )
		&& ((debug_forward_mux_0_expected_prev[0] !== last_debug_forward_mux_0_exp[0]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_forward_mux_0[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_forward_mux_0_expected_prev);
		$display ("     Real value = %b", debug_forward_mux_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_debug_forward_mux_0_exp[0] = debug_forward_mux_0_expected_prev[0];
	end
	if (
		( debug_forward_mux_0_expected_prev[1] !== 1'bx ) && ( debug_forward_mux_0_prev[1] !== debug_forward_mux_0_expected_prev[1] )
		&& ((debug_forward_mux_0_expected_prev[1] !== last_debug_forward_mux_0_exp[1]) ||
			on_first_change[8])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_forward_mux_0[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_forward_mux_0_expected_prev);
		$display ("     Real value = %b", debug_forward_mux_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[8] = 1'b0;
		last_debug_forward_mux_0_exp[1] = debug_forward_mux_0_expected_prev[1];
	end
	if (
		( debug_forward_mux_1_expected_prev[0] !== 1'bx ) && ( debug_forward_mux_1_prev[0] !== debug_forward_mux_1_expected_prev[0] )
		&& ((debug_forward_mux_1_expected_prev[0] !== last_debug_forward_mux_1_exp[0]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_forward_mux_1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_forward_mux_1_expected_prev);
		$display ("     Real value = %b", debug_forward_mux_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_debug_forward_mux_1_exp[0] = debug_forward_mux_1_expected_prev[0];
	end
	if (
		( debug_forward_mux_1_expected_prev[1] !== 1'bx ) && ( debug_forward_mux_1_prev[1] !== debug_forward_mux_1_expected_prev[1] )
		&& ((debug_forward_mux_1_expected_prev[1] !== last_debug_forward_mux_1_exp[1]) ||
			on_first_change[9])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_forward_mux_1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_forward_mux_1_expected_prev);
		$display ("     Real value = %b", debug_forward_mux_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[9] = 1'b0;
		last_debug_forward_mux_1_exp[1] = debug_forward_mux_1_expected_prev[1];
	end
	if (
		( debug_immediate_expected_prev[0] !== 1'bx ) && ( debug_immediate_prev[0] !== debug_immediate_expected_prev[0] )
		&& ((debug_immediate_expected_prev[0] !== last_debug_immediate_exp[0]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[0] = debug_immediate_expected_prev[0];
	end
	if (
		( debug_immediate_expected_prev[1] !== 1'bx ) && ( debug_immediate_prev[1] !== debug_immediate_expected_prev[1] )
		&& ((debug_immediate_expected_prev[1] !== last_debug_immediate_exp[1]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[1] = debug_immediate_expected_prev[1];
	end
	if (
		( debug_immediate_expected_prev[2] !== 1'bx ) && ( debug_immediate_prev[2] !== debug_immediate_expected_prev[2] )
		&& ((debug_immediate_expected_prev[2] !== last_debug_immediate_exp[2]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[2] = debug_immediate_expected_prev[2];
	end
	if (
		( debug_immediate_expected_prev[3] !== 1'bx ) && ( debug_immediate_prev[3] !== debug_immediate_expected_prev[3] )
		&& ((debug_immediate_expected_prev[3] !== last_debug_immediate_exp[3]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[3] = debug_immediate_expected_prev[3];
	end
	if (
		( debug_immediate_expected_prev[4] !== 1'bx ) && ( debug_immediate_prev[4] !== debug_immediate_expected_prev[4] )
		&& ((debug_immediate_expected_prev[4] !== last_debug_immediate_exp[4]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[4] = debug_immediate_expected_prev[4];
	end
	if (
		( debug_immediate_expected_prev[5] !== 1'bx ) && ( debug_immediate_prev[5] !== debug_immediate_expected_prev[5] )
		&& ((debug_immediate_expected_prev[5] !== last_debug_immediate_exp[5]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[5] = debug_immediate_expected_prev[5];
	end
	if (
		( debug_immediate_expected_prev[6] !== 1'bx ) && ( debug_immediate_prev[6] !== debug_immediate_expected_prev[6] )
		&& ((debug_immediate_expected_prev[6] !== last_debug_immediate_exp[6]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[6] = debug_immediate_expected_prev[6];
	end
	if (
		( debug_immediate_expected_prev[7] !== 1'bx ) && ( debug_immediate_prev[7] !== debug_immediate_expected_prev[7] )
		&& ((debug_immediate_expected_prev[7] !== last_debug_immediate_exp[7]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[7] = debug_immediate_expected_prev[7];
	end
	if (
		( debug_immediate_expected_prev[8] !== 1'bx ) && ( debug_immediate_prev[8] !== debug_immediate_expected_prev[8] )
		&& ((debug_immediate_expected_prev[8] !== last_debug_immediate_exp[8]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[8] = debug_immediate_expected_prev[8];
	end
	if (
		( debug_immediate_expected_prev[9] !== 1'bx ) && ( debug_immediate_prev[9] !== debug_immediate_expected_prev[9] )
		&& ((debug_immediate_expected_prev[9] !== last_debug_immediate_exp[9]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[9] = debug_immediate_expected_prev[9];
	end
	if (
		( debug_immediate_expected_prev[10] !== 1'bx ) && ( debug_immediate_prev[10] !== debug_immediate_expected_prev[10] )
		&& ((debug_immediate_expected_prev[10] !== last_debug_immediate_exp[10]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[10] = debug_immediate_expected_prev[10];
	end
	if (
		( debug_immediate_expected_prev[11] !== 1'bx ) && ( debug_immediate_prev[11] !== debug_immediate_expected_prev[11] )
		&& ((debug_immediate_expected_prev[11] !== last_debug_immediate_exp[11]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[11] = debug_immediate_expected_prev[11];
	end
	if (
		( debug_immediate_expected_prev[12] !== 1'bx ) && ( debug_immediate_prev[12] !== debug_immediate_expected_prev[12] )
		&& ((debug_immediate_expected_prev[12] !== last_debug_immediate_exp[12]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[12] = debug_immediate_expected_prev[12];
	end
	if (
		( debug_immediate_expected_prev[13] !== 1'bx ) && ( debug_immediate_prev[13] !== debug_immediate_expected_prev[13] )
		&& ((debug_immediate_expected_prev[13] !== last_debug_immediate_exp[13]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[13] = debug_immediate_expected_prev[13];
	end
	if (
		( debug_immediate_expected_prev[14] !== 1'bx ) && ( debug_immediate_prev[14] !== debug_immediate_expected_prev[14] )
		&& ((debug_immediate_expected_prev[14] !== last_debug_immediate_exp[14]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[14] = debug_immediate_expected_prev[14];
	end
	if (
		( debug_immediate_expected_prev[15] !== 1'bx ) && ( debug_immediate_prev[15] !== debug_immediate_expected_prev[15] )
		&& ((debug_immediate_expected_prev[15] !== last_debug_immediate_exp[15]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[15] = debug_immediate_expected_prev[15];
	end
	if (
		( debug_immediate_expected_prev[16] !== 1'bx ) && ( debug_immediate_prev[16] !== debug_immediate_expected_prev[16] )
		&& ((debug_immediate_expected_prev[16] !== last_debug_immediate_exp[16]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[16] = debug_immediate_expected_prev[16];
	end
	if (
		( debug_immediate_expected_prev[17] !== 1'bx ) && ( debug_immediate_prev[17] !== debug_immediate_expected_prev[17] )
		&& ((debug_immediate_expected_prev[17] !== last_debug_immediate_exp[17]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[17] = debug_immediate_expected_prev[17];
	end
	if (
		( debug_immediate_expected_prev[18] !== 1'bx ) && ( debug_immediate_prev[18] !== debug_immediate_expected_prev[18] )
		&& ((debug_immediate_expected_prev[18] !== last_debug_immediate_exp[18]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[18] = debug_immediate_expected_prev[18];
	end
	if (
		( debug_immediate_expected_prev[19] !== 1'bx ) && ( debug_immediate_prev[19] !== debug_immediate_expected_prev[19] )
		&& ((debug_immediate_expected_prev[19] !== last_debug_immediate_exp[19]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[19] = debug_immediate_expected_prev[19];
	end
	if (
		( debug_immediate_expected_prev[20] !== 1'bx ) && ( debug_immediate_prev[20] !== debug_immediate_expected_prev[20] )
		&& ((debug_immediate_expected_prev[20] !== last_debug_immediate_exp[20]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[20] = debug_immediate_expected_prev[20];
	end
	if (
		( debug_immediate_expected_prev[21] !== 1'bx ) && ( debug_immediate_prev[21] !== debug_immediate_expected_prev[21] )
		&& ((debug_immediate_expected_prev[21] !== last_debug_immediate_exp[21]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[21] = debug_immediate_expected_prev[21];
	end
	if (
		( debug_immediate_expected_prev[22] !== 1'bx ) && ( debug_immediate_prev[22] !== debug_immediate_expected_prev[22] )
		&& ((debug_immediate_expected_prev[22] !== last_debug_immediate_exp[22]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[22] = debug_immediate_expected_prev[22];
	end
	if (
		( debug_immediate_expected_prev[23] !== 1'bx ) && ( debug_immediate_prev[23] !== debug_immediate_expected_prev[23] )
		&& ((debug_immediate_expected_prev[23] !== last_debug_immediate_exp[23]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[23] = debug_immediate_expected_prev[23];
	end
	if (
		( debug_immediate_expected_prev[24] !== 1'bx ) && ( debug_immediate_prev[24] !== debug_immediate_expected_prev[24] )
		&& ((debug_immediate_expected_prev[24] !== last_debug_immediate_exp[24]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[24] = debug_immediate_expected_prev[24];
	end
	if (
		( debug_immediate_expected_prev[25] !== 1'bx ) && ( debug_immediate_prev[25] !== debug_immediate_expected_prev[25] )
		&& ((debug_immediate_expected_prev[25] !== last_debug_immediate_exp[25]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[25] = debug_immediate_expected_prev[25];
	end
	if (
		( debug_immediate_expected_prev[26] !== 1'bx ) && ( debug_immediate_prev[26] !== debug_immediate_expected_prev[26] )
		&& ((debug_immediate_expected_prev[26] !== last_debug_immediate_exp[26]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[26] = debug_immediate_expected_prev[26];
	end
	if (
		( debug_immediate_expected_prev[27] !== 1'bx ) && ( debug_immediate_prev[27] !== debug_immediate_expected_prev[27] )
		&& ((debug_immediate_expected_prev[27] !== last_debug_immediate_exp[27]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[27] = debug_immediate_expected_prev[27];
	end
	if (
		( debug_immediate_expected_prev[28] !== 1'bx ) && ( debug_immediate_prev[28] !== debug_immediate_expected_prev[28] )
		&& ((debug_immediate_expected_prev[28] !== last_debug_immediate_exp[28]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[28] = debug_immediate_expected_prev[28];
	end
	if (
		( debug_immediate_expected_prev[29] !== 1'bx ) && ( debug_immediate_prev[29] !== debug_immediate_expected_prev[29] )
		&& ((debug_immediate_expected_prev[29] !== last_debug_immediate_exp[29]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[29] = debug_immediate_expected_prev[29];
	end
	if (
		( debug_immediate_expected_prev[30] !== 1'bx ) && ( debug_immediate_prev[30] !== debug_immediate_expected_prev[30] )
		&& ((debug_immediate_expected_prev[30] !== last_debug_immediate_exp[30]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[30] = debug_immediate_expected_prev[30];
	end
	if (
		( debug_immediate_expected_prev[31] !== 1'bx ) && ( debug_immediate_prev[31] !== debug_immediate_expected_prev[31] )
		&& ((debug_immediate_expected_prev[31] !== last_debug_immediate_exp[31]) ||
			on_first_change[10])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_immediate[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_immediate_expected_prev);
		$display ("     Real value = %b", debug_immediate_prev);
		nummismatches = nummismatches + 1;
		on_first_change[10] = 1'b0;
		last_debug_immediate_exp[31] = debug_immediate_expected_prev[31];
	end
	if (
		( debug_instruction_expected_prev[0] !== 1'bx ) && ( debug_instruction_prev[0] !== debug_instruction_expected_prev[0] )
		&& ((debug_instruction_expected_prev[0] !== last_debug_instruction_exp[0]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[0] = debug_instruction_expected_prev[0];
	end
	if (
		( debug_instruction_expected_prev[1] !== 1'bx ) && ( debug_instruction_prev[1] !== debug_instruction_expected_prev[1] )
		&& ((debug_instruction_expected_prev[1] !== last_debug_instruction_exp[1]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[1] = debug_instruction_expected_prev[1];
	end
	if (
		( debug_instruction_expected_prev[2] !== 1'bx ) && ( debug_instruction_prev[2] !== debug_instruction_expected_prev[2] )
		&& ((debug_instruction_expected_prev[2] !== last_debug_instruction_exp[2]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[2] = debug_instruction_expected_prev[2];
	end
	if (
		( debug_instruction_expected_prev[3] !== 1'bx ) && ( debug_instruction_prev[3] !== debug_instruction_expected_prev[3] )
		&& ((debug_instruction_expected_prev[3] !== last_debug_instruction_exp[3]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[3] = debug_instruction_expected_prev[3];
	end
	if (
		( debug_instruction_expected_prev[4] !== 1'bx ) && ( debug_instruction_prev[4] !== debug_instruction_expected_prev[4] )
		&& ((debug_instruction_expected_prev[4] !== last_debug_instruction_exp[4]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[4] = debug_instruction_expected_prev[4];
	end
	if (
		( debug_instruction_expected_prev[5] !== 1'bx ) && ( debug_instruction_prev[5] !== debug_instruction_expected_prev[5] )
		&& ((debug_instruction_expected_prev[5] !== last_debug_instruction_exp[5]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[5] = debug_instruction_expected_prev[5];
	end
	if (
		( debug_instruction_expected_prev[6] !== 1'bx ) && ( debug_instruction_prev[6] !== debug_instruction_expected_prev[6] )
		&& ((debug_instruction_expected_prev[6] !== last_debug_instruction_exp[6]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[6] = debug_instruction_expected_prev[6];
	end
	if (
		( debug_instruction_expected_prev[7] !== 1'bx ) && ( debug_instruction_prev[7] !== debug_instruction_expected_prev[7] )
		&& ((debug_instruction_expected_prev[7] !== last_debug_instruction_exp[7]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[7] = debug_instruction_expected_prev[7];
	end
	if (
		( debug_instruction_expected_prev[8] !== 1'bx ) && ( debug_instruction_prev[8] !== debug_instruction_expected_prev[8] )
		&& ((debug_instruction_expected_prev[8] !== last_debug_instruction_exp[8]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[8] = debug_instruction_expected_prev[8];
	end
	if (
		( debug_instruction_expected_prev[9] !== 1'bx ) && ( debug_instruction_prev[9] !== debug_instruction_expected_prev[9] )
		&& ((debug_instruction_expected_prev[9] !== last_debug_instruction_exp[9]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[9] = debug_instruction_expected_prev[9];
	end
	if (
		( debug_instruction_expected_prev[10] !== 1'bx ) && ( debug_instruction_prev[10] !== debug_instruction_expected_prev[10] )
		&& ((debug_instruction_expected_prev[10] !== last_debug_instruction_exp[10]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[10] = debug_instruction_expected_prev[10];
	end
	if (
		( debug_instruction_expected_prev[11] !== 1'bx ) && ( debug_instruction_prev[11] !== debug_instruction_expected_prev[11] )
		&& ((debug_instruction_expected_prev[11] !== last_debug_instruction_exp[11]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[11] = debug_instruction_expected_prev[11];
	end
	if (
		( debug_instruction_expected_prev[12] !== 1'bx ) && ( debug_instruction_prev[12] !== debug_instruction_expected_prev[12] )
		&& ((debug_instruction_expected_prev[12] !== last_debug_instruction_exp[12]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[12] = debug_instruction_expected_prev[12];
	end
	if (
		( debug_instruction_expected_prev[13] !== 1'bx ) && ( debug_instruction_prev[13] !== debug_instruction_expected_prev[13] )
		&& ((debug_instruction_expected_prev[13] !== last_debug_instruction_exp[13]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[13] = debug_instruction_expected_prev[13];
	end
	if (
		( debug_instruction_expected_prev[14] !== 1'bx ) && ( debug_instruction_prev[14] !== debug_instruction_expected_prev[14] )
		&& ((debug_instruction_expected_prev[14] !== last_debug_instruction_exp[14]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[14] = debug_instruction_expected_prev[14];
	end
	if (
		( debug_instruction_expected_prev[15] !== 1'bx ) && ( debug_instruction_prev[15] !== debug_instruction_expected_prev[15] )
		&& ((debug_instruction_expected_prev[15] !== last_debug_instruction_exp[15]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[15] = debug_instruction_expected_prev[15];
	end
	if (
		( debug_instruction_expected_prev[16] !== 1'bx ) && ( debug_instruction_prev[16] !== debug_instruction_expected_prev[16] )
		&& ((debug_instruction_expected_prev[16] !== last_debug_instruction_exp[16]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[16] = debug_instruction_expected_prev[16];
	end
	if (
		( debug_instruction_expected_prev[17] !== 1'bx ) && ( debug_instruction_prev[17] !== debug_instruction_expected_prev[17] )
		&& ((debug_instruction_expected_prev[17] !== last_debug_instruction_exp[17]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[17] = debug_instruction_expected_prev[17];
	end
	if (
		( debug_instruction_expected_prev[18] !== 1'bx ) && ( debug_instruction_prev[18] !== debug_instruction_expected_prev[18] )
		&& ((debug_instruction_expected_prev[18] !== last_debug_instruction_exp[18]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[18] = debug_instruction_expected_prev[18];
	end
	if (
		( debug_instruction_expected_prev[19] !== 1'bx ) && ( debug_instruction_prev[19] !== debug_instruction_expected_prev[19] )
		&& ((debug_instruction_expected_prev[19] !== last_debug_instruction_exp[19]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[19] = debug_instruction_expected_prev[19];
	end
	if (
		( debug_instruction_expected_prev[20] !== 1'bx ) && ( debug_instruction_prev[20] !== debug_instruction_expected_prev[20] )
		&& ((debug_instruction_expected_prev[20] !== last_debug_instruction_exp[20]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[20] = debug_instruction_expected_prev[20];
	end
	if (
		( debug_instruction_expected_prev[21] !== 1'bx ) && ( debug_instruction_prev[21] !== debug_instruction_expected_prev[21] )
		&& ((debug_instruction_expected_prev[21] !== last_debug_instruction_exp[21]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[21] = debug_instruction_expected_prev[21];
	end
	if (
		( debug_instruction_expected_prev[22] !== 1'bx ) && ( debug_instruction_prev[22] !== debug_instruction_expected_prev[22] )
		&& ((debug_instruction_expected_prev[22] !== last_debug_instruction_exp[22]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[22] = debug_instruction_expected_prev[22];
	end
	if (
		( debug_instruction_expected_prev[23] !== 1'bx ) && ( debug_instruction_prev[23] !== debug_instruction_expected_prev[23] )
		&& ((debug_instruction_expected_prev[23] !== last_debug_instruction_exp[23]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[23] = debug_instruction_expected_prev[23];
	end
	if (
		( debug_instruction_expected_prev[24] !== 1'bx ) && ( debug_instruction_prev[24] !== debug_instruction_expected_prev[24] )
		&& ((debug_instruction_expected_prev[24] !== last_debug_instruction_exp[24]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[24] = debug_instruction_expected_prev[24];
	end
	if (
		( debug_instruction_expected_prev[25] !== 1'bx ) && ( debug_instruction_prev[25] !== debug_instruction_expected_prev[25] )
		&& ((debug_instruction_expected_prev[25] !== last_debug_instruction_exp[25]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[25] = debug_instruction_expected_prev[25];
	end
	if (
		( debug_instruction_expected_prev[26] !== 1'bx ) && ( debug_instruction_prev[26] !== debug_instruction_expected_prev[26] )
		&& ((debug_instruction_expected_prev[26] !== last_debug_instruction_exp[26]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[26] = debug_instruction_expected_prev[26];
	end
	if (
		( debug_instruction_expected_prev[27] !== 1'bx ) && ( debug_instruction_prev[27] !== debug_instruction_expected_prev[27] )
		&& ((debug_instruction_expected_prev[27] !== last_debug_instruction_exp[27]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[27] = debug_instruction_expected_prev[27];
	end
	if (
		( debug_instruction_expected_prev[28] !== 1'bx ) && ( debug_instruction_prev[28] !== debug_instruction_expected_prev[28] )
		&& ((debug_instruction_expected_prev[28] !== last_debug_instruction_exp[28]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[28] = debug_instruction_expected_prev[28];
	end
	if (
		( debug_instruction_expected_prev[29] !== 1'bx ) && ( debug_instruction_prev[29] !== debug_instruction_expected_prev[29] )
		&& ((debug_instruction_expected_prev[29] !== last_debug_instruction_exp[29]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[29] = debug_instruction_expected_prev[29];
	end
	if (
		( debug_instruction_expected_prev[30] !== 1'bx ) && ( debug_instruction_prev[30] !== debug_instruction_expected_prev[30] )
		&& ((debug_instruction_expected_prev[30] !== last_debug_instruction_exp[30]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[30] = debug_instruction_expected_prev[30];
	end
	if (
		( debug_instruction_expected_prev[31] !== 1'bx ) && ( debug_instruction_prev[31] !== debug_instruction_expected_prev[31] )
		&& ((debug_instruction_expected_prev[31] !== last_debug_instruction_exp[31]) ||
			on_first_change[11])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_instruction[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_instruction_expected_prev);
		$display ("     Real value = %b", debug_instruction_prev);
		nummismatches = nummismatches + 1;
		on_first_change[11] = 1'b0;
		last_debug_instruction_exp[31] = debug_instruction_expected_prev[31];
	end
	if (
		( debug_mux0_sel_expected_prev[0] !== 1'bx ) && ( debug_mux0_sel_prev[0] !== debug_mux0_sel_expected_prev[0] )
		&& ((debug_mux0_sel_expected_prev[0] !== last_debug_mux0_sel_exp[0]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_mux0_sel[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_mux0_sel_expected_prev);
		$display ("     Real value = %b", debug_mux0_sel_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_debug_mux0_sel_exp[0] = debug_mux0_sel_expected_prev[0];
	end
	if (
		( debug_mux0_sel_expected_prev[1] !== 1'bx ) && ( debug_mux0_sel_prev[1] !== debug_mux0_sel_expected_prev[1] )
		&& ((debug_mux0_sel_expected_prev[1] !== last_debug_mux0_sel_exp[1]) ||
			on_first_change[12])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_mux0_sel[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_mux0_sel_expected_prev);
		$display ("     Real value = %b", debug_mux0_sel_prev);
		nummismatches = nummismatches + 1;
		on_first_change[12] = 1'b0;
		last_debug_mux0_sel_exp[1] = debug_mux0_sel_expected_prev[1];
	end
	if (
		( debug_mux0_sel_from_MEM_expected_prev[0] !== 1'bx ) && ( debug_mux0_sel_from_MEM_prev[0] !== debug_mux0_sel_from_MEM_expected_prev[0] )
		&& ((debug_mux0_sel_from_MEM_expected_prev[0] !== last_debug_mux0_sel_from_MEM_exp[0]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_mux0_sel_from_MEM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_mux0_sel_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_mux0_sel_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_debug_mux0_sel_from_MEM_exp[0] = debug_mux0_sel_from_MEM_expected_prev[0];
	end
	if (
		( debug_mux0_sel_from_MEM_expected_prev[1] !== 1'bx ) && ( debug_mux0_sel_from_MEM_prev[1] !== debug_mux0_sel_from_MEM_expected_prev[1] )
		&& ((debug_mux0_sel_from_MEM_expected_prev[1] !== last_debug_mux0_sel_from_MEM_exp[1]) ||
			on_first_change[13])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_mux0_sel_from_MEM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_mux0_sel_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_mux0_sel_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[13] = 1'b0;
		last_debug_mux0_sel_from_MEM_exp[1] = debug_mux0_sel_from_MEM_expected_prev[1];
	end
	if (
		( debug_PC_operation_expected_prev[0] !== 1'bx ) && ( debug_PC_operation_prev[0] !== debug_PC_operation_expected_prev[0] )
		&& ((debug_PC_operation_expected_prev[0] !== last_debug_PC_operation_exp[0]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_PC_operation[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_PC_operation_expected_prev);
		$display ("     Real value = %b", debug_PC_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_debug_PC_operation_exp[0] = debug_PC_operation_expected_prev[0];
	end
	if (
		( debug_PC_operation_expected_prev[1] !== 1'bx ) && ( debug_PC_operation_prev[1] !== debug_PC_operation_expected_prev[1] )
		&& ((debug_PC_operation_expected_prev[1] !== last_debug_PC_operation_exp[1]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_PC_operation[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_PC_operation_expected_prev);
		$display ("     Real value = %b", debug_PC_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_debug_PC_operation_exp[1] = debug_PC_operation_expected_prev[1];
	end
	if (
		( debug_PC_operation_expected_prev[2] !== 1'bx ) && ( debug_PC_operation_prev[2] !== debug_PC_operation_expected_prev[2] )
		&& ((debug_PC_operation_expected_prev[2] !== last_debug_PC_operation_exp[2]) ||
			on_first_change[14])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_PC_operation[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_PC_operation_expected_prev);
		$display ("     Real value = %b", debug_PC_operation_prev);
		nummismatches = nummismatches + 1;
		on_first_change[14] = 1'b0;
		last_debug_PC_operation_exp[2] = debug_PC_operation_expected_prev[2];
	end
	if (
		( debug_pc_output_expected_prev[0] !== 1'bx ) && ( debug_pc_output_prev[0] !== debug_pc_output_expected_prev[0] )
		&& ((debug_pc_output_expected_prev[0] !== last_debug_pc_output_exp[0]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[0] = debug_pc_output_expected_prev[0];
	end
	if (
		( debug_pc_output_expected_prev[1] !== 1'bx ) && ( debug_pc_output_prev[1] !== debug_pc_output_expected_prev[1] )
		&& ((debug_pc_output_expected_prev[1] !== last_debug_pc_output_exp[1]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[1] = debug_pc_output_expected_prev[1];
	end
	if (
		( debug_pc_output_expected_prev[2] !== 1'bx ) && ( debug_pc_output_prev[2] !== debug_pc_output_expected_prev[2] )
		&& ((debug_pc_output_expected_prev[2] !== last_debug_pc_output_exp[2]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[2] = debug_pc_output_expected_prev[2];
	end
	if (
		( debug_pc_output_expected_prev[3] !== 1'bx ) && ( debug_pc_output_prev[3] !== debug_pc_output_expected_prev[3] )
		&& ((debug_pc_output_expected_prev[3] !== last_debug_pc_output_exp[3]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[3] = debug_pc_output_expected_prev[3];
	end
	if (
		( debug_pc_output_expected_prev[4] !== 1'bx ) && ( debug_pc_output_prev[4] !== debug_pc_output_expected_prev[4] )
		&& ((debug_pc_output_expected_prev[4] !== last_debug_pc_output_exp[4]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[4] = debug_pc_output_expected_prev[4];
	end
	if (
		( debug_pc_output_expected_prev[5] !== 1'bx ) && ( debug_pc_output_prev[5] !== debug_pc_output_expected_prev[5] )
		&& ((debug_pc_output_expected_prev[5] !== last_debug_pc_output_exp[5]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[5] = debug_pc_output_expected_prev[5];
	end
	if (
		( debug_pc_output_expected_prev[6] !== 1'bx ) && ( debug_pc_output_prev[6] !== debug_pc_output_expected_prev[6] )
		&& ((debug_pc_output_expected_prev[6] !== last_debug_pc_output_exp[6]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[6] = debug_pc_output_expected_prev[6];
	end
	if (
		( debug_pc_output_expected_prev[7] !== 1'bx ) && ( debug_pc_output_prev[7] !== debug_pc_output_expected_prev[7] )
		&& ((debug_pc_output_expected_prev[7] !== last_debug_pc_output_exp[7]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[7] = debug_pc_output_expected_prev[7];
	end
	if (
		( debug_pc_output_expected_prev[8] !== 1'bx ) && ( debug_pc_output_prev[8] !== debug_pc_output_expected_prev[8] )
		&& ((debug_pc_output_expected_prev[8] !== last_debug_pc_output_exp[8]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[8] = debug_pc_output_expected_prev[8];
	end
	if (
		( debug_pc_output_expected_prev[9] !== 1'bx ) && ( debug_pc_output_prev[9] !== debug_pc_output_expected_prev[9] )
		&& ((debug_pc_output_expected_prev[9] !== last_debug_pc_output_exp[9]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[9] = debug_pc_output_expected_prev[9];
	end
	if (
		( debug_pc_output_expected_prev[10] !== 1'bx ) && ( debug_pc_output_prev[10] !== debug_pc_output_expected_prev[10] )
		&& ((debug_pc_output_expected_prev[10] !== last_debug_pc_output_exp[10]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[10] = debug_pc_output_expected_prev[10];
	end
	if (
		( debug_pc_output_expected_prev[11] !== 1'bx ) && ( debug_pc_output_prev[11] !== debug_pc_output_expected_prev[11] )
		&& ((debug_pc_output_expected_prev[11] !== last_debug_pc_output_exp[11]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[11] = debug_pc_output_expected_prev[11];
	end
	if (
		( debug_pc_output_expected_prev[12] !== 1'bx ) && ( debug_pc_output_prev[12] !== debug_pc_output_expected_prev[12] )
		&& ((debug_pc_output_expected_prev[12] !== last_debug_pc_output_exp[12]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[12] = debug_pc_output_expected_prev[12];
	end
	if (
		( debug_pc_output_expected_prev[13] !== 1'bx ) && ( debug_pc_output_prev[13] !== debug_pc_output_expected_prev[13] )
		&& ((debug_pc_output_expected_prev[13] !== last_debug_pc_output_exp[13]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[13] = debug_pc_output_expected_prev[13];
	end
	if (
		( debug_pc_output_expected_prev[14] !== 1'bx ) && ( debug_pc_output_prev[14] !== debug_pc_output_expected_prev[14] )
		&& ((debug_pc_output_expected_prev[14] !== last_debug_pc_output_exp[14]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[14] = debug_pc_output_expected_prev[14];
	end
	if (
		( debug_pc_output_expected_prev[15] !== 1'bx ) && ( debug_pc_output_prev[15] !== debug_pc_output_expected_prev[15] )
		&& ((debug_pc_output_expected_prev[15] !== last_debug_pc_output_exp[15]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[15] = debug_pc_output_expected_prev[15];
	end
	if (
		( debug_pc_output_expected_prev[16] !== 1'bx ) && ( debug_pc_output_prev[16] !== debug_pc_output_expected_prev[16] )
		&& ((debug_pc_output_expected_prev[16] !== last_debug_pc_output_exp[16]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[16] = debug_pc_output_expected_prev[16];
	end
	if (
		( debug_pc_output_expected_prev[17] !== 1'bx ) && ( debug_pc_output_prev[17] !== debug_pc_output_expected_prev[17] )
		&& ((debug_pc_output_expected_prev[17] !== last_debug_pc_output_exp[17]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[17] = debug_pc_output_expected_prev[17];
	end
	if (
		( debug_pc_output_expected_prev[18] !== 1'bx ) && ( debug_pc_output_prev[18] !== debug_pc_output_expected_prev[18] )
		&& ((debug_pc_output_expected_prev[18] !== last_debug_pc_output_exp[18]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[18] = debug_pc_output_expected_prev[18];
	end
	if (
		( debug_pc_output_expected_prev[19] !== 1'bx ) && ( debug_pc_output_prev[19] !== debug_pc_output_expected_prev[19] )
		&& ((debug_pc_output_expected_prev[19] !== last_debug_pc_output_exp[19]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[19] = debug_pc_output_expected_prev[19];
	end
	if (
		( debug_pc_output_expected_prev[20] !== 1'bx ) && ( debug_pc_output_prev[20] !== debug_pc_output_expected_prev[20] )
		&& ((debug_pc_output_expected_prev[20] !== last_debug_pc_output_exp[20]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[20] = debug_pc_output_expected_prev[20];
	end
	if (
		( debug_pc_output_expected_prev[21] !== 1'bx ) && ( debug_pc_output_prev[21] !== debug_pc_output_expected_prev[21] )
		&& ((debug_pc_output_expected_prev[21] !== last_debug_pc_output_exp[21]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[21] = debug_pc_output_expected_prev[21];
	end
	if (
		( debug_pc_output_expected_prev[22] !== 1'bx ) && ( debug_pc_output_prev[22] !== debug_pc_output_expected_prev[22] )
		&& ((debug_pc_output_expected_prev[22] !== last_debug_pc_output_exp[22]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[22] = debug_pc_output_expected_prev[22];
	end
	if (
		( debug_pc_output_expected_prev[23] !== 1'bx ) && ( debug_pc_output_prev[23] !== debug_pc_output_expected_prev[23] )
		&& ((debug_pc_output_expected_prev[23] !== last_debug_pc_output_exp[23]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[23] = debug_pc_output_expected_prev[23];
	end
	if (
		( debug_pc_output_expected_prev[24] !== 1'bx ) && ( debug_pc_output_prev[24] !== debug_pc_output_expected_prev[24] )
		&& ((debug_pc_output_expected_prev[24] !== last_debug_pc_output_exp[24]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[24] = debug_pc_output_expected_prev[24];
	end
	if (
		( debug_pc_output_expected_prev[25] !== 1'bx ) && ( debug_pc_output_prev[25] !== debug_pc_output_expected_prev[25] )
		&& ((debug_pc_output_expected_prev[25] !== last_debug_pc_output_exp[25]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[25] = debug_pc_output_expected_prev[25];
	end
	if (
		( debug_pc_output_expected_prev[26] !== 1'bx ) && ( debug_pc_output_prev[26] !== debug_pc_output_expected_prev[26] )
		&& ((debug_pc_output_expected_prev[26] !== last_debug_pc_output_exp[26]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[26] = debug_pc_output_expected_prev[26];
	end
	if (
		( debug_pc_output_expected_prev[27] !== 1'bx ) && ( debug_pc_output_prev[27] !== debug_pc_output_expected_prev[27] )
		&& ((debug_pc_output_expected_prev[27] !== last_debug_pc_output_exp[27]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[27] = debug_pc_output_expected_prev[27];
	end
	if (
		( debug_pc_output_expected_prev[28] !== 1'bx ) && ( debug_pc_output_prev[28] !== debug_pc_output_expected_prev[28] )
		&& ((debug_pc_output_expected_prev[28] !== last_debug_pc_output_exp[28]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[28] = debug_pc_output_expected_prev[28];
	end
	if (
		( debug_pc_output_expected_prev[29] !== 1'bx ) && ( debug_pc_output_prev[29] !== debug_pc_output_expected_prev[29] )
		&& ((debug_pc_output_expected_prev[29] !== last_debug_pc_output_exp[29]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[29] = debug_pc_output_expected_prev[29];
	end
	if (
		( debug_pc_output_expected_prev[30] !== 1'bx ) && ( debug_pc_output_prev[30] !== debug_pc_output_expected_prev[30] )
		&& ((debug_pc_output_expected_prev[30] !== last_debug_pc_output_exp[30]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[30] = debug_pc_output_expected_prev[30];
	end
	if (
		( debug_pc_output_expected_prev[31] !== 1'bx ) && ( debug_pc_output_prev[31] !== debug_pc_output_expected_prev[31] )
		&& ((debug_pc_output_expected_prev[31] !== last_debug_pc_output_exp[31]) ||
			on_first_change[15])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_pc_output[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_pc_output_expected_prev);
		$display ("     Real value = %b", debug_pc_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[15] = 1'b0;
		last_debug_pc_output_exp[31] = debug_pc_output_expected_prev[31];
	end
	if (
		( debug_reg_file_read_address_0_expected_prev[0] !== 1'bx ) && ( debug_reg_file_read_address_0_prev[0] !== debug_reg_file_read_address_0_expected_prev[0] )
		&& ((debug_reg_file_read_address_0_expected_prev[0] !== last_debug_reg_file_read_address_0_exp[0]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_debug_reg_file_read_address_0_exp[0] = debug_reg_file_read_address_0_expected_prev[0];
	end
	if (
		( debug_reg_file_read_address_0_expected_prev[1] !== 1'bx ) && ( debug_reg_file_read_address_0_prev[1] !== debug_reg_file_read_address_0_expected_prev[1] )
		&& ((debug_reg_file_read_address_0_expected_prev[1] !== last_debug_reg_file_read_address_0_exp[1]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_debug_reg_file_read_address_0_exp[1] = debug_reg_file_read_address_0_expected_prev[1];
	end
	if (
		( debug_reg_file_read_address_0_expected_prev[2] !== 1'bx ) && ( debug_reg_file_read_address_0_prev[2] !== debug_reg_file_read_address_0_expected_prev[2] )
		&& ((debug_reg_file_read_address_0_expected_prev[2] !== last_debug_reg_file_read_address_0_exp[2]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_debug_reg_file_read_address_0_exp[2] = debug_reg_file_read_address_0_expected_prev[2];
	end
	if (
		( debug_reg_file_read_address_0_expected_prev[3] !== 1'bx ) && ( debug_reg_file_read_address_0_prev[3] !== debug_reg_file_read_address_0_expected_prev[3] )
		&& ((debug_reg_file_read_address_0_expected_prev[3] !== last_debug_reg_file_read_address_0_exp[3]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_debug_reg_file_read_address_0_exp[3] = debug_reg_file_read_address_0_expected_prev[3];
	end
	if (
		( debug_reg_file_read_address_0_expected_prev[4] !== 1'bx ) && ( debug_reg_file_read_address_0_prev[4] !== debug_reg_file_read_address_0_expected_prev[4] )
		&& ((debug_reg_file_read_address_0_expected_prev[4] !== last_debug_reg_file_read_address_0_exp[4]) ||
			on_first_change[16])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[16] = 1'b0;
		last_debug_reg_file_read_address_0_exp[4] = debug_reg_file_read_address_0_expected_prev[4];
	end
	if (
		( debug_reg_file_read_address_0_ID_EXE_expected_prev[0] !== 1'bx ) && ( debug_reg_file_read_address_0_ID_EXE_prev[0] !== debug_reg_file_read_address_0_ID_EXE_expected_prev[0] )
		&& ((debug_reg_file_read_address_0_ID_EXE_expected_prev[0] !== last_debug_reg_file_read_address_0_ID_EXE_exp[0]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0_ID_EXE[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_ID_EXE_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_ID_EXE_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_debug_reg_file_read_address_0_ID_EXE_exp[0] = debug_reg_file_read_address_0_ID_EXE_expected_prev[0];
	end
	if (
		( debug_reg_file_read_address_0_ID_EXE_expected_prev[1] !== 1'bx ) && ( debug_reg_file_read_address_0_ID_EXE_prev[1] !== debug_reg_file_read_address_0_ID_EXE_expected_prev[1] )
		&& ((debug_reg_file_read_address_0_ID_EXE_expected_prev[1] !== last_debug_reg_file_read_address_0_ID_EXE_exp[1]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0_ID_EXE[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_ID_EXE_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_ID_EXE_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_debug_reg_file_read_address_0_ID_EXE_exp[1] = debug_reg_file_read_address_0_ID_EXE_expected_prev[1];
	end
	if (
		( debug_reg_file_read_address_0_ID_EXE_expected_prev[2] !== 1'bx ) && ( debug_reg_file_read_address_0_ID_EXE_prev[2] !== debug_reg_file_read_address_0_ID_EXE_expected_prev[2] )
		&& ((debug_reg_file_read_address_0_ID_EXE_expected_prev[2] !== last_debug_reg_file_read_address_0_ID_EXE_exp[2]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0_ID_EXE[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_ID_EXE_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_ID_EXE_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_debug_reg_file_read_address_0_ID_EXE_exp[2] = debug_reg_file_read_address_0_ID_EXE_expected_prev[2];
	end
	if (
		( debug_reg_file_read_address_0_ID_EXE_expected_prev[3] !== 1'bx ) && ( debug_reg_file_read_address_0_ID_EXE_prev[3] !== debug_reg_file_read_address_0_ID_EXE_expected_prev[3] )
		&& ((debug_reg_file_read_address_0_ID_EXE_expected_prev[3] !== last_debug_reg_file_read_address_0_ID_EXE_exp[3]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0_ID_EXE[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_ID_EXE_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_ID_EXE_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_debug_reg_file_read_address_0_ID_EXE_exp[3] = debug_reg_file_read_address_0_ID_EXE_expected_prev[3];
	end
	if (
		( debug_reg_file_read_address_0_ID_EXE_expected_prev[4] !== 1'bx ) && ( debug_reg_file_read_address_0_ID_EXE_prev[4] !== debug_reg_file_read_address_0_ID_EXE_expected_prev[4] )
		&& ((debug_reg_file_read_address_0_ID_EXE_expected_prev[4] !== last_debug_reg_file_read_address_0_ID_EXE_exp[4]) ||
			on_first_change[17])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_0_ID_EXE[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_0_ID_EXE_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_0_ID_EXE_prev);
		nummismatches = nummismatches + 1;
		on_first_change[17] = 1'b0;
		last_debug_reg_file_read_address_0_ID_EXE_exp[4] = debug_reg_file_read_address_0_ID_EXE_expected_prev[4];
	end
	if (
		( debug_reg_file_read_address_1_expected_prev[0] !== 1'bx ) && ( debug_reg_file_read_address_1_prev[0] !== debug_reg_file_read_address_1_expected_prev[0] )
		&& ((debug_reg_file_read_address_1_expected_prev[0] !== last_debug_reg_file_read_address_1_exp[0]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_1_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_debug_reg_file_read_address_1_exp[0] = debug_reg_file_read_address_1_expected_prev[0];
	end
	if (
		( debug_reg_file_read_address_1_expected_prev[1] !== 1'bx ) && ( debug_reg_file_read_address_1_prev[1] !== debug_reg_file_read_address_1_expected_prev[1] )
		&& ((debug_reg_file_read_address_1_expected_prev[1] !== last_debug_reg_file_read_address_1_exp[1]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_1_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_debug_reg_file_read_address_1_exp[1] = debug_reg_file_read_address_1_expected_prev[1];
	end
	if (
		( debug_reg_file_read_address_1_expected_prev[2] !== 1'bx ) && ( debug_reg_file_read_address_1_prev[2] !== debug_reg_file_read_address_1_expected_prev[2] )
		&& ((debug_reg_file_read_address_1_expected_prev[2] !== last_debug_reg_file_read_address_1_exp[2]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_1[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_1_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_debug_reg_file_read_address_1_exp[2] = debug_reg_file_read_address_1_expected_prev[2];
	end
	if (
		( debug_reg_file_read_address_1_expected_prev[3] !== 1'bx ) && ( debug_reg_file_read_address_1_prev[3] !== debug_reg_file_read_address_1_expected_prev[3] )
		&& ((debug_reg_file_read_address_1_expected_prev[3] !== last_debug_reg_file_read_address_1_exp[3]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_1[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_1_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_debug_reg_file_read_address_1_exp[3] = debug_reg_file_read_address_1_expected_prev[3];
	end
	if (
		( debug_reg_file_read_address_1_expected_prev[4] !== 1'bx ) && ( debug_reg_file_read_address_1_prev[4] !== debug_reg_file_read_address_1_expected_prev[4] )
		&& ((debug_reg_file_read_address_1_expected_prev[4] !== last_debug_reg_file_read_address_1_exp[4]) ||
			on_first_change[18])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_read_address_1[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_read_address_1_expected_prev);
		$display ("     Real value = %b", debug_reg_file_read_address_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[18] = 1'b0;
		last_debug_reg_file_read_address_1_exp[4] = debug_reg_file_read_address_1_expected_prev[4];
	end
	if (
		( debug_reg_file_write_address_EX_MEM_expected_prev[0] !== 1'bx ) && ( debug_reg_file_write_address_EX_MEM_prev[0] !== debug_reg_file_write_address_EX_MEM_expected_prev[0] )
		&& ((debug_reg_file_write_address_EX_MEM_expected_prev[0] !== last_debug_reg_file_write_address_EX_MEM_exp[0]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_EX_MEM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_EX_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_EX_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_debug_reg_file_write_address_EX_MEM_exp[0] = debug_reg_file_write_address_EX_MEM_expected_prev[0];
	end
	if (
		( debug_reg_file_write_address_EX_MEM_expected_prev[1] !== 1'bx ) && ( debug_reg_file_write_address_EX_MEM_prev[1] !== debug_reg_file_write_address_EX_MEM_expected_prev[1] )
		&& ((debug_reg_file_write_address_EX_MEM_expected_prev[1] !== last_debug_reg_file_write_address_EX_MEM_exp[1]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_EX_MEM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_EX_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_EX_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_debug_reg_file_write_address_EX_MEM_exp[1] = debug_reg_file_write_address_EX_MEM_expected_prev[1];
	end
	if (
		( debug_reg_file_write_address_EX_MEM_expected_prev[2] !== 1'bx ) && ( debug_reg_file_write_address_EX_MEM_prev[2] !== debug_reg_file_write_address_EX_MEM_expected_prev[2] )
		&& ((debug_reg_file_write_address_EX_MEM_expected_prev[2] !== last_debug_reg_file_write_address_EX_MEM_exp[2]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_EX_MEM[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_EX_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_EX_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_debug_reg_file_write_address_EX_MEM_exp[2] = debug_reg_file_write_address_EX_MEM_expected_prev[2];
	end
	if (
		( debug_reg_file_write_address_EX_MEM_expected_prev[3] !== 1'bx ) && ( debug_reg_file_write_address_EX_MEM_prev[3] !== debug_reg_file_write_address_EX_MEM_expected_prev[3] )
		&& ((debug_reg_file_write_address_EX_MEM_expected_prev[3] !== last_debug_reg_file_write_address_EX_MEM_exp[3]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_EX_MEM[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_EX_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_EX_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_debug_reg_file_write_address_EX_MEM_exp[3] = debug_reg_file_write_address_EX_MEM_expected_prev[3];
	end
	if (
		( debug_reg_file_write_address_EX_MEM_expected_prev[4] !== 1'bx ) && ( debug_reg_file_write_address_EX_MEM_prev[4] !== debug_reg_file_write_address_EX_MEM_expected_prev[4] )
		&& ((debug_reg_file_write_address_EX_MEM_expected_prev[4] !== last_debug_reg_file_write_address_EX_MEM_exp[4]) ||
			on_first_change[19])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_EX_MEM[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_EX_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_EX_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[19] = 1'b0;
		last_debug_reg_file_write_address_EX_MEM_exp[4] = debug_reg_file_write_address_EX_MEM_expected_prev[4];
	end
	if (
		( debug_reg_file_write_address_from_MEM_expected_prev[0] !== 1'bx ) && ( debug_reg_file_write_address_from_MEM_prev[0] !== debug_reg_file_write_address_from_MEM_expected_prev[0] )
		&& ((debug_reg_file_write_address_from_MEM_expected_prev[0] !== last_debug_reg_file_write_address_from_MEM_exp[0]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_from_MEM[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_debug_reg_file_write_address_from_MEM_exp[0] = debug_reg_file_write_address_from_MEM_expected_prev[0];
	end
	if (
		( debug_reg_file_write_address_from_MEM_expected_prev[1] !== 1'bx ) && ( debug_reg_file_write_address_from_MEM_prev[1] !== debug_reg_file_write_address_from_MEM_expected_prev[1] )
		&& ((debug_reg_file_write_address_from_MEM_expected_prev[1] !== last_debug_reg_file_write_address_from_MEM_exp[1]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_from_MEM[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_debug_reg_file_write_address_from_MEM_exp[1] = debug_reg_file_write_address_from_MEM_expected_prev[1];
	end
	if (
		( debug_reg_file_write_address_from_MEM_expected_prev[2] !== 1'bx ) && ( debug_reg_file_write_address_from_MEM_prev[2] !== debug_reg_file_write_address_from_MEM_expected_prev[2] )
		&& ((debug_reg_file_write_address_from_MEM_expected_prev[2] !== last_debug_reg_file_write_address_from_MEM_exp[2]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_from_MEM[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_debug_reg_file_write_address_from_MEM_exp[2] = debug_reg_file_write_address_from_MEM_expected_prev[2];
	end
	if (
		( debug_reg_file_write_address_from_MEM_expected_prev[3] !== 1'bx ) && ( debug_reg_file_write_address_from_MEM_prev[3] !== debug_reg_file_write_address_from_MEM_expected_prev[3] )
		&& ((debug_reg_file_write_address_from_MEM_expected_prev[3] !== last_debug_reg_file_write_address_from_MEM_exp[3]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_from_MEM[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_debug_reg_file_write_address_from_MEM_exp[3] = debug_reg_file_write_address_from_MEM_expected_prev[3];
	end
	if (
		( debug_reg_file_write_address_from_MEM_expected_prev[4] !== 1'bx ) && ( debug_reg_file_write_address_from_MEM_prev[4] !== debug_reg_file_write_address_from_MEM_expected_prev[4] )
		&& ((debug_reg_file_write_address_from_MEM_expected_prev[4] !== last_debug_reg_file_write_address_from_MEM_exp[4]) ||
			on_first_change[20])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_address_from_MEM[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_address_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_address_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[20] = 1'b0;
		last_debug_reg_file_write_address_from_MEM_exp[4] = debug_reg_file_write_address_from_MEM_expected_prev[4];
	end
	if (
		( debug_reg_file_write_from_MEM_expected_prev !== 1'bx ) && ( debug_reg_file_write_from_MEM_prev !== debug_reg_file_write_from_MEM_expected_prev )
		&& ((debug_reg_file_write_from_MEM_expected_prev !== last_debug_reg_file_write_from_MEM_exp) ||
			on_first_change[21])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_reg_file_write_from_MEM :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_reg_file_write_from_MEM_expected_prev);
		$display ("     Real value = %b", debug_reg_file_write_from_MEM_prev);
		nummismatches = nummismatches + 1;
		on_first_change[21] = 1'b0;
		last_debug_reg_file_write_from_MEM_exp = debug_reg_file_write_from_MEM_expected_prev;
	end
	if (
		( debug_regfile_write_expected_prev !== 1'bx ) && ( debug_regfile_write_prev !== debug_regfile_write_expected_prev )
		&& ((debug_regfile_write_expected_prev !== last_debug_regfile_write_exp) ||
			on_first_change[22])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_write :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_write_expected_prev);
		$display ("     Real value = %b", debug_regfile_write_prev);
		nummismatches = nummismatches + 1;
		on_first_change[22] = 1'b0;
		last_debug_regfile_write_exp = debug_regfile_write_expected_prev;
	end
	if (
		( debug_regfile_x1_output_expected_prev[0] !== 1'bx ) && ( debug_regfile_x1_output_prev[0] !== debug_regfile_x1_output_expected_prev[0] )
		&& ((debug_regfile_x1_output_expected_prev[0] !== last_debug_regfile_x1_output_exp[0]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[0] = debug_regfile_x1_output_expected_prev[0];
	end
	if (
		( debug_regfile_x1_output_expected_prev[1] !== 1'bx ) && ( debug_regfile_x1_output_prev[1] !== debug_regfile_x1_output_expected_prev[1] )
		&& ((debug_regfile_x1_output_expected_prev[1] !== last_debug_regfile_x1_output_exp[1]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[1] = debug_regfile_x1_output_expected_prev[1];
	end
	if (
		( debug_regfile_x1_output_expected_prev[2] !== 1'bx ) && ( debug_regfile_x1_output_prev[2] !== debug_regfile_x1_output_expected_prev[2] )
		&& ((debug_regfile_x1_output_expected_prev[2] !== last_debug_regfile_x1_output_exp[2]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[2] = debug_regfile_x1_output_expected_prev[2];
	end
	if (
		( debug_regfile_x1_output_expected_prev[3] !== 1'bx ) && ( debug_regfile_x1_output_prev[3] !== debug_regfile_x1_output_expected_prev[3] )
		&& ((debug_regfile_x1_output_expected_prev[3] !== last_debug_regfile_x1_output_exp[3]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[3] = debug_regfile_x1_output_expected_prev[3];
	end
	if (
		( debug_regfile_x1_output_expected_prev[4] !== 1'bx ) && ( debug_regfile_x1_output_prev[4] !== debug_regfile_x1_output_expected_prev[4] )
		&& ((debug_regfile_x1_output_expected_prev[4] !== last_debug_regfile_x1_output_exp[4]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[4] = debug_regfile_x1_output_expected_prev[4];
	end
	if (
		( debug_regfile_x1_output_expected_prev[5] !== 1'bx ) && ( debug_regfile_x1_output_prev[5] !== debug_regfile_x1_output_expected_prev[5] )
		&& ((debug_regfile_x1_output_expected_prev[5] !== last_debug_regfile_x1_output_exp[5]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[5] = debug_regfile_x1_output_expected_prev[5];
	end
	if (
		( debug_regfile_x1_output_expected_prev[6] !== 1'bx ) && ( debug_regfile_x1_output_prev[6] !== debug_regfile_x1_output_expected_prev[6] )
		&& ((debug_regfile_x1_output_expected_prev[6] !== last_debug_regfile_x1_output_exp[6]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[6] = debug_regfile_x1_output_expected_prev[6];
	end
	if (
		( debug_regfile_x1_output_expected_prev[7] !== 1'bx ) && ( debug_regfile_x1_output_prev[7] !== debug_regfile_x1_output_expected_prev[7] )
		&& ((debug_regfile_x1_output_expected_prev[7] !== last_debug_regfile_x1_output_exp[7]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[7] = debug_regfile_x1_output_expected_prev[7];
	end
	if (
		( debug_regfile_x1_output_expected_prev[8] !== 1'bx ) && ( debug_regfile_x1_output_prev[8] !== debug_regfile_x1_output_expected_prev[8] )
		&& ((debug_regfile_x1_output_expected_prev[8] !== last_debug_regfile_x1_output_exp[8]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[8] = debug_regfile_x1_output_expected_prev[8];
	end
	if (
		( debug_regfile_x1_output_expected_prev[9] !== 1'bx ) && ( debug_regfile_x1_output_prev[9] !== debug_regfile_x1_output_expected_prev[9] )
		&& ((debug_regfile_x1_output_expected_prev[9] !== last_debug_regfile_x1_output_exp[9]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[9] = debug_regfile_x1_output_expected_prev[9];
	end
	if (
		( debug_regfile_x1_output_expected_prev[10] !== 1'bx ) && ( debug_regfile_x1_output_prev[10] !== debug_regfile_x1_output_expected_prev[10] )
		&& ((debug_regfile_x1_output_expected_prev[10] !== last_debug_regfile_x1_output_exp[10]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[10] = debug_regfile_x1_output_expected_prev[10];
	end
	if (
		( debug_regfile_x1_output_expected_prev[11] !== 1'bx ) && ( debug_regfile_x1_output_prev[11] !== debug_regfile_x1_output_expected_prev[11] )
		&& ((debug_regfile_x1_output_expected_prev[11] !== last_debug_regfile_x1_output_exp[11]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[11] = debug_regfile_x1_output_expected_prev[11];
	end
	if (
		( debug_regfile_x1_output_expected_prev[12] !== 1'bx ) && ( debug_regfile_x1_output_prev[12] !== debug_regfile_x1_output_expected_prev[12] )
		&& ((debug_regfile_x1_output_expected_prev[12] !== last_debug_regfile_x1_output_exp[12]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[12] = debug_regfile_x1_output_expected_prev[12];
	end
	if (
		( debug_regfile_x1_output_expected_prev[13] !== 1'bx ) && ( debug_regfile_x1_output_prev[13] !== debug_regfile_x1_output_expected_prev[13] )
		&& ((debug_regfile_x1_output_expected_prev[13] !== last_debug_regfile_x1_output_exp[13]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[13] = debug_regfile_x1_output_expected_prev[13];
	end
	if (
		( debug_regfile_x1_output_expected_prev[14] !== 1'bx ) && ( debug_regfile_x1_output_prev[14] !== debug_regfile_x1_output_expected_prev[14] )
		&& ((debug_regfile_x1_output_expected_prev[14] !== last_debug_regfile_x1_output_exp[14]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[14] = debug_regfile_x1_output_expected_prev[14];
	end
	if (
		( debug_regfile_x1_output_expected_prev[15] !== 1'bx ) && ( debug_regfile_x1_output_prev[15] !== debug_regfile_x1_output_expected_prev[15] )
		&& ((debug_regfile_x1_output_expected_prev[15] !== last_debug_regfile_x1_output_exp[15]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[15] = debug_regfile_x1_output_expected_prev[15];
	end
	if (
		( debug_regfile_x1_output_expected_prev[16] !== 1'bx ) && ( debug_regfile_x1_output_prev[16] !== debug_regfile_x1_output_expected_prev[16] )
		&& ((debug_regfile_x1_output_expected_prev[16] !== last_debug_regfile_x1_output_exp[16]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[16] = debug_regfile_x1_output_expected_prev[16];
	end
	if (
		( debug_regfile_x1_output_expected_prev[17] !== 1'bx ) && ( debug_regfile_x1_output_prev[17] !== debug_regfile_x1_output_expected_prev[17] )
		&& ((debug_regfile_x1_output_expected_prev[17] !== last_debug_regfile_x1_output_exp[17]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[17] = debug_regfile_x1_output_expected_prev[17];
	end
	if (
		( debug_regfile_x1_output_expected_prev[18] !== 1'bx ) && ( debug_regfile_x1_output_prev[18] !== debug_regfile_x1_output_expected_prev[18] )
		&& ((debug_regfile_x1_output_expected_prev[18] !== last_debug_regfile_x1_output_exp[18]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[18] = debug_regfile_x1_output_expected_prev[18];
	end
	if (
		( debug_regfile_x1_output_expected_prev[19] !== 1'bx ) && ( debug_regfile_x1_output_prev[19] !== debug_regfile_x1_output_expected_prev[19] )
		&& ((debug_regfile_x1_output_expected_prev[19] !== last_debug_regfile_x1_output_exp[19]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[19] = debug_regfile_x1_output_expected_prev[19];
	end
	if (
		( debug_regfile_x1_output_expected_prev[20] !== 1'bx ) && ( debug_regfile_x1_output_prev[20] !== debug_regfile_x1_output_expected_prev[20] )
		&& ((debug_regfile_x1_output_expected_prev[20] !== last_debug_regfile_x1_output_exp[20]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[20] = debug_regfile_x1_output_expected_prev[20];
	end
	if (
		( debug_regfile_x1_output_expected_prev[21] !== 1'bx ) && ( debug_regfile_x1_output_prev[21] !== debug_regfile_x1_output_expected_prev[21] )
		&& ((debug_regfile_x1_output_expected_prev[21] !== last_debug_regfile_x1_output_exp[21]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[21] = debug_regfile_x1_output_expected_prev[21];
	end
	if (
		( debug_regfile_x1_output_expected_prev[22] !== 1'bx ) && ( debug_regfile_x1_output_prev[22] !== debug_regfile_x1_output_expected_prev[22] )
		&& ((debug_regfile_x1_output_expected_prev[22] !== last_debug_regfile_x1_output_exp[22]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[22] = debug_regfile_x1_output_expected_prev[22];
	end
	if (
		( debug_regfile_x1_output_expected_prev[23] !== 1'bx ) && ( debug_regfile_x1_output_prev[23] !== debug_regfile_x1_output_expected_prev[23] )
		&& ((debug_regfile_x1_output_expected_prev[23] !== last_debug_regfile_x1_output_exp[23]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[23] = debug_regfile_x1_output_expected_prev[23];
	end
	if (
		( debug_regfile_x1_output_expected_prev[24] !== 1'bx ) && ( debug_regfile_x1_output_prev[24] !== debug_regfile_x1_output_expected_prev[24] )
		&& ((debug_regfile_x1_output_expected_prev[24] !== last_debug_regfile_x1_output_exp[24]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[24] = debug_regfile_x1_output_expected_prev[24];
	end
	if (
		( debug_regfile_x1_output_expected_prev[25] !== 1'bx ) && ( debug_regfile_x1_output_prev[25] !== debug_regfile_x1_output_expected_prev[25] )
		&& ((debug_regfile_x1_output_expected_prev[25] !== last_debug_regfile_x1_output_exp[25]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[25] = debug_regfile_x1_output_expected_prev[25];
	end
	if (
		( debug_regfile_x1_output_expected_prev[26] !== 1'bx ) && ( debug_regfile_x1_output_prev[26] !== debug_regfile_x1_output_expected_prev[26] )
		&& ((debug_regfile_x1_output_expected_prev[26] !== last_debug_regfile_x1_output_exp[26]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[26] = debug_regfile_x1_output_expected_prev[26];
	end
	if (
		( debug_regfile_x1_output_expected_prev[27] !== 1'bx ) && ( debug_regfile_x1_output_prev[27] !== debug_regfile_x1_output_expected_prev[27] )
		&& ((debug_regfile_x1_output_expected_prev[27] !== last_debug_regfile_x1_output_exp[27]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[27] = debug_regfile_x1_output_expected_prev[27];
	end
	if (
		( debug_regfile_x1_output_expected_prev[28] !== 1'bx ) && ( debug_regfile_x1_output_prev[28] !== debug_regfile_x1_output_expected_prev[28] )
		&& ((debug_regfile_x1_output_expected_prev[28] !== last_debug_regfile_x1_output_exp[28]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[28] = debug_regfile_x1_output_expected_prev[28];
	end
	if (
		( debug_regfile_x1_output_expected_prev[29] !== 1'bx ) && ( debug_regfile_x1_output_prev[29] !== debug_regfile_x1_output_expected_prev[29] )
		&& ((debug_regfile_x1_output_expected_prev[29] !== last_debug_regfile_x1_output_exp[29]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[29] = debug_regfile_x1_output_expected_prev[29];
	end
	if (
		( debug_regfile_x1_output_expected_prev[30] !== 1'bx ) && ( debug_regfile_x1_output_prev[30] !== debug_regfile_x1_output_expected_prev[30] )
		&& ((debug_regfile_x1_output_expected_prev[30] !== last_debug_regfile_x1_output_exp[30]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[30] = debug_regfile_x1_output_expected_prev[30];
	end
	if (
		( debug_regfile_x1_output_expected_prev[31] !== 1'bx ) && ( debug_regfile_x1_output_prev[31] !== debug_regfile_x1_output_expected_prev[31] )
		&& ((debug_regfile_x1_output_expected_prev[31] !== last_debug_regfile_x1_output_exp[31]) ||
			on_first_change[23])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x1_output[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x1_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x1_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[23] = 1'b0;
		last_debug_regfile_x1_output_exp[31] = debug_regfile_x1_output_expected_prev[31];
	end
	if (
		( debug_regfile_x2_output_expected_prev[0] !== 1'bx ) && ( debug_regfile_x2_output_prev[0] !== debug_regfile_x2_output_expected_prev[0] )
		&& ((debug_regfile_x2_output_expected_prev[0] !== last_debug_regfile_x2_output_exp[0]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[0] = debug_regfile_x2_output_expected_prev[0];
	end
	if (
		( debug_regfile_x2_output_expected_prev[1] !== 1'bx ) && ( debug_regfile_x2_output_prev[1] !== debug_regfile_x2_output_expected_prev[1] )
		&& ((debug_regfile_x2_output_expected_prev[1] !== last_debug_regfile_x2_output_exp[1]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[1] = debug_regfile_x2_output_expected_prev[1];
	end
	if (
		( debug_regfile_x2_output_expected_prev[2] !== 1'bx ) && ( debug_regfile_x2_output_prev[2] !== debug_regfile_x2_output_expected_prev[2] )
		&& ((debug_regfile_x2_output_expected_prev[2] !== last_debug_regfile_x2_output_exp[2]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[2] = debug_regfile_x2_output_expected_prev[2];
	end
	if (
		( debug_regfile_x2_output_expected_prev[3] !== 1'bx ) && ( debug_regfile_x2_output_prev[3] !== debug_regfile_x2_output_expected_prev[3] )
		&& ((debug_regfile_x2_output_expected_prev[3] !== last_debug_regfile_x2_output_exp[3]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[3] = debug_regfile_x2_output_expected_prev[3];
	end
	if (
		( debug_regfile_x2_output_expected_prev[4] !== 1'bx ) && ( debug_regfile_x2_output_prev[4] !== debug_regfile_x2_output_expected_prev[4] )
		&& ((debug_regfile_x2_output_expected_prev[4] !== last_debug_regfile_x2_output_exp[4]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[4] = debug_regfile_x2_output_expected_prev[4];
	end
	if (
		( debug_regfile_x2_output_expected_prev[5] !== 1'bx ) && ( debug_regfile_x2_output_prev[5] !== debug_regfile_x2_output_expected_prev[5] )
		&& ((debug_regfile_x2_output_expected_prev[5] !== last_debug_regfile_x2_output_exp[5]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[5] = debug_regfile_x2_output_expected_prev[5];
	end
	if (
		( debug_regfile_x2_output_expected_prev[6] !== 1'bx ) && ( debug_regfile_x2_output_prev[6] !== debug_regfile_x2_output_expected_prev[6] )
		&& ((debug_regfile_x2_output_expected_prev[6] !== last_debug_regfile_x2_output_exp[6]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[6] = debug_regfile_x2_output_expected_prev[6];
	end
	if (
		( debug_regfile_x2_output_expected_prev[7] !== 1'bx ) && ( debug_regfile_x2_output_prev[7] !== debug_regfile_x2_output_expected_prev[7] )
		&& ((debug_regfile_x2_output_expected_prev[7] !== last_debug_regfile_x2_output_exp[7]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[7] = debug_regfile_x2_output_expected_prev[7];
	end
	if (
		( debug_regfile_x2_output_expected_prev[8] !== 1'bx ) && ( debug_regfile_x2_output_prev[8] !== debug_regfile_x2_output_expected_prev[8] )
		&& ((debug_regfile_x2_output_expected_prev[8] !== last_debug_regfile_x2_output_exp[8]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[8] = debug_regfile_x2_output_expected_prev[8];
	end
	if (
		( debug_regfile_x2_output_expected_prev[9] !== 1'bx ) && ( debug_regfile_x2_output_prev[9] !== debug_regfile_x2_output_expected_prev[9] )
		&& ((debug_regfile_x2_output_expected_prev[9] !== last_debug_regfile_x2_output_exp[9]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[9] = debug_regfile_x2_output_expected_prev[9];
	end
	if (
		( debug_regfile_x2_output_expected_prev[10] !== 1'bx ) && ( debug_regfile_x2_output_prev[10] !== debug_regfile_x2_output_expected_prev[10] )
		&& ((debug_regfile_x2_output_expected_prev[10] !== last_debug_regfile_x2_output_exp[10]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[10] = debug_regfile_x2_output_expected_prev[10];
	end
	if (
		( debug_regfile_x2_output_expected_prev[11] !== 1'bx ) && ( debug_regfile_x2_output_prev[11] !== debug_regfile_x2_output_expected_prev[11] )
		&& ((debug_regfile_x2_output_expected_prev[11] !== last_debug_regfile_x2_output_exp[11]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[11] = debug_regfile_x2_output_expected_prev[11];
	end
	if (
		( debug_regfile_x2_output_expected_prev[12] !== 1'bx ) && ( debug_regfile_x2_output_prev[12] !== debug_regfile_x2_output_expected_prev[12] )
		&& ((debug_regfile_x2_output_expected_prev[12] !== last_debug_regfile_x2_output_exp[12]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[12] = debug_regfile_x2_output_expected_prev[12];
	end
	if (
		( debug_regfile_x2_output_expected_prev[13] !== 1'bx ) && ( debug_regfile_x2_output_prev[13] !== debug_regfile_x2_output_expected_prev[13] )
		&& ((debug_regfile_x2_output_expected_prev[13] !== last_debug_regfile_x2_output_exp[13]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[13] = debug_regfile_x2_output_expected_prev[13];
	end
	if (
		( debug_regfile_x2_output_expected_prev[14] !== 1'bx ) && ( debug_regfile_x2_output_prev[14] !== debug_regfile_x2_output_expected_prev[14] )
		&& ((debug_regfile_x2_output_expected_prev[14] !== last_debug_regfile_x2_output_exp[14]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[14] = debug_regfile_x2_output_expected_prev[14];
	end
	if (
		( debug_regfile_x2_output_expected_prev[15] !== 1'bx ) && ( debug_regfile_x2_output_prev[15] !== debug_regfile_x2_output_expected_prev[15] )
		&& ((debug_regfile_x2_output_expected_prev[15] !== last_debug_regfile_x2_output_exp[15]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[15] = debug_regfile_x2_output_expected_prev[15];
	end
	if (
		( debug_regfile_x2_output_expected_prev[16] !== 1'bx ) && ( debug_regfile_x2_output_prev[16] !== debug_regfile_x2_output_expected_prev[16] )
		&& ((debug_regfile_x2_output_expected_prev[16] !== last_debug_regfile_x2_output_exp[16]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[16] = debug_regfile_x2_output_expected_prev[16];
	end
	if (
		( debug_regfile_x2_output_expected_prev[17] !== 1'bx ) && ( debug_regfile_x2_output_prev[17] !== debug_regfile_x2_output_expected_prev[17] )
		&& ((debug_regfile_x2_output_expected_prev[17] !== last_debug_regfile_x2_output_exp[17]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[17] = debug_regfile_x2_output_expected_prev[17];
	end
	if (
		( debug_regfile_x2_output_expected_prev[18] !== 1'bx ) && ( debug_regfile_x2_output_prev[18] !== debug_regfile_x2_output_expected_prev[18] )
		&& ((debug_regfile_x2_output_expected_prev[18] !== last_debug_regfile_x2_output_exp[18]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[18] = debug_regfile_x2_output_expected_prev[18];
	end
	if (
		( debug_regfile_x2_output_expected_prev[19] !== 1'bx ) && ( debug_regfile_x2_output_prev[19] !== debug_regfile_x2_output_expected_prev[19] )
		&& ((debug_regfile_x2_output_expected_prev[19] !== last_debug_regfile_x2_output_exp[19]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[19] = debug_regfile_x2_output_expected_prev[19];
	end
	if (
		( debug_regfile_x2_output_expected_prev[20] !== 1'bx ) && ( debug_regfile_x2_output_prev[20] !== debug_regfile_x2_output_expected_prev[20] )
		&& ((debug_regfile_x2_output_expected_prev[20] !== last_debug_regfile_x2_output_exp[20]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[20] = debug_regfile_x2_output_expected_prev[20];
	end
	if (
		( debug_regfile_x2_output_expected_prev[21] !== 1'bx ) && ( debug_regfile_x2_output_prev[21] !== debug_regfile_x2_output_expected_prev[21] )
		&& ((debug_regfile_x2_output_expected_prev[21] !== last_debug_regfile_x2_output_exp[21]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[21] = debug_regfile_x2_output_expected_prev[21];
	end
	if (
		( debug_regfile_x2_output_expected_prev[22] !== 1'bx ) && ( debug_regfile_x2_output_prev[22] !== debug_regfile_x2_output_expected_prev[22] )
		&& ((debug_regfile_x2_output_expected_prev[22] !== last_debug_regfile_x2_output_exp[22]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[22] = debug_regfile_x2_output_expected_prev[22];
	end
	if (
		( debug_regfile_x2_output_expected_prev[23] !== 1'bx ) && ( debug_regfile_x2_output_prev[23] !== debug_regfile_x2_output_expected_prev[23] )
		&& ((debug_regfile_x2_output_expected_prev[23] !== last_debug_regfile_x2_output_exp[23]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[23] = debug_regfile_x2_output_expected_prev[23];
	end
	if (
		( debug_regfile_x2_output_expected_prev[24] !== 1'bx ) && ( debug_regfile_x2_output_prev[24] !== debug_regfile_x2_output_expected_prev[24] )
		&& ((debug_regfile_x2_output_expected_prev[24] !== last_debug_regfile_x2_output_exp[24]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[24] = debug_regfile_x2_output_expected_prev[24];
	end
	if (
		( debug_regfile_x2_output_expected_prev[25] !== 1'bx ) && ( debug_regfile_x2_output_prev[25] !== debug_regfile_x2_output_expected_prev[25] )
		&& ((debug_regfile_x2_output_expected_prev[25] !== last_debug_regfile_x2_output_exp[25]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[25] = debug_regfile_x2_output_expected_prev[25];
	end
	if (
		( debug_regfile_x2_output_expected_prev[26] !== 1'bx ) && ( debug_regfile_x2_output_prev[26] !== debug_regfile_x2_output_expected_prev[26] )
		&& ((debug_regfile_x2_output_expected_prev[26] !== last_debug_regfile_x2_output_exp[26]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[26] = debug_regfile_x2_output_expected_prev[26];
	end
	if (
		( debug_regfile_x2_output_expected_prev[27] !== 1'bx ) && ( debug_regfile_x2_output_prev[27] !== debug_regfile_x2_output_expected_prev[27] )
		&& ((debug_regfile_x2_output_expected_prev[27] !== last_debug_regfile_x2_output_exp[27]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[27] = debug_regfile_x2_output_expected_prev[27];
	end
	if (
		( debug_regfile_x2_output_expected_prev[28] !== 1'bx ) && ( debug_regfile_x2_output_prev[28] !== debug_regfile_x2_output_expected_prev[28] )
		&& ((debug_regfile_x2_output_expected_prev[28] !== last_debug_regfile_x2_output_exp[28]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[28] = debug_regfile_x2_output_expected_prev[28];
	end
	if (
		( debug_regfile_x2_output_expected_prev[29] !== 1'bx ) && ( debug_regfile_x2_output_prev[29] !== debug_regfile_x2_output_expected_prev[29] )
		&& ((debug_regfile_x2_output_expected_prev[29] !== last_debug_regfile_x2_output_exp[29]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[29] = debug_regfile_x2_output_expected_prev[29];
	end
	if (
		( debug_regfile_x2_output_expected_prev[30] !== 1'bx ) && ( debug_regfile_x2_output_prev[30] !== debug_regfile_x2_output_expected_prev[30] )
		&& ((debug_regfile_x2_output_expected_prev[30] !== last_debug_regfile_x2_output_exp[30]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[30] = debug_regfile_x2_output_expected_prev[30];
	end
	if (
		( debug_regfile_x2_output_expected_prev[31] !== 1'bx ) && ( debug_regfile_x2_output_prev[31] !== debug_regfile_x2_output_expected_prev[31] )
		&& ((debug_regfile_x2_output_expected_prev[31] !== last_debug_regfile_x2_output_exp[31]) ||
			on_first_change[24])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x2_output[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x2_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x2_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[24] = 1'b0;
		last_debug_regfile_x2_output_exp[31] = debug_regfile_x2_output_expected_prev[31];
	end
	if (
		( debug_regfile_x31_output_expected_prev[0] !== 1'bx ) && ( debug_regfile_x31_output_prev[0] !== debug_regfile_x31_output_expected_prev[0] )
		&& ((debug_regfile_x31_output_expected_prev[0] !== last_debug_regfile_x31_output_exp[0]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[0] = debug_regfile_x31_output_expected_prev[0];
	end
	if (
		( debug_regfile_x31_output_expected_prev[1] !== 1'bx ) && ( debug_regfile_x31_output_prev[1] !== debug_regfile_x31_output_expected_prev[1] )
		&& ((debug_regfile_x31_output_expected_prev[1] !== last_debug_regfile_x31_output_exp[1]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[1] = debug_regfile_x31_output_expected_prev[1];
	end
	if (
		( debug_regfile_x31_output_expected_prev[2] !== 1'bx ) && ( debug_regfile_x31_output_prev[2] !== debug_regfile_x31_output_expected_prev[2] )
		&& ((debug_regfile_x31_output_expected_prev[2] !== last_debug_regfile_x31_output_exp[2]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[2] = debug_regfile_x31_output_expected_prev[2];
	end
	if (
		( debug_regfile_x31_output_expected_prev[3] !== 1'bx ) && ( debug_regfile_x31_output_prev[3] !== debug_regfile_x31_output_expected_prev[3] )
		&& ((debug_regfile_x31_output_expected_prev[3] !== last_debug_regfile_x31_output_exp[3]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[3] = debug_regfile_x31_output_expected_prev[3];
	end
	if (
		( debug_regfile_x31_output_expected_prev[4] !== 1'bx ) && ( debug_regfile_x31_output_prev[4] !== debug_regfile_x31_output_expected_prev[4] )
		&& ((debug_regfile_x31_output_expected_prev[4] !== last_debug_regfile_x31_output_exp[4]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[4] = debug_regfile_x31_output_expected_prev[4];
	end
	if (
		( debug_regfile_x31_output_expected_prev[5] !== 1'bx ) && ( debug_regfile_x31_output_prev[5] !== debug_regfile_x31_output_expected_prev[5] )
		&& ((debug_regfile_x31_output_expected_prev[5] !== last_debug_regfile_x31_output_exp[5]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[5] = debug_regfile_x31_output_expected_prev[5];
	end
	if (
		( debug_regfile_x31_output_expected_prev[6] !== 1'bx ) && ( debug_regfile_x31_output_prev[6] !== debug_regfile_x31_output_expected_prev[6] )
		&& ((debug_regfile_x31_output_expected_prev[6] !== last_debug_regfile_x31_output_exp[6]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[6] = debug_regfile_x31_output_expected_prev[6];
	end
	if (
		( debug_regfile_x31_output_expected_prev[7] !== 1'bx ) && ( debug_regfile_x31_output_prev[7] !== debug_regfile_x31_output_expected_prev[7] )
		&& ((debug_regfile_x31_output_expected_prev[7] !== last_debug_regfile_x31_output_exp[7]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[7] = debug_regfile_x31_output_expected_prev[7];
	end
	if (
		( debug_regfile_x31_output_expected_prev[8] !== 1'bx ) && ( debug_regfile_x31_output_prev[8] !== debug_regfile_x31_output_expected_prev[8] )
		&& ((debug_regfile_x31_output_expected_prev[8] !== last_debug_regfile_x31_output_exp[8]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[8] = debug_regfile_x31_output_expected_prev[8];
	end
	if (
		( debug_regfile_x31_output_expected_prev[9] !== 1'bx ) && ( debug_regfile_x31_output_prev[9] !== debug_regfile_x31_output_expected_prev[9] )
		&& ((debug_regfile_x31_output_expected_prev[9] !== last_debug_regfile_x31_output_exp[9]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[9] = debug_regfile_x31_output_expected_prev[9];
	end
	if (
		( debug_regfile_x31_output_expected_prev[10] !== 1'bx ) && ( debug_regfile_x31_output_prev[10] !== debug_regfile_x31_output_expected_prev[10] )
		&& ((debug_regfile_x31_output_expected_prev[10] !== last_debug_regfile_x31_output_exp[10]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[10] = debug_regfile_x31_output_expected_prev[10];
	end
	if (
		( debug_regfile_x31_output_expected_prev[11] !== 1'bx ) && ( debug_regfile_x31_output_prev[11] !== debug_regfile_x31_output_expected_prev[11] )
		&& ((debug_regfile_x31_output_expected_prev[11] !== last_debug_regfile_x31_output_exp[11]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[11] = debug_regfile_x31_output_expected_prev[11];
	end
	if (
		( debug_regfile_x31_output_expected_prev[12] !== 1'bx ) && ( debug_regfile_x31_output_prev[12] !== debug_regfile_x31_output_expected_prev[12] )
		&& ((debug_regfile_x31_output_expected_prev[12] !== last_debug_regfile_x31_output_exp[12]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[12] = debug_regfile_x31_output_expected_prev[12];
	end
	if (
		( debug_regfile_x31_output_expected_prev[13] !== 1'bx ) && ( debug_regfile_x31_output_prev[13] !== debug_regfile_x31_output_expected_prev[13] )
		&& ((debug_regfile_x31_output_expected_prev[13] !== last_debug_regfile_x31_output_exp[13]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[13] = debug_regfile_x31_output_expected_prev[13];
	end
	if (
		( debug_regfile_x31_output_expected_prev[14] !== 1'bx ) && ( debug_regfile_x31_output_prev[14] !== debug_regfile_x31_output_expected_prev[14] )
		&& ((debug_regfile_x31_output_expected_prev[14] !== last_debug_regfile_x31_output_exp[14]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[14] = debug_regfile_x31_output_expected_prev[14];
	end
	if (
		( debug_regfile_x31_output_expected_prev[15] !== 1'bx ) && ( debug_regfile_x31_output_prev[15] !== debug_regfile_x31_output_expected_prev[15] )
		&& ((debug_regfile_x31_output_expected_prev[15] !== last_debug_regfile_x31_output_exp[15]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[15] = debug_regfile_x31_output_expected_prev[15];
	end
	if (
		( debug_regfile_x31_output_expected_prev[16] !== 1'bx ) && ( debug_regfile_x31_output_prev[16] !== debug_regfile_x31_output_expected_prev[16] )
		&& ((debug_regfile_x31_output_expected_prev[16] !== last_debug_regfile_x31_output_exp[16]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[16] = debug_regfile_x31_output_expected_prev[16];
	end
	if (
		( debug_regfile_x31_output_expected_prev[17] !== 1'bx ) && ( debug_regfile_x31_output_prev[17] !== debug_regfile_x31_output_expected_prev[17] )
		&& ((debug_regfile_x31_output_expected_prev[17] !== last_debug_regfile_x31_output_exp[17]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[17] = debug_regfile_x31_output_expected_prev[17];
	end
	if (
		( debug_regfile_x31_output_expected_prev[18] !== 1'bx ) && ( debug_regfile_x31_output_prev[18] !== debug_regfile_x31_output_expected_prev[18] )
		&& ((debug_regfile_x31_output_expected_prev[18] !== last_debug_regfile_x31_output_exp[18]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[18] = debug_regfile_x31_output_expected_prev[18];
	end
	if (
		( debug_regfile_x31_output_expected_prev[19] !== 1'bx ) && ( debug_regfile_x31_output_prev[19] !== debug_regfile_x31_output_expected_prev[19] )
		&& ((debug_regfile_x31_output_expected_prev[19] !== last_debug_regfile_x31_output_exp[19]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[19] = debug_regfile_x31_output_expected_prev[19];
	end
	if (
		( debug_regfile_x31_output_expected_prev[20] !== 1'bx ) && ( debug_regfile_x31_output_prev[20] !== debug_regfile_x31_output_expected_prev[20] )
		&& ((debug_regfile_x31_output_expected_prev[20] !== last_debug_regfile_x31_output_exp[20]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[20] = debug_regfile_x31_output_expected_prev[20];
	end
	if (
		( debug_regfile_x31_output_expected_prev[21] !== 1'bx ) && ( debug_regfile_x31_output_prev[21] !== debug_regfile_x31_output_expected_prev[21] )
		&& ((debug_regfile_x31_output_expected_prev[21] !== last_debug_regfile_x31_output_exp[21]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[21] = debug_regfile_x31_output_expected_prev[21];
	end
	if (
		( debug_regfile_x31_output_expected_prev[22] !== 1'bx ) && ( debug_regfile_x31_output_prev[22] !== debug_regfile_x31_output_expected_prev[22] )
		&& ((debug_regfile_x31_output_expected_prev[22] !== last_debug_regfile_x31_output_exp[22]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[22] = debug_regfile_x31_output_expected_prev[22];
	end
	if (
		( debug_regfile_x31_output_expected_prev[23] !== 1'bx ) && ( debug_regfile_x31_output_prev[23] !== debug_regfile_x31_output_expected_prev[23] )
		&& ((debug_regfile_x31_output_expected_prev[23] !== last_debug_regfile_x31_output_exp[23]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[23] = debug_regfile_x31_output_expected_prev[23];
	end
	if (
		( debug_regfile_x31_output_expected_prev[24] !== 1'bx ) && ( debug_regfile_x31_output_prev[24] !== debug_regfile_x31_output_expected_prev[24] )
		&& ((debug_regfile_x31_output_expected_prev[24] !== last_debug_regfile_x31_output_exp[24]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[24] = debug_regfile_x31_output_expected_prev[24];
	end
	if (
		( debug_regfile_x31_output_expected_prev[25] !== 1'bx ) && ( debug_regfile_x31_output_prev[25] !== debug_regfile_x31_output_expected_prev[25] )
		&& ((debug_regfile_x31_output_expected_prev[25] !== last_debug_regfile_x31_output_exp[25]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[25] = debug_regfile_x31_output_expected_prev[25];
	end
	if (
		( debug_regfile_x31_output_expected_prev[26] !== 1'bx ) && ( debug_regfile_x31_output_prev[26] !== debug_regfile_x31_output_expected_prev[26] )
		&& ((debug_regfile_x31_output_expected_prev[26] !== last_debug_regfile_x31_output_exp[26]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[26] = debug_regfile_x31_output_expected_prev[26];
	end
	if (
		( debug_regfile_x31_output_expected_prev[27] !== 1'bx ) && ( debug_regfile_x31_output_prev[27] !== debug_regfile_x31_output_expected_prev[27] )
		&& ((debug_regfile_x31_output_expected_prev[27] !== last_debug_regfile_x31_output_exp[27]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[27] = debug_regfile_x31_output_expected_prev[27];
	end
	if (
		( debug_regfile_x31_output_expected_prev[28] !== 1'bx ) && ( debug_regfile_x31_output_prev[28] !== debug_regfile_x31_output_expected_prev[28] )
		&& ((debug_regfile_x31_output_expected_prev[28] !== last_debug_regfile_x31_output_exp[28]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[28] = debug_regfile_x31_output_expected_prev[28];
	end
	if (
		( debug_regfile_x31_output_expected_prev[29] !== 1'bx ) && ( debug_regfile_x31_output_prev[29] !== debug_regfile_x31_output_expected_prev[29] )
		&& ((debug_regfile_x31_output_expected_prev[29] !== last_debug_regfile_x31_output_exp[29]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[29] = debug_regfile_x31_output_expected_prev[29];
	end
	if (
		( debug_regfile_x31_output_expected_prev[30] !== 1'bx ) && ( debug_regfile_x31_output_prev[30] !== debug_regfile_x31_output_expected_prev[30] )
		&& ((debug_regfile_x31_output_expected_prev[30] !== last_debug_regfile_x31_output_exp[30]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[30] = debug_regfile_x31_output_expected_prev[30];
	end
	if (
		( debug_regfile_x31_output_expected_prev[31] !== 1'bx ) && ( debug_regfile_x31_output_prev[31] !== debug_regfile_x31_output_expected_prev[31] )
		&& ((debug_regfile_x31_output_expected_prev[31] !== last_debug_regfile_x31_output_exp[31]) ||
			on_first_change[25])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_regfile_x31_output[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_regfile_x31_output_expected_prev);
		$display ("     Real value = %b", debug_regfile_x31_output_prev);
		nummismatches = nummismatches + 1;
		on_first_change[25] = 1'b0;
		last_debug_regfile_x31_output_exp[31] = debug_regfile_x31_output_expected_prev[31];
	end
	if (
		( debug_register_file_output_0_expected_prev[0] !== 1'bx ) && ( debug_register_file_output_0_prev[0] !== debug_register_file_output_0_expected_prev[0] )
		&& ((debug_register_file_output_0_expected_prev[0] !== last_debug_register_file_output_0_exp[0]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[0] = debug_register_file_output_0_expected_prev[0];
	end
	if (
		( debug_register_file_output_0_expected_prev[1] !== 1'bx ) && ( debug_register_file_output_0_prev[1] !== debug_register_file_output_0_expected_prev[1] )
		&& ((debug_register_file_output_0_expected_prev[1] !== last_debug_register_file_output_0_exp[1]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[1] = debug_register_file_output_0_expected_prev[1];
	end
	if (
		( debug_register_file_output_0_expected_prev[2] !== 1'bx ) && ( debug_register_file_output_0_prev[2] !== debug_register_file_output_0_expected_prev[2] )
		&& ((debug_register_file_output_0_expected_prev[2] !== last_debug_register_file_output_0_exp[2]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[2] = debug_register_file_output_0_expected_prev[2];
	end
	if (
		( debug_register_file_output_0_expected_prev[3] !== 1'bx ) && ( debug_register_file_output_0_prev[3] !== debug_register_file_output_0_expected_prev[3] )
		&& ((debug_register_file_output_0_expected_prev[3] !== last_debug_register_file_output_0_exp[3]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[3] = debug_register_file_output_0_expected_prev[3];
	end
	if (
		( debug_register_file_output_0_expected_prev[4] !== 1'bx ) && ( debug_register_file_output_0_prev[4] !== debug_register_file_output_0_expected_prev[4] )
		&& ((debug_register_file_output_0_expected_prev[4] !== last_debug_register_file_output_0_exp[4]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[4] = debug_register_file_output_0_expected_prev[4];
	end
	if (
		( debug_register_file_output_0_expected_prev[5] !== 1'bx ) && ( debug_register_file_output_0_prev[5] !== debug_register_file_output_0_expected_prev[5] )
		&& ((debug_register_file_output_0_expected_prev[5] !== last_debug_register_file_output_0_exp[5]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[5] = debug_register_file_output_0_expected_prev[5];
	end
	if (
		( debug_register_file_output_0_expected_prev[6] !== 1'bx ) && ( debug_register_file_output_0_prev[6] !== debug_register_file_output_0_expected_prev[6] )
		&& ((debug_register_file_output_0_expected_prev[6] !== last_debug_register_file_output_0_exp[6]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[6] = debug_register_file_output_0_expected_prev[6];
	end
	if (
		( debug_register_file_output_0_expected_prev[7] !== 1'bx ) && ( debug_register_file_output_0_prev[7] !== debug_register_file_output_0_expected_prev[7] )
		&& ((debug_register_file_output_0_expected_prev[7] !== last_debug_register_file_output_0_exp[7]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[7] = debug_register_file_output_0_expected_prev[7];
	end
	if (
		( debug_register_file_output_0_expected_prev[8] !== 1'bx ) && ( debug_register_file_output_0_prev[8] !== debug_register_file_output_0_expected_prev[8] )
		&& ((debug_register_file_output_0_expected_prev[8] !== last_debug_register_file_output_0_exp[8]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[8] = debug_register_file_output_0_expected_prev[8];
	end
	if (
		( debug_register_file_output_0_expected_prev[9] !== 1'bx ) && ( debug_register_file_output_0_prev[9] !== debug_register_file_output_0_expected_prev[9] )
		&& ((debug_register_file_output_0_expected_prev[9] !== last_debug_register_file_output_0_exp[9]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[9] = debug_register_file_output_0_expected_prev[9];
	end
	if (
		( debug_register_file_output_0_expected_prev[10] !== 1'bx ) && ( debug_register_file_output_0_prev[10] !== debug_register_file_output_0_expected_prev[10] )
		&& ((debug_register_file_output_0_expected_prev[10] !== last_debug_register_file_output_0_exp[10]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[10] = debug_register_file_output_0_expected_prev[10];
	end
	if (
		( debug_register_file_output_0_expected_prev[11] !== 1'bx ) && ( debug_register_file_output_0_prev[11] !== debug_register_file_output_0_expected_prev[11] )
		&& ((debug_register_file_output_0_expected_prev[11] !== last_debug_register_file_output_0_exp[11]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[11] = debug_register_file_output_0_expected_prev[11];
	end
	if (
		( debug_register_file_output_0_expected_prev[12] !== 1'bx ) && ( debug_register_file_output_0_prev[12] !== debug_register_file_output_0_expected_prev[12] )
		&& ((debug_register_file_output_0_expected_prev[12] !== last_debug_register_file_output_0_exp[12]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[12] = debug_register_file_output_0_expected_prev[12];
	end
	if (
		( debug_register_file_output_0_expected_prev[13] !== 1'bx ) && ( debug_register_file_output_0_prev[13] !== debug_register_file_output_0_expected_prev[13] )
		&& ((debug_register_file_output_0_expected_prev[13] !== last_debug_register_file_output_0_exp[13]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[13] = debug_register_file_output_0_expected_prev[13];
	end
	if (
		( debug_register_file_output_0_expected_prev[14] !== 1'bx ) && ( debug_register_file_output_0_prev[14] !== debug_register_file_output_0_expected_prev[14] )
		&& ((debug_register_file_output_0_expected_prev[14] !== last_debug_register_file_output_0_exp[14]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[14] = debug_register_file_output_0_expected_prev[14];
	end
	if (
		( debug_register_file_output_0_expected_prev[15] !== 1'bx ) && ( debug_register_file_output_0_prev[15] !== debug_register_file_output_0_expected_prev[15] )
		&& ((debug_register_file_output_0_expected_prev[15] !== last_debug_register_file_output_0_exp[15]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[15] = debug_register_file_output_0_expected_prev[15];
	end
	if (
		( debug_register_file_output_0_expected_prev[16] !== 1'bx ) && ( debug_register_file_output_0_prev[16] !== debug_register_file_output_0_expected_prev[16] )
		&& ((debug_register_file_output_0_expected_prev[16] !== last_debug_register_file_output_0_exp[16]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[16] = debug_register_file_output_0_expected_prev[16];
	end
	if (
		( debug_register_file_output_0_expected_prev[17] !== 1'bx ) && ( debug_register_file_output_0_prev[17] !== debug_register_file_output_0_expected_prev[17] )
		&& ((debug_register_file_output_0_expected_prev[17] !== last_debug_register_file_output_0_exp[17]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[17] = debug_register_file_output_0_expected_prev[17];
	end
	if (
		( debug_register_file_output_0_expected_prev[18] !== 1'bx ) && ( debug_register_file_output_0_prev[18] !== debug_register_file_output_0_expected_prev[18] )
		&& ((debug_register_file_output_0_expected_prev[18] !== last_debug_register_file_output_0_exp[18]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[18] = debug_register_file_output_0_expected_prev[18];
	end
	if (
		( debug_register_file_output_0_expected_prev[19] !== 1'bx ) && ( debug_register_file_output_0_prev[19] !== debug_register_file_output_0_expected_prev[19] )
		&& ((debug_register_file_output_0_expected_prev[19] !== last_debug_register_file_output_0_exp[19]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[19] = debug_register_file_output_0_expected_prev[19];
	end
	if (
		( debug_register_file_output_0_expected_prev[20] !== 1'bx ) && ( debug_register_file_output_0_prev[20] !== debug_register_file_output_0_expected_prev[20] )
		&& ((debug_register_file_output_0_expected_prev[20] !== last_debug_register_file_output_0_exp[20]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[20] = debug_register_file_output_0_expected_prev[20];
	end
	if (
		( debug_register_file_output_0_expected_prev[21] !== 1'bx ) && ( debug_register_file_output_0_prev[21] !== debug_register_file_output_0_expected_prev[21] )
		&& ((debug_register_file_output_0_expected_prev[21] !== last_debug_register_file_output_0_exp[21]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[21] = debug_register_file_output_0_expected_prev[21];
	end
	if (
		( debug_register_file_output_0_expected_prev[22] !== 1'bx ) && ( debug_register_file_output_0_prev[22] !== debug_register_file_output_0_expected_prev[22] )
		&& ((debug_register_file_output_0_expected_prev[22] !== last_debug_register_file_output_0_exp[22]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[22] = debug_register_file_output_0_expected_prev[22];
	end
	if (
		( debug_register_file_output_0_expected_prev[23] !== 1'bx ) && ( debug_register_file_output_0_prev[23] !== debug_register_file_output_0_expected_prev[23] )
		&& ((debug_register_file_output_0_expected_prev[23] !== last_debug_register_file_output_0_exp[23]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[23] = debug_register_file_output_0_expected_prev[23];
	end
	if (
		( debug_register_file_output_0_expected_prev[24] !== 1'bx ) && ( debug_register_file_output_0_prev[24] !== debug_register_file_output_0_expected_prev[24] )
		&& ((debug_register_file_output_0_expected_prev[24] !== last_debug_register_file_output_0_exp[24]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[24] = debug_register_file_output_0_expected_prev[24];
	end
	if (
		( debug_register_file_output_0_expected_prev[25] !== 1'bx ) && ( debug_register_file_output_0_prev[25] !== debug_register_file_output_0_expected_prev[25] )
		&& ((debug_register_file_output_0_expected_prev[25] !== last_debug_register_file_output_0_exp[25]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[25] = debug_register_file_output_0_expected_prev[25];
	end
	if (
		( debug_register_file_output_0_expected_prev[26] !== 1'bx ) && ( debug_register_file_output_0_prev[26] !== debug_register_file_output_0_expected_prev[26] )
		&& ((debug_register_file_output_0_expected_prev[26] !== last_debug_register_file_output_0_exp[26]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[26] = debug_register_file_output_0_expected_prev[26];
	end
	if (
		( debug_register_file_output_0_expected_prev[27] !== 1'bx ) && ( debug_register_file_output_0_prev[27] !== debug_register_file_output_0_expected_prev[27] )
		&& ((debug_register_file_output_0_expected_prev[27] !== last_debug_register_file_output_0_exp[27]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[27] = debug_register_file_output_0_expected_prev[27];
	end
	if (
		( debug_register_file_output_0_expected_prev[28] !== 1'bx ) && ( debug_register_file_output_0_prev[28] !== debug_register_file_output_0_expected_prev[28] )
		&& ((debug_register_file_output_0_expected_prev[28] !== last_debug_register_file_output_0_exp[28]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[28] = debug_register_file_output_0_expected_prev[28];
	end
	if (
		( debug_register_file_output_0_expected_prev[29] !== 1'bx ) && ( debug_register_file_output_0_prev[29] !== debug_register_file_output_0_expected_prev[29] )
		&& ((debug_register_file_output_0_expected_prev[29] !== last_debug_register_file_output_0_exp[29]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[29] = debug_register_file_output_0_expected_prev[29];
	end
	if (
		( debug_register_file_output_0_expected_prev[30] !== 1'bx ) && ( debug_register_file_output_0_prev[30] !== debug_register_file_output_0_expected_prev[30] )
		&& ((debug_register_file_output_0_expected_prev[30] !== last_debug_register_file_output_0_exp[30]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[30] = debug_register_file_output_0_expected_prev[30];
	end
	if (
		( debug_register_file_output_0_expected_prev[31] !== 1'bx ) && ( debug_register_file_output_0_prev[31] !== debug_register_file_output_0_expected_prev[31] )
		&& ((debug_register_file_output_0_expected_prev[31] !== last_debug_register_file_output_0_exp[31]) ||
			on_first_change[26])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_prev);
		nummismatches = nummismatches + 1;
		on_first_change[26] = 1'b0;
		last_debug_register_file_output_0_exp[31] = debug_register_file_output_0_expected_prev[31];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[0] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[0] !== debug_register_file_output_0_from_ID_expected_prev[0] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[0] !== last_debug_register_file_output_0_from_ID_exp[0]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[0] = debug_register_file_output_0_from_ID_expected_prev[0];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[1] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[1] !== debug_register_file_output_0_from_ID_expected_prev[1] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[1] !== last_debug_register_file_output_0_from_ID_exp[1]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[1] = debug_register_file_output_0_from_ID_expected_prev[1];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[2] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[2] !== debug_register_file_output_0_from_ID_expected_prev[2] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[2] !== last_debug_register_file_output_0_from_ID_exp[2]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[2] = debug_register_file_output_0_from_ID_expected_prev[2];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[3] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[3] !== debug_register_file_output_0_from_ID_expected_prev[3] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[3] !== last_debug_register_file_output_0_from_ID_exp[3]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[3] = debug_register_file_output_0_from_ID_expected_prev[3];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[4] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[4] !== debug_register_file_output_0_from_ID_expected_prev[4] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[4] !== last_debug_register_file_output_0_from_ID_exp[4]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[4] = debug_register_file_output_0_from_ID_expected_prev[4];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[5] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[5] !== debug_register_file_output_0_from_ID_expected_prev[5] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[5] !== last_debug_register_file_output_0_from_ID_exp[5]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[5] = debug_register_file_output_0_from_ID_expected_prev[5];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[6] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[6] !== debug_register_file_output_0_from_ID_expected_prev[6] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[6] !== last_debug_register_file_output_0_from_ID_exp[6]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[6] = debug_register_file_output_0_from_ID_expected_prev[6];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[7] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[7] !== debug_register_file_output_0_from_ID_expected_prev[7] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[7] !== last_debug_register_file_output_0_from_ID_exp[7]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[7] = debug_register_file_output_0_from_ID_expected_prev[7];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[8] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[8] !== debug_register_file_output_0_from_ID_expected_prev[8] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[8] !== last_debug_register_file_output_0_from_ID_exp[8]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[8] = debug_register_file_output_0_from_ID_expected_prev[8];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[9] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[9] !== debug_register_file_output_0_from_ID_expected_prev[9] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[9] !== last_debug_register_file_output_0_from_ID_exp[9]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[9] = debug_register_file_output_0_from_ID_expected_prev[9];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[10] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[10] !== debug_register_file_output_0_from_ID_expected_prev[10] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[10] !== last_debug_register_file_output_0_from_ID_exp[10]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[10] = debug_register_file_output_0_from_ID_expected_prev[10];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[11] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[11] !== debug_register_file_output_0_from_ID_expected_prev[11] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[11] !== last_debug_register_file_output_0_from_ID_exp[11]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[11] = debug_register_file_output_0_from_ID_expected_prev[11];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[12] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[12] !== debug_register_file_output_0_from_ID_expected_prev[12] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[12] !== last_debug_register_file_output_0_from_ID_exp[12]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[12] = debug_register_file_output_0_from_ID_expected_prev[12];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[13] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[13] !== debug_register_file_output_0_from_ID_expected_prev[13] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[13] !== last_debug_register_file_output_0_from_ID_exp[13]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[13] = debug_register_file_output_0_from_ID_expected_prev[13];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[14] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[14] !== debug_register_file_output_0_from_ID_expected_prev[14] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[14] !== last_debug_register_file_output_0_from_ID_exp[14]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[14] = debug_register_file_output_0_from_ID_expected_prev[14];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[15] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[15] !== debug_register_file_output_0_from_ID_expected_prev[15] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[15] !== last_debug_register_file_output_0_from_ID_exp[15]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[15] = debug_register_file_output_0_from_ID_expected_prev[15];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[16] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[16] !== debug_register_file_output_0_from_ID_expected_prev[16] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[16] !== last_debug_register_file_output_0_from_ID_exp[16]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[16] = debug_register_file_output_0_from_ID_expected_prev[16];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[17] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[17] !== debug_register_file_output_0_from_ID_expected_prev[17] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[17] !== last_debug_register_file_output_0_from_ID_exp[17]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[17] = debug_register_file_output_0_from_ID_expected_prev[17];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[18] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[18] !== debug_register_file_output_0_from_ID_expected_prev[18] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[18] !== last_debug_register_file_output_0_from_ID_exp[18]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[18] = debug_register_file_output_0_from_ID_expected_prev[18];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[19] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[19] !== debug_register_file_output_0_from_ID_expected_prev[19] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[19] !== last_debug_register_file_output_0_from_ID_exp[19]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[19] = debug_register_file_output_0_from_ID_expected_prev[19];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[20] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[20] !== debug_register_file_output_0_from_ID_expected_prev[20] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[20] !== last_debug_register_file_output_0_from_ID_exp[20]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[20] = debug_register_file_output_0_from_ID_expected_prev[20];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[21] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[21] !== debug_register_file_output_0_from_ID_expected_prev[21] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[21] !== last_debug_register_file_output_0_from_ID_exp[21]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[21] = debug_register_file_output_0_from_ID_expected_prev[21];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[22] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[22] !== debug_register_file_output_0_from_ID_expected_prev[22] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[22] !== last_debug_register_file_output_0_from_ID_exp[22]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[22] = debug_register_file_output_0_from_ID_expected_prev[22];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[23] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[23] !== debug_register_file_output_0_from_ID_expected_prev[23] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[23] !== last_debug_register_file_output_0_from_ID_exp[23]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[23] = debug_register_file_output_0_from_ID_expected_prev[23];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[24] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[24] !== debug_register_file_output_0_from_ID_expected_prev[24] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[24] !== last_debug_register_file_output_0_from_ID_exp[24]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[24] = debug_register_file_output_0_from_ID_expected_prev[24];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[25] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[25] !== debug_register_file_output_0_from_ID_expected_prev[25] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[25] !== last_debug_register_file_output_0_from_ID_exp[25]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[25] = debug_register_file_output_0_from_ID_expected_prev[25];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[26] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[26] !== debug_register_file_output_0_from_ID_expected_prev[26] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[26] !== last_debug_register_file_output_0_from_ID_exp[26]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[26] = debug_register_file_output_0_from_ID_expected_prev[26];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[27] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[27] !== debug_register_file_output_0_from_ID_expected_prev[27] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[27] !== last_debug_register_file_output_0_from_ID_exp[27]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[27] = debug_register_file_output_0_from_ID_expected_prev[27];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[28] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[28] !== debug_register_file_output_0_from_ID_expected_prev[28] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[28] !== last_debug_register_file_output_0_from_ID_exp[28]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[28] = debug_register_file_output_0_from_ID_expected_prev[28];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[29] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[29] !== debug_register_file_output_0_from_ID_expected_prev[29] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[29] !== last_debug_register_file_output_0_from_ID_exp[29]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[29] = debug_register_file_output_0_from_ID_expected_prev[29];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[30] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[30] !== debug_register_file_output_0_from_ID_expected_prev[30] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[30] !== last_debug_register_file_output_0_from_ID_exp[30]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[30] = debug_register_file_output_0_from_ID_expected_prev[30];
	end
	if (
		( debug_register_file_output_0_from_ID_expected_prev[31] !== 1'bx ) && ( debug_register_file_output_0_from_ID_prev[31] !== debug_register_file_output_0_from_ID_expected_prev[31] )
		&& ((debug_register_file_output_0_from_ID_expected_prev[31] !== last_debug_register_file_output_0_from_ID_exp[31]) ||
			on_first_change[27])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_0_from_ID[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_0_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_0_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[27] = 1'b0;
		last_debug_register_file_output_0_from_ID_exp[31] = debug_register_file_output_0_from_ID_expected_prev[31];
	end
	if (
		( debug_register_file_output_1_expected_prev[0] !== 1'bx ) && ( debug_register_file_output_1_prev[0] !== debug_register_file_output_1_expected_prev[0] )
		&& ((debug_register_file_output_1_expected_prev[0] !== last_debug_register_file_output_1_exp[0]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[0] = debug_register_file_output_1_expected_prev[0];
	end
	if (
		( debug_register_file_output_1_expected_prev[1] !== 1'bx ) && ( debug_register_file_output_1_prev[1] !== debug_register_file_output_1_expected_prev[1] )
		&& ((debug_register_file_output_1_expected_prev[1] !== last_debug_register_file_output_1_exp[1]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[1] = debug_register_file_output_1_expected_prev[1];
	end
	if (
		( debug_register_file_output_1_expected_prev[2] !== 1'bx ) && ( debug_register_file_output_1_prev[2] !== debug_register_file_output_1_expected_prev[2] )
		&& ((debug_register_file_output_1_expected_prev[2] !== last_debug_register_file_output_1_exp[2]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[2] = debug_register_file_output_1_expected_prev[2];
	end
	if (
		( debug_register_file_output_1_expected_prev[3] !== 1'bx ) && ( debug_register_file_output_1_prev[3] !== debug_register_file_output_1_expected_prev[3] )
		&& ((debug_register_file_output_1_expected_prev[3] !== last_debug_register_file_output_1_exp[3]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[3] = debug_register_file_output_1_expected_prev[3];
	end
	if (
		( debug_register_file_output_1_expected_prev[4] !== 1'bx ) && ( debug_register_file_output_1_prev[4] !== debug_register_file_output_1_expected_prev[4] )
		&& ((debug_register_file_output_1_expected_prev[4] !== last_debug_register_file_output_1_exp[4]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[4] = debug_register_file_output_1_expected_prev[4];
	end
	if (
		( debug_register_file_output_1_expected_prev[5] !== 1'bx ) && ( debug_register_file_output_1_prev[5] !== debug_register_file_output_1_expected_prev[5] )
		&& ((debug_register_file_output_1_expected_prev[5] !== last_debug_register_file_output_1_exp[5]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[5] = debug_register_file_output_1_expected_prev[5];
	end
	if (
		( debug_register_file_output_1_expected_prev[6] !== 1'bx ) && ( debug_register_file_output_1_prev[6] !== debug_register_file_output_1_expected_prev[6] )
		&& ((debug_register_file_output_1_expected_prev[6] !== last_debug_register_file_output_1_exp[6]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[6] = debug_register_file_output_1_expected_prev[6];
	end
	if (
		( debug_register_file_output_1_expected_prev[7] !== 1'bx ) && ( debug_register_file_output_1_prev[7] !== debug_register_file_output_1_expected_prev[7] )
		&& ((debug_register_file_output_1_expected_prev[7] !== last_debug_register_file_output_1_exp[7]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[7] = debug_register_file_output_1_expected_prev[7];
	end
	if (
		( debug_register_file_output_1_expected_prev[8] !== 1'bx ) && ( debug_register_file_output_1_prev[8] !== debug_register_file_output_1_expected_prev[8] )
		&& ((debug_register_file_output_1_expected_prev[8] !== last_debug_register_file_output_1_exp[8]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[8] = debug_register_file_output_1_expected_prev[8];
	end
	if (
		( debug_register_file_output_1_expected_prev[9] !== 1'bx ) && ( debug_register_file_output_1_prev[9] !== debug_register_file_output_1_expected_prev[9] )
		&& ((debug_register_file_output_1_expected_prev[9] !== last_debug_register_file_output_1_exp[9]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[9] = debug_register_file_output_1_expected_prev[9];
	end
	if (
		( debug_register_file_output_1_expected_prev[10] !== 1'bx ) && ( debug_register_file_output_1_prev[10] !== debug_register_file_output_1_expected_prev[10] )
		&& ((debug_register_file_output_1_expected_prev[10] !== last_debug_register_file_output_1_exp[10]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[10] = debug_register_file_output_1_expected_prev[10];
	end
	if (
		( debug_register_file_output_1_expected_prev[11] !== 1'bx ) && ( debug_register_file_output_1_prev[11] !== debug_register_file_output_1_expected_prev[11] )
		&& ((debug_register_file_output_1_expected_prev[11] !== last_debug_register_file_output_1_exp[11]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[11] = debug_register_file_output_1_expected_prev[11];
	end
	if (
		( debug_register_file_output_1_expected_prev[12] !== 1'bx ) && ( debug_register_file_output_1_prev[12] !== debug_register_file_output_1_expected_prev[12] )
		&& ((debug_register_file_output_1_expected_prev[12] !== last_debug_register_file_output_1_exp[12]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[12] = debug_register_file_output_1_expected_prev[12];
	end
	if (
		( debug_register_file_output_1_expected_prev[13] !== 1'bx ) && ( debug_register_file_output_1_prev[13] !== debug_register_file_output_1_expected_prev[13] )
		&& ((debug_register_file_output_1_expected_prev[13] !== last_debug_register_file_output_1_exp[13]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[13] = debug_register_file_output_1_expected_prev[13];
	end
	if (
		( debug_register_file_output_1_expected_prev[14] !== 1'bx ) && ( debug_register_file_output_1_prev[14] !== debug_register_file_output_1_expected_prev[14] )
		&& ((debug_register_file_output_1_expected_prev[14] !== last_debug_register_file_output_1_exp[14]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[14] = debug_register_file_output_1_expected_prev[14];
	end
	if (
		( debug_register_file_output_1_expected_prev[15] !== 1'bx ) && ( debug_register_file_output_1_prev[15] !== debug_register_file_output_1_expected_prev[15] )
		&& ((debug_register_file_output_1_expected_prev[15] !== last_debug_register_file_output_1_exp[15]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[15] = debug_register_file_output_1_expected_prev[15];
	end
	if (
		( debug_register_file_output_1_expected_prev[16] !== 1'bx ) && ( debug_register_file_output_1_prev[16] !== debug_register_file_output_1_expected_prev[16] )
		&& ((debug_register_file_output_1_expected_prev[16] !== last_debug_register_file_output_1_exp[16]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[16] = debug_register_file_output_1_expected_prev[16];
	end
	if (
		( debug_register_file_output_1_expected_prev[17] !== 1'bx ) && ( debug_register_file_output_1_prev[17] !== debug_register_file_output_1_expected_prev[17] )
		&& ((debug_register_file_output_1_expected_prev[17] !== last_debug_register_file_output_1_exp[17]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[17] = debug_register_file_output_1_expected_prev[17];
	end
	if (
		( debug_register_file_output_1_expected_prev[18] !== 1'bx ) && ( debug_register_file_output_1_prev[18] !== debug_register_file_output_1_expected_prev[18] )
		&& ((debug_register_file_output_1_expected_prev[18] !== last_debug_register_file_output_1_exp[18]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[18] = debug_register_file_output_1_expected_prev[18];
	end
	if (
		( debug_register_file_output_1_expected_prev[19] !== 1'bx ) && ( debug_register_file_output_1_prev[19] !== debug_register_file_output_1_expected_prev[19] )
		&& ((debug_register_file_output_1_expected_prev[19] !== last_debug_register_file_output_1_exp[19]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[19] = debug_register_file_output_1_expected_prev[19];
	end
	if (
		( debug_register_file_output_1_expected_prev[20] !== 1'bx ) && ( debug_register_file_output_1_prev[20] !== debug_register_file_output_1_expected_prev[20] )
		&& ((debug_register_file_output_1_expected_prev[20] !== last_debug_register_file_output_1_exp[20]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[20] = debug_register_file_output_1_expected_prev[20];
	end
	if (
		( debug_register_file_output_1_expected_prev[21] !== 1'bx ) && ( debug_register_file_output_1_prev[21] !== debug_register_file_output_1_expected_prev[21] )
		&& ((debug_register_file_output_1_expected_prev[21] !== last_debug_register_file_output_1_exp[21]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[21] = debug_register_file_output_1_expected_prev[21];
	end
	if (
		( debug_register_file_output_1_expected_prev[22] !== 1'bx ) && ( debug_register_file_output_1_prev[22] !== debug_register_file_output_1_expected_prev[22] )
		&& ((debug_register_file_output_1_expected_prev[22] !== last_debug_register_file_output_1_exp[22]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[22] = debug_register_file_output_1_expected_prev[22];
	end
	if (
		( debug_register_file_output_1_expected_prev[23] !== 1'bx ) && ( debug_register_file_output_1_prev[23] !== debug_register_file_output_1_expected_prev[23] )
		&& ((debug_register_file_output_1_expected_prev[23] !== last_debug_register_file_output_1_exp[23]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[23] = debug_register_file_output_1_expected_prev[23];
	end
	if (
		( debug_register_file_output_1_expected_prev[24] !== 1'bx ) && ( debug_register_file_output_1_prev[24] !== debug_register_file_output_1_expected_prev[24] )
		&& ((debug_register_file_output_1_expected_prev[24] !== last_debug_register_file_output_1_exp[24]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[24] = debug_register_file_output_1_expected_prev[24];
	end
	if (
		( debug_register_file_output_1_expected_prev[25] !== 1'bx ) && ( debug_register_file_output_1_prev[25] !== debug_register_file_output_1_expected_prev[25] )
		&& ((debug_register_file_output_1_expected_prev[25] !== last_debug_register_file_output_1_exp[25]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[25] = debug_register_file_output_1_expected_prev[25];
	end
	if (
		( debug_register_file_output_1_expected_prev[26] !== 1'bx ) && ( debug_register_file_output_1_prev[26] !== debug_register_file_output_1_expected_prev[26] )
		&& ((debug_register_file_output_1_expected_prev[26] !== last_debug_register_file_output_1_exp[26]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[26] = debug_register_file_output_1_expected_prev[26];
	end
	if (
		( debug_register_file_output_1_expected_prev[27] !== 1'bx ) && ( debug_register_file_output_1_prev[27] !== debug_register_file_output_1_expected_prev[27] )
		&& ((debug_register_file_output_1_expected_prev[27] !== last_debug_register_file_output_1_exp[27]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[27] = debug_register_file_output_1_expected_prev[27];
	end
	if (
		( debug_register_file_output_1_expected_prev[28] !== 1'bx ) && ( debug_register_file_output_1_prev[28] !== debug_register_file_output_1_expected_prev[28] )
		&& ((debug_register_file_output_1_expected_prev[28] !== last_debug_register_file_output_1_exp[28]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[28] = debug_register_file_output_1_expected_prev[28];
	end
	if (
		( debug_register_file_output_1_expected_prev[29] !== 1'bx ) && ( debug_register_file_output_1_prev[29] !== debug_register_file_output_1_expected_prev[29] )
		&& ((debug_register_file_output_1_expected_prev[29] !== last_debug_register_file_output_1_exp[29]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[29] = debug_register_file_output_1_expected_prev[29];
	end
	if (
		( debug_register_file_output_1_expected_prev[30] !== 1'bx ) && ( debug_register_file_output_1_prev[30] !== debug_register_file_output_1_expected_prev[30] )
		&& ((debug_register_file_output_1_expected_prev[30] !== last_debug_register_file_output_1_exp[30]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[30] = debug_register_file_output_1_expected_prev[30];
	end
	if (
		( debug_register_file_output_1_expected_prev[31] !== 1'bx ) && ( debug_register_file_output_1_prev[31] !== debug_register_file_output_1_expected_prev[31] )
		&& ((debug_register_file_output_1_expected_prev[31] !== last_debug_register_file_output_1_exp[31]) ||
			on_first_change[28])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_prev);
		nummismatches = nummismatches + 1;
		on_first_change[28] = 1'b0;
		last_debug_register_file_output_1_exp[31] = debug_register_file_output_1_expected_prev[31];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[0] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[0] !== debug_register_file_output_1_from_ID_expected_prev[0] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[0] !== last_debug_register_file_output_1_from_ID_exp[0]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[0] = debug_register_file_output_1_from_ID_expected_prev[0];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[1] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[1] !== debug_register_file_output_1_from_ID_expected_prev[1] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[1] !== last_debug_register_file_output_1_from_ID_exp[1]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[1] = debug_register_file_output_1_from_ID_expected_prev[1];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[2] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[2] !== debug_register_file_output_1_from_ID_expected_prev[2] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[2] !== last_debug_register_file_output_1_from_ID_exp[2]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[2] = debug_register_file_output_1_from_ID_expected_prev[2];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[3] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[3] !== debug_register_file_output_1_from_ID_expected_prev[3] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[3] !== last_debug_register_file_output_1_from_ID_exp[3]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[3] = debug_register_file_output_1_from_ID_expected_prev[3];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[4] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[4] !== debug_register_file_output_1_from_ID_expected_prev[4] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[4] !== last_debug_register_file_output_1_from_ID_exp[4]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[4] = debug_register_file_output_1_from_ID_expected_prev[4];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[5] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[5] !== debug_register_file_output_1_from_ID_expected_prev[5] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[5] !== last_debug_register_file_output_1_from_ID_exp[5]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[5] = debug_register_file_output_1_from_ID_expected_prev[5];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[6] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[6] !== debug_register_file_output_1_from_ID_expected_prev[6] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[6] !== last_debug_register_file_output_1_from_ID_exp[6]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[6] = debug_register_file_output_1_from_ID_expected_prev[6];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[7] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[7] !== debug_register_file_output_1_from_ID_expected_prev[7] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[7] !== last_debug_register_file_output_1_from_ID_exp[7]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[7] = debug_register_file_output_1_from_ID_expected_prev[7];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[8] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[8] !== debug_register_file_output_1_from_ID_expected_prev[8] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[8] !== last_debug_register_file_output_1_from_ID_exp[8]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[8] = debug_register_file_output_1_from_ID_expected_prev[8];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[9] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[9] !== debug_register_file_output_1_from_ID_expected_prev[9] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[9] !== last_debug_register_file_output_1_from_ID_exp[9]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[9] = debug_register_file_output_1_from_ID_expected_prev[9];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[10] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[10] !== debug_register_file_output_1_from_ID_expected_prev[10] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[10] !== last_debug_register_file_output_1_from_ID_exp[10]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[10] = debug_register_file_output_1_from_ID_expected_prev[10];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[11] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[11] !== debug_register_file_output_1_from_ID_expected_prev[11] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[11] !== last_debug_register_file_output_1_from_ID_exp[11]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[11] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[11] = debug_register_file_output_1_from_ID_expected_prev[11];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[12] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[12] !== debug_register_file_output_1_from_ID_expected_prev[12] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[12] !== last_debug_register_file_output_1_from_ID_exp[12]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[12] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[12] = debug_register_file_output_1_from_ID_expected_prev[12];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[13] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[13] !== debug_register_file_output_1_from_ID_expected_prev[13] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[13] !== last_debug_register_file_output_1_from_ID_exp[13]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[13] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[13] = debug_register_file_output_1_from_ID_expected_prev[13];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[14] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[14] !== debug_register_file_output_1_from_ID_expected_prev[14] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[14] !== last_debug_register_file_output_1_from_ID_exp[14]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[14] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[14] = debug_register_file_output_1_from_ID_expected_prev[14];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[15] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[15] !== debug_register_file_output_1_from_ID_expected_prev[15] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[15] !== last_debug_register_file_output_1_from_ID_exp[15]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[15] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[15] = debug_register_file_output_1_from_ID_expected_prev[15];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[16] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[16] !== debug_register_file_output_1_from_ID_expected_prev[16] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[16] !== last_debug_register_file_output_1_from_ID_exp[16]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[16] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[16] = debug_register_file_output_1_from_ID_expected_prev[16];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[17] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[17] !== debug_register_file_output_1_from_ID_expected_prev[17] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[17] !== last_debug_register_file_output_1_from_ID_exp[17]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[17] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[17] = debug_register_file_output_1_from_ID_expected_prev[17];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[18] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[18] !== debug_register_file_output_1_from_ID_expected_prev[18] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[18] !== last_debug_register_file_output_1_from_ID_exp[18]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[18] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[18] = debug_register_file_output_1_from_ID_expected_prev[18];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[19] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[19] !== debug_register_file_output_1_from_ID_expected_prev[19] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[19] !== last_debug_register_file_output_1_from_ID_exp[19]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[19] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[19] = debug_register_file_output_1_from_ID_expected_prev[19];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[20] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[20] !== debug_register_file_output_1_from_ID_expected_prev[20] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[20] !== last_debug_register_file_output_1_from_ID_exp[20]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[20] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[20] = debug_register_file_output_1_from_ID_expected_prev[20];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[21] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[21] !== debug_register_file_output_1_from_ID_expected_prev[21] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[21] !== last_debug_register_file_output_1_from_ID_exp[21]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[21] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[21] = debug_register_file_output_1_from_ID_expected_prev[21];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[22] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[22] !== debug_register_file_output_1_from_ID_expected_prev[22] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[22] !== last_debug_register_file_output_1_from_ID_exp[22]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[22] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[22] = debug_register_file_output_1_from_ID_expected_prev[22];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[23] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[23] !== debug_register_file_output_1_from_ID_expected_prev[23] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[23] !== last_debug_register_file_output_1_from_ID_exp[23]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[23] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[23] = debug_register_file_output_1_from_ID_expected_prev[23];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[24] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[24] !== debug_register_file_output_1_from_ID_expected_prev[24] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[24] !== last_debug_register_file_output_1_from_ID_exp[24]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[24] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[24] = debug_register_file_output_1_from_ID_expected_prev[24];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[25] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[25] !== debug_register_file_output_1_from_ID_expected_prev[25] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[25] !== last_debug_register_file_output_1_from_ID_exp[25]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[25] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[25] = debug_register_file_output_1_from_ID_expected_prev[25];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[26] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[26] !== debug_register_file_output_1_from_ID_expected_prev[26] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[26] !== last_debug_register_file_output_1_from_ID_exp[26]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[26] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[26] = debug_register_file_output_1_from_ID_expected_prev[26];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[27] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[27] !== debug_register_file_output_1_from_ID_expected_prev[27] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[27] !== last_debug_register_file_output_1_from_ID_exp[27]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[27] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[27] = debug_register_file_output_1_from_ID_expected_prev[27];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[28] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[28] !== debug_register_file_output_1_from_ID_expected_prev[28] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[28] !== last_debug_register_file_output_1_from_ID_exp[28]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[28] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[28] = debug_register_file_output_1_from_ID_expected_prev[28];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[29] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[29] !== debug_register_file_output_1_from_ID_expected_prev[29] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[29] !== last_debug_register_file_output_1_from_ID_exp[29]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[29] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[29] = debug_register_file_output_1_from_ID_expected_prev[29];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[30] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[30] !== debug_register_file_output_1_from_ID_expected_prev[30] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[30] !== last_debug_register_file_output_1_from_ID_exp[30]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[30] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[30] = debug_register_file_output_1_from_ID_expected_prev[30];
	end
	if (
		( debug_register_file_output_1_from_ID_expected_prev[31] !== 1'bx ) && ( debug_register_file_output_1_from_ID_prev[31] !== debug_register_file_output_1_from_ID_expected_prev[31] )
		&& ((debug_register_file_output_1_from_ID_expected_prev[31] !== last_debug_register_file_output_1_from_ID_exp[31]) ||
			on_first_change[29])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port debug_register_file_output_1_from_ID[31] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", debug_register_file_output_1_from_ID_expected_prev);
		$display ("     Real value = %b", debug_register_file_output_1_from_ID_prev);
		nummismatches = nummismatches + 1;
		on_first_change[29] = 1'b0;
		last_debug_register_file_output_1_from_ID_exp[31] = debug_register_file_output_1_from_ID_expected_prev[31];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module microcontroller_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg reset;
// wires                                               
wire [31:0] debug_ALU_input_0;
wire [31:0] debug_ALU_input_1;
wire [3:0] debug_ALU_operation;
wire [31:0] debug_ALU_output;
wire [31:0] debug_ALU_output_from_EX;
wire [31:0] debug_ALU_output_from_MEM;
wire [2:0] debug_controller_state;
wire [1:0] debug_forward_mux_0;
wire [1:0] debug_forward_mux_1;
wire [31:0] debug_immediate;
wire [31:0] debug_instruction;
wire [1:0] debug_mux0_sel;
wire [1:0] debug_mux0_sel_from_MEM;
wire [2:0] debug_PC_operation;
wire [31:0] debug_pc_output;
wire [4:0] debug_reg_file_read_address_0;
wire [4:0] debug_reg_file_read_address_0_ID_EXE;
wire [4:0] debug_reg_file_read_address_1;
wire [4:0] debug_reg_file_write_address_EX_MEM;
wire [4:0] debug_reg_file_write_address_from_MEM;
wire debug_reg_file_write_from_MEM;
wire debug_regfile_write;
wire [31:0] debug_regfile_x1_output;
wire [31:0] debug_regfile_x2_output;
wire [31:0] debug_regfile_x31_output;
wire [31:0] debug_register_file_output_0;
wire [31:0] debug_register_file_output_0_from_ID;
wire [31:0] debug_register_file_output_1;
wire [31:0] debug_register_file_output_1_from_ID;

wire sampler;                             

// assign statements (if any)                          
microcontroller i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.debug_ALU_input_0(debug_ALU_input_0),
	.debug_ALU_input_1(debug_ALU_input_1),
	.debug_ALU_operation(debug_ALU_operation),
	.debug_ALU_output(debug_ALU_output),
	.debug_ALU_output_from_EX(debug_ALU_output_from_EX),
	.debug_ALU_output_from_MEM(debug_ALU_output_from_MEM),
	.debug_controller_state(debug_controller_state),
	.debug_forward_mux_0(debug_forward_mux_0),
	.debug_forward_mux_1(debug_forward_mux_1),
	.debug_immediate(debug_immediate),
	.debug_instruction(debug_instruction),
	.debug_mux0_sel(debug_mux0_sel),
	.debug_mux0_sel_from_MEM(debug_mux0_sel_from_MEM),
	.debug_PC_operation(debug_PC_operation),
	.debug_pc_output(debug_pc_output),
	.debug_reg_file_read_address_0(debug_reg_file_read_address_0),
	.debug_reg_file_read_address_0_ID_EXE(debug_reg_file_read_address_0_ID_EXE),
	.debug_reg_file_read_address_1(debug_reg_file_read_address_1),
	.debug_reg_file_write_address_EX_MEM(debug_reg_file_write_address_EX_MEM),
	.debug_reg_file_write_address_from_MEM(debug_reg_file_write_address_from_MEM),
	.debug_reg_file_write_from_MEM(debug_reg_file_write_from_MEM),
	.debug_regfile_write(debug_regfile_write),
	.debug_regfile_x1_output(debug_regfile_x1_output),
	.debug_regfile_x2_output(debug_regfile_x2_output),
	.debug_regfile_x31_output(debug_regfile_x31_output),
	.debug_register_file_output_0(debug_register_file_output_0),
	.debug_register_file_output_0_from_ID(debug_register_file_output_0_from_ID),
	.debug_register_file_output_1(debug_register_file_output_1),
	.debug_register_file_output_1_from_ID(debug_register_file_output_1_from_ID),
	.reset(reset)
);

// clock
always
begin
	clock = 1'b0;
	clock = #5000 1'b1;
	#5000;
end 

// reset
initial
begin
	reset = 1'b0;
end 

microcontroller_vlg_sample_tst tb_sample (
	.clock(clock),
	.reset(reset),
	.sampler_tx(sampler)
);

microcontroller_vlg_check_tst tb_out(
	.debug_ALU_input_0(debug_ALU_input_0),
	.debug_ALU_input_1(debug_ALU_input_1),
	.debug_ALU_operation(debug_ALU_operation),
	.debug_ALU_output(debug_ALU_output),
	.debug_ALU_output_from_EX(debug_ALU_output_from_EX),
	.debug_ALU_output_from_MEM(debug_ALU_output_from_MEM),
	.debug_controller_state(debug_controller_state),
	.debug_forward_mux_0(debug_forward_mux_0),
	.debug_forward_mux_1(debug_forward_mux_1),
	.debug_immediate(debug_immediate),
	.debug_instruction(debug_instruction),
	.debug_mux0_sel(debug_mux0_sel),
	.debug_mux0_sel_from_MEM(debug_mux0_sel_from_MEM),
	.debug_PC_operation(debug_PC_operation),
	.debug_pc_output(debug_pc_output),
	.debug_reg_file_read_address_0(debug_reg_file_read_address_0),
	.debug_reg_file_read_address_0_ID_EXE(debug_reg_file_read_address_0_ID_EXE),
	.debug_reg_file_read_address_1(debug_reg_file_read_address_1),
	.debug_reg_file_write_address_EX_MEM(debug_reg_file_write_address_EX_MEM),
	.debug_reg_file_write_address_from_MEM(debug_reg_file_write_address_from_MEM),
	.debug_reg_file_write_from_MEM(debug_reg_file_write_from_MEM),
	.debug_regfile_write(debug_regfile_write),
	.debug_regfile_x1_output(debug_regfile_x1_output),
	.debug_regfile_x2_output(debug_regfile_x2_output),
	.debug_regfile_x31_output(debug_regfile_x31_output),
	.debug_register_file_output_0(debug_register_file_output_0),
	.debug_register_file_output_0_from_ID(debug_register_file_output_0_from_ID),
	.debug_register_file_output_1(debug_register_file_output_1),
	.debug_register_file_output_1_from_ID(debug_register_file_output_1_from_ID),
	.sampler_rx(sampler)
);
endmodule

